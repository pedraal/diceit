{
  "id": "cc1eb748bd39eae7b883b08d2db4a9b8",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.4",
  "solcLongVersion": "0.8.4+commit.c7e474f2",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/DiceIt.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\ncontract DiceIt {\n    event GameStageChange(\n        address indexed _from,\n        uint256 indexed index,\n        Stage indexed _stage\n    );\n\n    event GameTurnPlayed(\n        address indexed _from,\n        uint256 indexed index,\n        uint256 _turn,\n        uint256 _score\n    );\n\n    enum Stage {\n        Reg,\n        Run,\n        Done\n    }\n    enum CurrentPlayer {\n        Owner,\n        Challenger\n    }\n\n    struct Game {\n        uint256 id;\n        address owner;\n        address challenger;\n        Stage stage;\n        uint256 maxScore;\n        uint256 maxTurn;\n        CurrentPlayer currentPlayer;\n        Player ownerPlayer;\n        Player challengerPlayer;\n        address winner;\n        uint256 bet;\n    }\n\n    struct Player {\n        uint256 turn;\n        uint256 score;\n        bool stop;\n    }\n\n    uint256 currentGameIndex = 0;\n    mapping(uint256 => Game) public games;\n\n    function createGame(\n        address _challenger,\n        uint256 _maxScore,\n        uint256 _maxTurn\n    ) public payable {\n        require(msg.value > 0);\n\n        games[currentGameIndex] = Game(\n            currentGameIndex,\n            msg.sender,\n            _challenger,\n            Stage.Reg,\n            _maxScore,\n            _maxTurn,\n            CurrentPlayer.Challenger,\n            Player(0, 0, false),\n            Player(0, 0, false),\n            address(0),\n            msg.value\n        );\n        emit GameStageChange(msg.sender, currentGameIndex, Stage.Reg);\n        currentGameIndex++;\n    }\n\n    modifier isStage(uint256 gameId, Stage stage) {\n        require(games[gameId].stage == stage);\n        _;\n    }\n\n    function challengerBet(uint256 gameId)\n        public\n        payable\n        isStage(gameId, Stage.Reg)\n    {\n        Game storage game = games[gameId];\n        require(msg.value == game.bet);\n\n        game.stage = Stage.Run;\n        emit GameStageChange(msg.sender, gameId, Stage.Run);\n    }\n\n    modifier isPlayerTurn(uint256 gameId, address player) {\n        Game memory game = games[gameId];\n        uint256 playerIndex;\n        if (player == game.owner) {\n            require(\n                CurrentPlayer.Owner == game.currentPlayer &&\n                    !game.ownerPlayer.stop\n            );\n        } else if (player == game.challenger) {\n            require(\n                CurrentPlayer.Challenger == game.currentPlayer &&\n                    !game.challengerPlayer.stop\n            );\n        } else {\n            revert();\n        }\n        _;\n    }\n\n    function playTurn(uint256 gameId, bool draw)\n        public\n        payable\n        isStage(gameId, Stage.Run)\n        isPlayerTurn(gameId, msg.sender)\n    {\n        uint256 randomInt = random();\n        Game storage game = games[gameId];\n        Player storage player;\n        Player storage opponent;\n        if (msg.sender == game.owner) {\n            player = game.ownerPlayer;\n            opponent = game.challengerPlayer;\n        } else if (msg.sender == game.challenger) {\n            player = game.challengerPlayer;\n            opponent = game.ownerPlayer;\n        } else revert();\n\n        if (draw) player.score += randomInt;\n        player.turn++;\n\n        if (\n            !draw || player.score > game.maxScore || player.turn >= game.maxTurn\n        ) player.stop = true;\n\n        if (msg.sender == game.owner && !opponent.stop) {\n            game.currentPlayer = CurrentPlayer.Challenger;\n        } else if (msg.sender == game.challenger && !opponent.stop) {\n            game.currentPlayer = CurrentPlayer.Owner;\n        }\n\n        if (game.ownerPlayer.stop && game.challengerPlayer.stop) {\n            game.stage = Stage.Done;\n            game.winner = setWinner(gameId);\n\n            if (game.winner == address(0)) {\n                payable(game.owner).transfer(game.bet);\n                payable(game.challenger).transfer(game.bet);\n            } else {\n                payable(game.winner).transfer(game.bet * 2);\n            }\n            emit GameTurnPlayed(msg.sender, gameId, player.turn, player.score);\n            emit GameStageChange(msg.sender, gameId, Stage.Done);\n        }\n    }\n\n    // This is not a proper random generation method but it will do the job for this demo project\n    function random() private view returns (uint256) {\n        return\n            (uint256(\n                keccak256(\n                    abi.encodePacked(\n                        block.difficulty,\n                        block.timestamp,\n                        uint256(6)\n                    )\n                )\n            ) % 6) + 1;\n    }\n\n    function setWinner(uint256 gameId)\n        public\n        view\n        isStage(gameId, Stage.Done)\n        returns (address winner)\n    {\n        Game memory game = games[gameId];\n\n        if (\n            (game.ownerPlayer.score <= game.maxScore &&\n                game.challengerPlayer.score > game.maxScore) ||\n            (game.ownerPlayer.score <= game.maxScore &&\n                game.ownerPlayer.score > game.challengerPlayer.score)\n        ) {\n            return game.owner;\n        } else if (\n            (game.challengerPlayer.score <= game.maxScore &&\n                game.ownerPlayer.score > game.maxScore) ||\n            (game.challengerPlayer.score <= game.maxScore &&\n                game.ownerPlayer.score < game.challengerPlayer.score)\n        ) {\n            return game.challenger;\n        } else {\n            return address(0);\n        }\n    }\n\n    function fetchMyGames() public view returns (Game[] memory _myGames) {\n        uint256 totalGameCount = currentGameIndex;\n        uint256 gameCount = 0;\n        uint256 currentIndex = 0;\n\n        for (uint256 i = 0; i < totalGameCount; i++) {\n            if (\n                games[i].owner == msg.sender ||\n                games[i].challenger == msg.sender\n            ) {\n                gameCount += 1;\n            }\n        }\n\n        Game[] memory myGames = new Game[](gameCount);\n        for (uint256 i = 0; i < totalGameCount; i++) {\n            if (\n                games[i].owner == msg.sender ||\n                games[i].challenger == msg.sender\n            ) {\n                uint256 currentId = i;\n                Game storage currentItem = games[currentId];\n                myGames[currentIndex] = currentItem;\n                currentIndex += 1;\n            }\n        }\n\n        return myGames;\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/DiceIt.sol": {
        "DiceIt": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "_from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "enum DiceIt.Stage",
                  "name": "_stage",
                  "type": "uint8"
                }
              ],
              "name": "GameStageChange",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "_from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "_turn",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "_score",
                  "type": "uint256"
                }
              ],
              "name": "GameTurnPlayed",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "gameId",
                  "type": "uint256"
                }
              ],
              "name": "challengerBet",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_challenger",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_maxScore",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_maxTurn",
                  "type": "uint256"
                }
              ],
              "name": "createGame",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "fetchMyGames",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "owner",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "challenger",
                      "type": "address"
                    },
                    {
                      "internalType": "enum DiceIt.Stage",
                      "name": "stage",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxScore",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxTurn",
                      "type": "uint256"
                    },
                    {
                      "internalType": "enum DiceIt.CurrentPlayer",
                      "name": "currentPlayer",
                      "type": "uint8"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "turn",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "score",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bool",
                          "name": "stop",
                          "type": "bool"
                        }
                      ],
                      "internalType": "struct DiceIt.Player",
                      "name": "ownerPlayer",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "turn",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "score",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bool",
                          "name": "stop",
                          "type": "bool"
                        }
                      ],
                      "internalType": "struct DiceIt.Player",
                      "name": "challengerPlayer",
                      "type": "tuple"
                    },
                    {
                      "internalType": "address",
                      "name": "winner",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "bet",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct DiceIt.Game[]",
                  "name": "_myGames",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "games",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "challenger",
                  "type": "address"
                },
                {
                  "internalType": "enum DiceIt.Stage",
                  "name": "stage",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "maxScore",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxTurn",
                  "type": "uint256"
                },
                {
                  "internalType": "enum DiceIt.CurrentPlayer",
                  "name": "currentPlayer",
                  "type": "uint8"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "turn",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "score",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "stop",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct DiceIt.Player",
                  "name": "ownerPlayer",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "turn",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "score",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "stop",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct DiceIt.Player",
                  "name": "challengerPlayer",
                  "type": "tuple"
                },
                {
                  "internalType": "address",
                  "name": "winner",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "bet",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "gameId",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "draw",
                  "type": "bool"
                }
              ],
              "name": "playTurn",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "gameId",
                  "type": "uint256"
                }
              ],
              "name": "setWinner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "winner",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60806040526000805534801561001457600080fd5b506127cd806100246000396000f3fe6080604052600436106100555760003560e01c80630df716021461005a578063117a5b90146100975780632d76375d146100de5780633b17469e146100fa57806387fb99f614610116578063a40bf06114610132575b600080fd5b34801561006657600080fd5b50610081600480360381019061007c9190612071565b61015d565b60405161008e919061238d565b60405180910390f35b3480156100a357600080fd5b506100be60048036038101906100b99190612071565b6105ca565b6040516100d59b9a999897969594939291906123ca565b60405180910390f35b6100f860048036038101906100f3919061209a565b610710565b005b610114600480360381019061010f9190612022565b6112c6565b005b610130600480360381019061012b9190612071565b6116f0565b005b34801561013e57600080fd5b50610147611890565b60405161015491906123a8565b60405180910390f35b600081600280600281111561019b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6001600084815260200190815260200160002060020160149054906101000a900460ff1660028111156101f7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461020157600080fd5b60006001600086815260200190815260200160002060405180610160016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900460ff166002811115610323577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281111561035b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1660018111156103be577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60018111156103f6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016006820160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff16151515158152505081526020016009820160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff1615151515815250508152602001600c820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600d82015481525050905080608001518160e00151602001511115801561050a5750806080015181610100015160200151115b8061053d575080608001518160e00151602001511115801561053c5750806101000151602001518160e0015160200151115b5b1561054f5780602001519350506105c3565b80608001518161010001516020015111158015610577575080608001518160e0015160200151115b806105ab5750806080015181610100015160200151111580156105aa5750806101000151602001518160e0015160200151105b5b156105bd5780604001519350506105c3565b60009350505b5050919050565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160149054906101000a900460ff16908060030154908060040154908060050160009054906101000a900460ff16908060060160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff161515151581525050908060090160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff1615151515815250509080600c0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600d015490508b565b81600180600281111561074c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6001600084815260200190815260200160002060020160149054906101000a900460ff1660028111156107a8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146107b257600080fd5b833360006001600084815260200190815260200160002060405180610160016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900460ff1660028111156108d6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281111561090e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff166001811115610971577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60018111156109a9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016006820160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff16151515158152505081526020016009820160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff1615151515815250508152602001600c820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600d8201548152505090506000816020015173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b67578160c001516001811115610b0c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60006001811115610b46577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b148015610b5957508160e0015160400151155b610b6257600080fd5b610c3d565b816040015173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c37578160c001516001811115610bdc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600180811115610c15577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b148015610c29575081610100015160400151155b610c3257600080fd5b610c3c565b600080fd5b5b6000610c47611e5a565b90506000600160008b815260200190815260200160002090506000808260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610ccc57826006019150826009019050610d3b565b8260020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610d3557826009019150826006019050610d3a565b600080fd5b5b8a15610d5d5783826001016000828254610d5591906124d7565b925050819055505b816000016000815480929190610d7290612619565b91905055508a1580610d8b575082600301548260010154115b80610d9e57508260040154826000015410155b15610dc15760018260020160006101000a81548160ff0219169083151502179055505b8260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148015610e2f57508060020160009054906101000a900460ff16155b15610e8c5760018360050160006101000a81548160ff02191690836001811115610e82577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550610f54565b8260020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148015610efa57508060020160009054906101000a900460ff16155b15610f535760008360050160006101000a81548160ff02191690836001811115610f4d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505b5b8260060160020160009054906101000a900460ff168015610f8657508260090160020160009054906101000a900460ff165b156112b85760028360020160146101000a81548160ff02191690836002811115610fd9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550610fe78c61015d565b83600c0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff1683600c0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611165578260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc84600d01549081150290604051600060405180830381858888f193505050501580156110f0573d6000803e3d6000fd5b508260020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc84600d01549081150290604051600060405180830381858888f1935050505015801561115f573d6000803e3d6000fd5b506111e1565b82600c0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600285600d01546111b4919061252d565b9081150290604051600060405180830381858888f193505050501580156111df573d6000803e3d6000fd5b505b8b3373ffffffffffffffffffffffffffffffffffffffff167f2054774cb7e925725eac8501bba9c917d5c7e691145abf5a81d39841d0a5371384600001548560010154604051611232929190612475565b60405180910390a3600280811115611273577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8c3373ffffffffffffffffffffffffffffffffffffffff167f547e2e1ba13d6a72dfe27bd9814ab46412060b71fa2069142b1c7cff5d96b01a60405160405180910390a45b505050505050505050505050565b600034116112d357600080fd5b60405180610160016040528060005481526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff16815260200160006002811115611359577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020018381526020018281526020016001808111156113a3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016040518060600160405280600081526020016000815260200160001515815250815260200160405180606001604052806000815260200160008152602001600015158152508152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020013481525060016000805481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff02191690836002811115611510577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506080820151816003015560a0820151816004015560c08201518160050160006101000a81548160ff0219169083600181111561157a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060e082015181600601600082015181600001556020820151816001015560408201518160020160006101000a81548160ff021916908315150217905550505061010082015181600901600082015181600001556020820151816001015560408201518160020160006101000a81548160ff021916908315150217905550505061012082015181600c0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061014082015181600d01559050506000600281111561168e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000543373ffffffffffffffffffffffffffffffffffffffff167f547e2e1ba13d6a72dfe27bd9814ab46412060b71fa2069142b1c7cff5d96b01a60405160405180910390a46000808154809291906116e690612619565b9190505550505050565b80600080600281111561172c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6001600084815260200190815260200160002060020160149054906101000a900460ff166002811115611788577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461179257600080fd5b600060016000858152602001908152602001600020905080600d015434146117b957600080fd5b60018160020160146101000a81548160ff02191690836002811115611807577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060016002811115611846577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b843373ffffffffffffffffffffffffffffffffffffffff167f547e2e1ba13d6a72dfe27bd9814ab46412060b71fa2069142b1c7cff5d96b01a60405160405180910390a450505050565b606060008054905060008060005b8381101561199f573373ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061197757503373ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b1561198c5760018361198991906124d7565b92505b808061199790612619565b91505061189e565b5060008267ffffffffffffffff8111156119e2577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015611a1b57816020015b611a08611ea8565b815260200190600190039081611a005790505b50905060005b84811015611e4f573373ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611afa57503373ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15611e3c57600081905060006001600083815260200190815260200160002090508060405180610160016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900460ff166002811115611c29577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115611c61577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff166001811115611cc4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6001811115611cfc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016006820160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff16151515158152505081526020016009820160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff1615151515815250508152602001600c820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600d82015481525050848681518110611e1f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250600185611e3791906124d7565b945050505b8080611e4790612619565b915050611a21565b508094505050505090565b60006001600644426006604051602001611e7693929190612350565b6040516020818303038152906040528051906020012060001c611e99919061266c565b611ea391906124d7565b905090565b60405180610160016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160006002811115611f2f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600081526020016000815260200160006001811115611f7c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001611f89611fc0565b8152602001611f96611fc0565b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b604051806060016040528060008152602001600081526020016000151581525090565b600081359050611ff281612752565b92915050565b60008135905061200781612769565b92915050565b60008135905061201c81612780565b92915050565b60008060006060848603121561203757600080fd5b600061204586828701611fe3565b93505060206120568682870161200d565b92505060406120678682870161200d565b9150509250925092565b60006020828403121561208357600080fd5b60006120918482850161200d565b91505092915050565b600080604083850312156120ad57600080fd5b60006120bb8582860161200d565b92505060206120cc85828601611ff8565b9150509250929050565b60006120e283836121b6565b6101e08301905092915050565b6120f881612587565b82525050565b61210781612587565b82525050565b6000612118826124ae565b61212281856124c6565b935061212d8361249e565b8060005b8381101561215e57815161214588826120d6565b9750612150836124b9565b925050600181019050612131565b5085935050505092915050565b61217481612599565b82525050565b612183816125f5565b82525050565b612192816125f5565b82525050565b6121a181612607565b82525050565b6121b081612607565b82525050565b6101e0820160008201516121cd600085018261231b565b5060208201516121e060208501826120ef565b5060408201516121f360408501826120ef565b5060608201516122066060850182612198565b506080820151612219608085018261231b565b5060a082015161222c60a085018261231b565b5060c082015161223f60c085018261217a565b5060e082015161225260e0850182612297565b50610100820151612267610140850182612297565b5061012082015161227c6101a08501826120ef565b506101408201516122916101c085018261231b565b50505050565b6060820160008201516122ad600085018261231b565b5060208201516122c0602085018261231b565b5060408201516122d3604085018261216b565b50505050565b6060820160008201516122ef600085018261231b565b506020820151612302602085018261231b565b506040820151612315604085018261216b565b50505050565b612324816125eb565b82525050565b612333816125eb565b82525050565b61234a612345826125eb565b612662565b82525050565b600061235c8286612339565b60208201915061236c8285612339565b60208201915061237c8284612339565b602082019150819050949350505050565b60006020820190506123a260008301846120fe565b92915050565b600060208201905081810360008301526123c2818461210d565b905092915050565b60006101e0820190506123e0600083018e61232a565b6123ed602083018d6120fe565b6123fa604083018c6120fe565b612407606083018b6121a7565b612414608083018a61232a565b61242160a083018961232a565b61242e60c0830188612189565b61243b60e08301876122d9565b6124496101408301866122d9565b6124576101a08301856120fe565b6124656101c083018461232a565b9c9b505050505050505050505050565b600060408201905061248a600083018561232a565b612497602083018461232a565b9392505050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b60006124e2826125eb565b91506124ed836125eb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156125225761252161269d565b5b828201905092915050565b6000612538826125eb565b9150612543836125eb565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561257c5761257b61269d565b5b828202905092915050565b6000612592826125cb565b9050919050565b60008115159050919050565b60008190506125b38261272a565b919050565b60008190506125c68261273e565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612600826125a5565b9050919050565b6000612612826125b8565b9050919050565b6000612624826125eb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156126575761265661269d565b5b600182019050919050565b6000819050919050565b6000612677826125eb565b9150612682836125eb565b925082612692576126916126cc565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061273b5761273a6126fb565b5b50565b6003811061274f5761274e6126fb565b5b50565b61275b81612587565b811461276657600080fd5b50565b61277281612599565b811461277d57600080fd5b50565b612789816125eb565b811461279457600080fd5b5056fea2646970667358221220a4151d9c91c8ff3eb23fd83ef712b460952ddedd07a969c8735415a89115bdaf64736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27CD DUP1 PUSH2 0x24 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDF71602 EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x117A5B90 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x2D76375D EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x3B17469E EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x87FB99F6 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0xA40BF061 EQ PUSH2 0x132 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x2071 JUMP JUMPDEST PUSH2 0x15D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x238D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB9 SWAP2 SWAP1 PUSH2 0x2071 JUMP JUMPDEST PUSH2 0x5CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x209A JUMP JUMPDEST PUSH2 0x710 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x2022 JUMP JUMPDEST PUSH2 0x12C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x2071 JUMP JUMPDEST PUSH2 0x16F0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x1890 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x23A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x19B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1F7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x323 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x35B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3BE JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3F6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x80 ADD MLOAD DUP2 PUSH1 0xE0 ADD MLOAD PUSH1 0x20 ADD MLOAD GT ISZERO DUP1 ISZERO PUSH2 0x50A JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD DUP2 PUSH2 0x100 ADD MLOAD PUSH1 0x20 ADD MLOAD GT JUMPDEST DUP1 PUSH2 0x53D JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD DUP2 PUSH1 0xE0 ADD MLOAD PUSH1 0x20 ADD MLOAD GT ISZERO DUP1 ISZERO PUSH2 0x53C JUMPI POP DUP1 PUSH2 0x100 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0xE0 ADD MLOAD PUSH1 0x20 ADD MLOAD GT JUMPDEST JUMPDEST ISZERO PUSH2 0x54F JUMPI DUP1 PUSH1 0x20 ADD MLOAD SWAP4 POP POP PUSH2 0x5C3 JUMP JUMPDEST DUP1 PUSH1 0x80 ADD MLOAD DUP2 PUSH2 0x100 ADD MLOAD PUSH1 0x20 ADD MLOAD GT ISZERO DUP1 ISZERO PUSH2 0x577 JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD DUP2 PUSH1 0xE0 ADD MLOAD PUSH1 0x20 ADD MLOAD GT JUMPDEST DUP1 PUSH2 0x5AB JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD DUP2 PUSH2 0x100 ADD MLOAD PUSH1 0x20 ADD MLOAD GT ISZERO DUP1 ISZERO PUSH2 0x5AA JUMPI POP DUP1 PUSH2 0x100 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0xE0 ADD MLOAD PUSH1 0x20 ADD MLOAD LT JUMPDEST JUMPDEST ISZERO PUSH2 0x5BD JUMPI DUP1 PUSH1 0x40 ADD MLOAD SWAP4 POP POP PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x0 SWAP4 POP POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x6 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 DUP1 PUSH1 0x9 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 DUP1 PUSH1 0xC ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0xD ADD SLOAD SWAP1 POP DUP12 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x74C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x7A8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x7B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLER PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x8D6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x90E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x971 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x9A9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB67 JUMPI DUP2 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xB0C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xB46 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ DUP1 ISZERO PUSH2 0xB59 JUMPI POP DUP2 PUSH1 0xE0 ADD MLOAD PUSH1 0x40 ADD MLOAD ISZERO JUMPDEST PUSH2 0xB62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC3D JUMP JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC37 JUMPI DUP2 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xBDC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0xC15 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ DUP1 ISZERO PUSH2 0xC29 JUMPI POP DUP2 PUSH2 0x100 ADD MLOAD PUSH1 0x40 ADD MLOAD ISZERO JUMPDEST PUSH2 0xC32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC3C JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC47 PUSH2 0x1E5A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCCC JUMPI DUP3 PUSH1 0x6 ADD SWAP2 POP DUP3 PUSH1 0x9 ADD SWAP1 POP PUSH2 0xD3B JUMP JUMPDEST DUP3 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD35 JUMPI DUP3 PUSH1 0x9 ADD SWAP2 POP DUP3 PUSH1 0x6 ADD SWAP1 POP PUSH2 0xD3A JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST DUP11 ISZERO PUSH2 0xD5D JUMPI DUP4 DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD55 SWAP2 SWAP1 PUSH2 0x24D7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xD72 SWAP1 PUSH2 0x2619 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP11 ISZERO DUP1 PUSH2 0xD8B JUMPI POP DUP3 PUSH1 0x3 ADD SLOAD DUP3 PUSH1 0x1 ADD SLOAD GT JUMPDEST DUP1 PUSH2 0xD9E JUMPI POP DUP3 PUSH1 0x4 ADD SLOAD DUP3 PUSH1 0x0 ADD SLOAD LT ISZERO JUMPDEST ISZERO PUSH2 0xDC1 JUMPI PUSH1 0x1 DUP3 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP3 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xE2F JUMPI POP DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xE8C JUMPI PUSH1 0x1 DUP4 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xE82 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0xF54 JUMP JUMPDEST DUP3 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xEFA JUMPI POP DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xF53 JUMPI PUSH1 0x0 DUP4 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xF4D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST DUP3 PUSH1 0x6 ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0xF86 JUMPI POP DUP3 PUSH1 0x9 ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x12B8 JUMPI PUSH1 0x2 DUP4 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xFD9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0xFE7 DUP13 PUSH2 0x15D JUMP JUMPDEST DUP4 PUSH1 0xC ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0xC ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1165 JUMPI DUP3 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP5 PUSH1 0xD ADD SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x10F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP3 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP5 PUSH1 0xD ADD SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x115F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x11E1 JUMP JUMPDEST DUP3 PUSH1 0xC ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x2 DUP6 PUSH1 0xD ADD SLOAD PUSH2 0x11B4 SWAP2 SWAP1 PUSH2 0x252D JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x11DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST DUP12 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2054774CB7E925725EAC8501BBA9C917D5C7E691145ABF5A81D39841D0A53713 DUP5 PUSH1 0x0 ADD SLOAD DUP6 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x1232 SWAP3 SWAP2 SWAP1 PUSH2 0x2475 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x1273 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP13 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x547E2E1BA13D6A72DFE27BD9814AB46412060B71FA2069142B1C7CFF5D96B01A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x12D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 SLOAD DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1359 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x13A3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLVALUE DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1510 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x157A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0xC ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0xD ADD SSTORE SWAP1 POP POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x168E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x547E2E1BA13D6A72DFE27BD9814AB46412060B71FA2069142B1C7CFF5D96B01A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x16E6 SWAP1 PUSH2 0x2619 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x172C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1788 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x1792 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0xD ADD SLOAD CALLVALUE EQ PUSH2 0x17B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1807 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1846 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x547E2E1BA13D6A72DFE27BD9814AB46412060B71FA2069142B1C7CFF5D96B01A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x199F JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1977 JUMPI POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x198C JUMPI PUSH1 0x1 DUP4 PUSH2 0x1989 SWAP2 SWAP1 PUSH2 0x24D7 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 DUP1 PUSH2 0x1997 SWAP1 PUSH2 0x2619 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x189E JUMP JUMPDEST POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19E2 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A1B JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1A08 PUSH2 0x1EA8 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1A00 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1E4F JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1AFA JUMPI POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x1E3C JUMPI PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1C29 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1C61 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1CC4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1CFC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP5 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x1E1F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x1 DUP6 PUSH2 0x1E37 SWAP2 SWAP1 PUSH2 0x24D7 JUMP JUMPDEST SWAP5 POP POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1E47 SWAP1 PUSH2 0x2619 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1A21 JUMP JUMPDEST POP DUP1 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x6 DIFFICULTY TIMESTAMP PUSH1 0x6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1E76 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x1E99 SWAP2 SWAP1 PUSH2 0x266C JUMP JUMPDEST PUSH2 0x1EA3 SWAP2 SWAP1 PUSH2 0x24D7 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1F2F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1F7C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F89 PUSH2 0x1FC0 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F96 PUSH2 0x1FC0 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FF2 DUP2 PUSH2 0x2752 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2007 DUP2 PUSH2 0x2769 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x201C DUP2 PUSH2 0x2780 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2037 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2045 DUP7 DUP3 DUP8 ADD PUSH2 0x1FE3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2056 DUP7 DUP3 DUP8 ADD PUSH2 0x200D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2067 DUP7 DUP3 DUP8 ADD PUSH2 0x200D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2083 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2091 DUP5 DUP3 DUP6 ADD PUSH2 0x200D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x20BB DUP6 DUP3 DUP7 ADD PUSH2 0x200D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20CC DUP6 DUP3 DUP7 ADD PUSH2 0x1FF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20E2 DUP4 DUP4 PUSH2 0x21B6 JUMP JUMPDEST PUSH2 0x1E0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20F8 DUP2 PUSH2 0x2587 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2107 DUP2 PUSH2 0x2587 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2118 DUP3 PUSH2 0x24AE JUMP JUMPDEST PUSH2 0x2122 DUP2 DUP6 PUSH2 0x24C6 JUMP JUMPDEST SWAP4 POP PUSH2 0x212D DUP4 PUSH2 0x249E JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x215E JUMPI DUP2 MLOAD PUSH2 0x2145 DUP9 DUP3 PUSH2 0x20D6 JUMP JUMPDEST SWAP8 POP PUSH2 0x2150 DUP4 PUSH2 0x24B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2131 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2174 DUP2 PUSH2 0x2599 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2183 DUP2 PUSH2 0x25F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2192 DUP2 PUSH2 0x25F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x21A1 DUP2 PUSH2 0x2607 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x21B0 DUP2 PUSH2 0x2607 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1E0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x21CD PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x231B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x21E0 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x20EF JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x21F3 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x20EF JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x2206 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2198 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x2219 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x231B JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x222C PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x231B JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x223F PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x217A JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x2252 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x2297 JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x2267 PUSH2 0x140 DUP6 ADD DUP3 PUSH2 0x2297 JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x227C PUSH2 0x1A0 DUP6 ADD DUP3 PUSH2 0x20EF JUMP JUMPDEST POP PUSH2 0x140 DUP3 ADD MLOAD PUSH2 0x2291 PUSH2 0x1C0 DUP6 ADD DUP3 PUSH2 0x231B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x22AD PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x231B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x22C0 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x231B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x22D3 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x216B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x22EF PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x231B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2302 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x231B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2315 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x216B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2324 DUP2 PUSH2 0x25EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2333 DUP2 PUSH2 0x25EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x234A PUSH2 0x2345 DUP3 PUSH2 0x25EB JUMP JUMPDEST PUSH2 0x2662 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x235C DUP3 DUP7 PUSH2 0x2339 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x236C DUP3 DUP6 PUSH2 0x2339 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x237C DUP3 DUP5 PUSH2 0x2339 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23A2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23C2 DUP2 DUP5 PUSH2 0x210D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E0 DUP3 ADD SWAP1 POP PUSH2 0x23E0 PUSH1 0x0 DUP4 ADD DUP15 PUSH2 0x232A JUMP JUMPDEST PUSH2 0x23ED PUSH1 0x20 DUP4 ADD DUP14 PUSH2 0x20FE JUMP JUMPDEST PUSH2 0x23FA PUSH1 0x40 DUP4 ADD DUP13 PUSH2 0x20FE JUMP JUMPDEST PUSH2 0x2407 PUSH1 0x60 DUP4 ADD DUP12 PUSH2 0x21A7 JUMP JUMPDEST PUSH2 0x2414 PUSH1 0x80 DUP4 ADD DUP11 PUSH2 0x232A JUMP JUMPDEST PUSH2 0x2421 PUSH1 0xA0 DUP4 ADD DUP10 PUSH2 0x232A JUMP JUMPDEST PUSH2 0x242E PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x2189 JUMP JUMPDEST PUSH2 0x243B PUSH1 0xE0 DUP4 ADD DUP8 PUSH2 0x22D9 JUMP JUMPDEST PUSH2 0x2449 PUSH2 0x140 DUP4 ADD DUP7 PUSH2 0x22D9 JUMP JUMPDEST PUSH2 0x2457 PUSH2 0x1A0 DUP4 ADD DUP6 PUSH2 0x20FE JUMP JUMPDEST PUSH2 0x2465 PUSH2 0x1C0 DUP4 ADD DUP5 PUSH2 0x232A JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x248A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x232A JUMP JUMPDEST PUSH2 0x2497 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x232A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24E2 DUP3 PUSH2 0x25EB JUMP JUMPDEST SWAP2 POP PUSH2 0x24ED DUP4 PUSH2 0x25EB JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2522 JUMPI PUSH2 0x2521 PUSH2 0x269D JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2538 DUP3 PUSH2 0x25EB JUMP JUMPDEST SWAP2 POP PUSH2 0x2543 DUP4 PUSH2 0x25EB JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x257C JUMPI PUSH2 0x257B PUSH2 0x269D JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2592 DUP3 PUSH2 0x25CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x25B3 DUP3 PUSH2 0x272A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x25C6 DUP3 PUSH2 0x273E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2600 DUP3 PUSH2 0x25A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2612 DUP3 PUSH2 0x25B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2624 DUP3 PUSH2 0x25EB JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2657 JUMPI PUSH2 0x2656 PUSH2 0x269D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2677 DUP3 PUSH2 0x25EB JUMP JUMPDEST SWAP2 POP PUSH2 0x2682 DUP4 PUSH2 0x25EB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2692 JUMPI PUSH2 0x2691 PUSH2 0x26CC JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x273B JUMPI PUSH2 0x273A PUSH2 0x26FB JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x274F JUMPI PUSH2 0x274E PUSH2 0x26FB JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x275B DUP2 PUSH2 0x2587 JUMP JUMPDEST DUP2 EQ PUSH2 0x2766 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2772 DUP2 PUSH2 0x2599 JUMP JUMPDEST DUP2 EQ PUSH2 0x277D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2789 DUP2 PUSH2 0x25EB JUMP JUMPDEST DUP2 EQ PUSH2 0x2794 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 ISZERO SAR SWAP13 SWAP2 0xC8 SELFDESTRUCT RETURNDATACOPY 0xB2 EXTCODEHASH 0xD8 RETURNDATACOPY 0xF7 SLT 0xB4 PUSH1 0x95 0x2D 0xDE 0xDD SMOD 0xA9 PUSH10 0xC8735415A89115BDAF64 PUSH20 0x6F6C634300080400330000000000000000000000 ",
              "sourceMap": "70:6345:0:-:0;;;917:1;890:28;;70:6345;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:15052:1",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "59:87:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "69:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "91:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "78:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "78:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "69:5:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "134:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "107:26:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "107:33:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "107:33:1"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "37:6:1",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "45:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "53:5:1",
                            "type": ""
                          }
                        ],
                        "src": "7:139:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "201:84:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "211:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "233:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "220:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "220:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "211:5:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "273:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "249:23:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "249:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "249:30:1"
                            }
                          ]
                        },
                        "name": "abi_decode_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "179:6:1",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "187:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "195:5:1",
                            "type": ""
                          }
                        ],
                        "src": "152:133:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "343:87:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "353:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "375:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "362:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "362:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "353:5:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "418:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "391:26:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "391:33:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "391:33:1"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "321:6:1",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "329:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "337:5:1",
                            "type": ""
                          }
                        ],
                        "src": "291:139:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "536:452:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "582:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "591:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "594:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "584:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "584:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "584:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "557:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "566:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "553:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "553:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "578:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "549:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "549:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "546:2:1"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "608:117:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "623:15:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "637:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "627:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "652:63:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "687:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "698:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "683:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "683:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "707:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "662:20:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "662:53:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "652:6:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "735:118:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "750:16:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "764:2:1",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "754:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "780:63:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "815:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "826:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "811:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "811:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "835:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "790:20:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "790:53:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "780:6:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "863:118:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "878:16:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "892:2:1",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "882:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "908:63:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "943:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "954:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "939:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "939:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "963:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "918:20:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "918:53:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "908:6:1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint256t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "490:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "501:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "513:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "521:6:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "529:6:1",
                            "type": ""
                          }
                        ],
                        "src": "436:552:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1060:196:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1106:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1115:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1118:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1108:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1108:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1108:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1081:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1090:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1077:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1077:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1102:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1073:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1073:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1070:2:1"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1132:117:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1147:15:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1161:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1151:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1176:63:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1211:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1222:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1207:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1207:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1231:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "1186:20:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1186:53:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1176:6:1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1030:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1041:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1053:6:1",
                            "type": ""
                          }
                        ],
                        "src": "994:262:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1342:321:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1388:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1397:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1400:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1390:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1390:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1390:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1363:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1372:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1359:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1359:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1384:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1355:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1355:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1352:2:1"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1414:117:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1429:15:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1443:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1433:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1458:63:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1493:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1504:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1489:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1489:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1513:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "1468:20:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1468:53:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1458:6:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1541:115:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1556:16:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1570:2:1",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1560:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1586:60:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1618:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1629:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1614:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1614:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1638:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "1596:17:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1596:50:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "1586:6:1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1304:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1315:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1327:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1335:6:1",
                            "type": ""
                          }
                        ],
                        "src": "1262:401:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1789:141:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1873:6:1"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1881:3:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_struct$_Game_$54_memory_ptr_to_t_struct$_Game_$54_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1799:73:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1799:86:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1799:86:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1894:30:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1912:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1917:6:1",
                                    "type": "",
                                    "value": "0x01e0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1908:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1908:16:1"
                              },
                              "variableNames": [
                                {
                                  "name": "updatedPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "1894:10:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encodeUpdatedPos_t_struct$_Game_$54_memory_ptr_to_t_struct$_Game_$54_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1762:6:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "1770:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updatedPos",
                            "nodeType": "YulTypedName",
                            "src": "1778:10:1",
                            "type": ""
                          }
                        ],
                        "src": "1669:261:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1991:53:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2008:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2031:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "2013:17:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2013:24:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2001:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2001:37:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2001:37:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1979:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "1986:3:1",
                            "type": ""
                          }
                        ],
                        "src": "1936:108:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2115:53:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2132:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2155:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "2137:17:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2137:24:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2125:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2125:37:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2125:37:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2103:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2110:3:1",
                            "type": ""
                          }
                        ],
                        "src": "2050:118:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2390:728:1",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2400:88:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2482:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_array$_t_struct$_Game_$54_memory_ptr_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "2414:67:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2414:74:1"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "2404:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2497:113:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2598:3:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2603:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_array$_t_struct$_Game_$54_memory_ptr_$dyn_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "2504:93:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2504:106:1"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "2497:3:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2619:91:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2704:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_dataslot_t_array$_t_struct$_Game_$54_memory_ptr_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "2634:69:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2634:76:1"
                              },
                              "variables": [
                                {
                                  "name": "baseRef",
                                  "nodeType": "YulTypedName",
                                  "src": "2623:7:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2719:21:1",
                              "value": {
                                "name": "baseRef",
                                "nodeType": "YulIdentifier",
                                "src": "2733:7:1"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "2723:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2809:284:1",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2823:34:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "2850:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "2844:5:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2844:13:1"
                                    },
                                    "variables": [
                                      {
                                        "name": "elementValue0",
                                        "nodeType": "YulTypedName",
                                        "src": "2827:13:1",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2870:110:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "elementValue0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2961:13:1"
                                        },
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "2976:3:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_encodeUpdatedPos_t_struct$_Game_$54_memory_ptr_to_t_struct$_Game_$54_memory_ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "2877:83:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2877:103:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "2870:3:1"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2993:90:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "3076:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "array_nextElement_t_array$_t_struct$_Game_$54_memory_ptr_$dyn_memory_ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "3003:72:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3003:80:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "2993:6:1"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "2771:1:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2774:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2768:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2768:13:1"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "2782:18:1",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2784:14:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2793:1:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2796:1:1",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2789:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2789:9:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "2784:1:1"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "2753:14:1",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2755:10:1",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2764:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulTypedName",
                                        "src": "2759:1:1",
                                        "type": ""
                                      }
                                    ]
                                  }
                                ]
                              },
                              "src": "2749:344:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3102:10:1",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3109:3:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "3102:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_array$_t_struct$_Game_$54_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Game_$54_memory_ptr_$dyn_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2369:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2376:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2385:3:1",
                            "type": ""
                          }
                        ],
                        "src": "2226:892:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3173:50:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3190:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3210:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "3195:14:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3195:21:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3183:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3183:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3183:34:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bool_to_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3161:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3168:3:1",
                            "type": ""
                          }
                        ],
                        "src": "3124:99:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3298:80:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3315:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3365:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_enum$_CurrentPlayer_$27_to_t_uint8",
                                      "nodeType": "YulIdentifier",
                                      "src": "3320:44:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3320:51:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3308:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3308:64:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3308:64:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_enum$_CurrentPlayer_$27_to_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3286:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3293:3:1",
                            "type": ""
                          }
                        ],
                        "src": "3229:149:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3463:80:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3480:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3530:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_enum$_CurrentPlayer_$27_to_t_uint8",
                                      "nodeType": "YulIdentifier",
                                      "src": "3485:44:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3485:51:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3473:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3473:64:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3473:64:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_enum$_CurrentPlayer_$27_to_t_uint8_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3451:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3458:3:1",
                            "type": ""
                          }
                        ],
                        "src": "3384:159:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3610:72:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3627:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3669:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_enum$_Stage_$24_to_t_uint8",
                                      "nodeType": "YulIdentifier",
                                      "src": "3632:36:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3632:43:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3620:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3620:56:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3620:56:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_enum$_Stage_$24_to_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3598:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3605:3:1",
                            "type": ""
                          }
                        ],
                        "src": "3549:133:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3759:72:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3776:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3818:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_enum$_Stage_$24_to_t_uint8",
                                      "nodeType": "YulIdentifier",
                                      "src": "3781:36:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3781:43:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3769:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3769:56:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3769:56:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_enum$_Stage_$24_to_t_uint8_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3747:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3754:3:1",
                            "type": ""
                          }
                        ],
                        "src": "3688:143:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3981:2121:1",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3991:28:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4007:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4012:6:1",
                                    "type": "",
                                    "value": "0x01e0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4003:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4003:16:1"
                              },
                              "variables": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulTypedName",
                                  "src": "3995:4:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4029:162:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4062:43:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "4092:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4099:4:1",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4088:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4088:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "4082:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4082:23:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "4066:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "4152:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "4170:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4175:4:1",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4166:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4166:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "4118:33:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4118:63:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4118:63:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4201:165:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4237:43:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "4267:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4274:4:1",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4263:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4263:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "4257:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4257:23:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "4241:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "4327:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "4345:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4350:4:1",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4341:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4341:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_address_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "4293:33:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4293:63:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4293:63:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4376:170:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4417:43:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "4447:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4454:4:1",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4443:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4443:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "4437:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4437:23:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "4421:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "4507:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "4525:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4530:4:1",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4521:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4521:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_address_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "4473:33:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4473:63:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4473:63:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4556:171:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4592:43:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "4622:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4629:4:1",
                                            "type": "",
                                            "value": "0x60"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4618:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4618:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "4612:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4612:23:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "4596:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "4688:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "4706:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4711:4:1",
                                            "type": "",
                                            "value": "0x60"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4702:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4702:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_enum$_Stage_$24_to_t_uint8",
                                      "nodeType": "YulIdentifier",
                                      "src": "4648:39:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4648:69:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4648:69:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4737:168:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4776:43:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "4806:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4813:4:1",
                                            "type": "",
                                            "value": "0x80"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4802:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4802:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "4796:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4796:23:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "4780:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "4866:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "4884:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4889:4:1",
                                            "type": "",
                                            "value": "0x80"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4880:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4880:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "4832:33:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4832:63:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4832:63:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4915:167:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4953:43:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "4983:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4990:4:1",
                                            "type": "",
                                            "value": "0xa0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4979:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4979:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "4973:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4973:23:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "4957:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "5043:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "5061:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5066:4:1",
                                            "type": "",
                                            "value": "0xa0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5057:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5057:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "5009:33:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5009:63:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "5009:63:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "5092:187:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "5136:43:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "5166:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5173:4:1",
                                            "type": "",
                                            "value": "0xc0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5162:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5162:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "5156:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5156:23:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "5140:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "5240:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "5258:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5263:4:1",
                                            "type": "",
                                            "value": "0xc0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5254:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5254:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_enum$_CurrentPlayer_$27_to_t_uint8",
                                      "nodeType": "YulIdentifier",
                                      "src": "5192:47:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5192:77:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "5192:77:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "5289:215:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "5331:43:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "5361:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5368:4:1",
                                            "type": "",
                                            "value": "0xe0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5357:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5357:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "5351:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5351:23:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "5335:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "5465:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "5483:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5488:4:1",
                                            "type": "",
                                            "value": "0xe0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5479:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5479:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_struct$_Player_$61_memory_ptr_to_t_struct$_Player_$61_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "5387:77:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5387:107:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "5387:107:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "5514:224:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "5561:45:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "5591:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5598:6:1",
                                            "type": "",
                                            "value": "0x0100"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5587:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5587:18:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "5581:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5581:25:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "5565:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "5697:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "5715:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5720:6:1",
                                            "type": "",
                                            "value": "0x0140"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5711:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5711:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_struct$_Player_$61_memory_ptr_to_t_struct$_Player_$61_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "5619:77:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5619:109:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "5619:109:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "5748:170:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "5785:45:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "5815:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5822:6:1",
                                            "type": "",
                                            "value": "0x0120"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5811:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5811:18:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "5805:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5805:25:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "5789:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "5877:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "5895:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5900:6:1",
                                            "type": "",
                                            "value": "0x01a0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5891:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5891:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_address_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "5843:33:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5843:65:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "5843:65:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "5928:167:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "5962:45:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "5992:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5999:6:1",
                                            "type": "",
                                            "value": "0x0140"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5988:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5988:18:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "5982:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5982:25:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "5966:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "6054:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "6072:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6077:6:1",
                                            "type": "",
                                            "value": "0x01c0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6068:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6068:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "6020:33:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6020:65:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "6020:65:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_struct$_Game_$54_memory_ptr_to_t_struct$_Game_$54_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3968:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3975:3:1",
                            "type": ""
                          }
                        ],
                        "src": "3885:2217:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6260:560:1",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6270:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6286:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6291:4:1",
                                    "type": "",
                                    "value": "0x60"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6282:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6282:14:1"
                              },
                              "variables": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulTypedName",
                                  "src": "6274:4:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "6306:164:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "6341:43:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "6371:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6378:4:1",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6367:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6367:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "6361:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6361:23:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "6345:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "6431:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "6449:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6454:4:1",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6445:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6445:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "6397:33:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6397:63:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "6397:63:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "6480:165:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "6516:43:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "6546:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6553:4:1",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6542:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6542:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "6536:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6536:23:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "6520:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "6606:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "6624:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6629:4:1",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6620:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6620:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "6572:33:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6572:63:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "6572:63:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "6655:158:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "6690:43:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "6720:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6727:4:1",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6716:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6716:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "6710:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6710:23:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "6694:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "6774:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "6792:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6797:4:1",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6788:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6788:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_bool_to_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "6746:27:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6746:57:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "6746:57:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_struct$_Player_$61_memory_ptr_to_t_struct$_Player_$61_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6247:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6254:3:1",
                            "type": ""
                          }
                        ],
                        "src": "6160:660:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6988:560:1",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6998:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7014:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7019:4:1",
                                    "type": "",
                                    "value": "0x60"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7010:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7010:14:1"
                              },
                              "variables": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulTypedName",
                                  "src": "7002:4:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "7034:164:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "7069:43:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "7099:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "7106:4:1",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "7095:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7095:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "7089:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7089:23:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "7073:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "7159:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "7177:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "7182:4:1",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "7173:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7173:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "7125:33:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7125:63:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "7125:63:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "7208:165:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "7244:43:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "7274:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "7281:4:1",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "7270:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7270:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "7264:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7264:23:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "7248:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "7334:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "7352:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "7357:4:1",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "7348:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7348:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "7300:33:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7300:63:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "7300:63:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "7383:158:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "7418:43:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "7448:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "7455:4:1",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "7444:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7444:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "7438:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7438:23:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "7422:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "7502:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "7520:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "7525:4:1",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "7516:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7516:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_bool_to_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "7474:27:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7474:57:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "7474:57:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_struct$_Player_$61_memory_ptr_to_t_struct$_Player_$61_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6975:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6982:3:1",
                            "type": ""
                          }
                        ],
                        "src": "6878:670:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7609:53:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7626:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "7649:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "7631:17:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7631:24:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7619:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7619:37:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7619:37:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7597:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7604:3:1",
                            "type": ""
                          }
                        ],
                        "src": "7554:108:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7733:53:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7750:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "7773:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "7755:17:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7755:24:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7743:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7743:37:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7743:37:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7721:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7728:3:1",
                            "type": ""
                          }
                        ],
                        "src": "7668:118:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7875:74:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7892:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "7935:5:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "7917:17:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7917:24:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "leftAlign_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "7897:19:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7897:45:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7885:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7885:58:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7885:58:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7863:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7870:3:1",
                            "type": ""
                          }
                        ],
                        "src": "7792:157:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8127:366:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "8200:6:1"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8209:3:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8138:61:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8138:75:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8138:75:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8222:19:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8233:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8238:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8229:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8229:12:1"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "8222:3:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "8313:6:1"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8322:3:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8251:61:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8251:75:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8251:75:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8335:19:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8346:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8351:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8342:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8342:12:1"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "8335:3:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "8426:6:1"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8435:3:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8364:61:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8364:75:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8364:75:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8448:19:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8459:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8464:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8455:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8455:12:1"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "8448:3:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8477:10:1",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "8484:3:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "8477:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "8090:3:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "8096:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "8104:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "8112:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "8123:3:1",
                            "type": ""
                          }
                        ],
                        "src": "7955:538:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8597:124:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8607:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8619:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8630:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8615:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8615:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8607:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "8687:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8700:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8711:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8696:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8696:17:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8643:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8643:71:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8643:71:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8569:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "8581:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8592:4:1",
                            "type": ""
                          }
                        ],
                        "src": "8499:222:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8915:265:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8925:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8937:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8948:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8933:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8933:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8925:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8972:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8983:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8968:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8968:17:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "8991:4:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8997:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "8987:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8987:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8961:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8961:47:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8961:47:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9017:156:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "9159:6:1"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "9168:4:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_array$_t_struct$_Game_$54_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Game_$54_memory_ptr_$dyn_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9025:133:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9025:148:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9017:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_array$_t_struct$_Game_$54_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Game_$54_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8887:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "8899:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8910:4:1",
                            "type": ""
                          }
                        ],
                        "src": "8727:453:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9673:1061:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9683:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9695:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9706:3:1",
                                    "type": "",
                                    "value": "480"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9691:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9691:19:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9683:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "9764:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9777:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9788:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9773:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9773:17:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9720:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9720:71:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9720:71:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "9845:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9858:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9869:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9854:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9854:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9801:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9801:72:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9801:72:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "9927:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9940:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9951:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9936:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9936:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9883:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9883:72:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9883:72:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "10015:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10028:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10039:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10024:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10024:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_enum$_Stage_$24_to_t_uint8_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9965:49:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9965:78:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9965:78:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "10097:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10110:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10121:3:1",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10106:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10106:19:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10053:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10053:73:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10053:73:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value5",
                                    "nodeType": "YulIdentifier",
                                    "src": "10180:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10193:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10204:3:1",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10189:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10189:19:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10136:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10136:73:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10136:73:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value6",
                                    "nodeType": "YulIdentifier",
                                    "src": "10277:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10290:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10301:3:1",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10286:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10286:19:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_enum$_CurrentPlayer_$27_to_t_uint8_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10219:57:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10219:87:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10219:87:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value7",
                                    "nodeType": "YulIdentifier",
                                    "src": "10404:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10417:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10428:3:1",
                                        "type": "",
                                        "value": "224"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10413:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10413:19:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_struct$_Player_$61_memory_ptr_to_t_struct$_Player_$61_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10316:87:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10316:117:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10316:117:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value8",
                                    "nodeType": "YulIdentifier",
                                    "src": "10531:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10544:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10555:3:1",
                                        "type": "",
                                        "value": "320"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10540:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10540:19:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_struct$_Player_$61_memory_ptr_to_t_struct$_Player_$61_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10443:87:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10443:117:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10443:117:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value9",
                                    "nodeType": "YulIdentifier",
                                    "src": "10614:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10627:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10638:3:1",
                                        "type": "",
                                        "value": "416"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10623:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10623:19:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10570:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10570:73:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10570:73:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value10",
                                    "nodeType": "YulIdentifier",
                                    "src": "10697:7:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10711:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10722:3:1",
                                        "type": "",
                                        "value": "448"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10707:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10707:19:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10653:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10653:74:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10653:74:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_address_t_address_t_enum$_Stage_$24_t_uint256_t_uint256_t_enum$_CurrentPlayer_$27_t_struct$_Player_$61_memory_ptr_t_struct$_Player_$61_memory_ptr_t_address_t_uint256__to_t_uint256_t_address_t_address_t_uint8_t_uint256_t_uint256_t_uint8_t_struct$_Player_$61_memory_ptr_t_struct$_Player_$61_memory_ptr_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9564:9:1",
                            "type": ""
                          },
                          {
                            "name": "value10",
                            "nodeType": "YulTypedName",
                            "src": "9576:7:1",
                            "type": ""
                          },
                          {
                            "name": "value9",
                            "nodeType": "YulTypedName",
                            "src": "9585:6:1",
                            "type": ""
                          },
                          {
                            "name": "value8",
                            "nodeType": "YulTypedName",
                            "src": "9593:6:1",
                            "type": ""
                          },
                          {
                            "name": "value7",
                            "nodeType": "YulTypedName",
                            "src": "9601:6:1",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "9609:6:1",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "9617:6:1",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "9625:6:1",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "9633:6:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "9641:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "9649:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "9657:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9668:4:1",
                            "type": ""
                          }
                        ],
                        "src": "9186:1548:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10866:206:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10876:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10888:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10899:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10884:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10884:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10876:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "10956:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10969:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10980:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10965:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10965:17:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10912:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10912:71:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10912:71:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "11037:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11050:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11061:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11046:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11046:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10993:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10993:72:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10993:72:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10830:9:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "10842:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "10850:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10861:4:1",
                            "type": ""
                          }
                        ],
                        "src": "10740:332:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11170:60:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11180:11:1",
                              "value": {
                                "name": "ptr",
                                "nodeType": "YulIdentifier",
                                "src": "11188:3:1"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "11180:4:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11201:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "11213:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11218:4:1",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11209:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11209:14:1"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "11201:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_t_array$_t_struct$_Game_$54_memory_ptr_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "11157:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "11165:4:1",
                            "type": ""
                          }
                        ],
                        "src": "11078:152:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11330:40:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11341:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "11357:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "11351:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11351:12:1"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "11341:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_array$_t_struct$_Game_$54_memory_ptr_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "11313:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "11323:6:1",
                            "type": ""
                          }
                        ],
                        "src": "11236:134:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11471:38:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11481:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "11493:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11498:4:1",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11489:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11489:14:1"
                              },
                              "variableNames": [
                                {
                                  "name": "next",
                                  "nodeType": "YulIdentifier",
                                  "src": "11481:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_nextElement_t_array$_t_struct$_Game_$54_memory_ptr_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "11458:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "next",
                            "nodeType": "YulTypedName",
                            "src": "11466:4:1",
                            "type": ""
                          }
                        ],
                        "src": "11376:133:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11646:73:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11663:3:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "11668:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11656:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11656:19:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11656:19:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11684:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11703:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11708:4:1",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11699:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11699:14:1"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "11684:11:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_array$_t_struct$_Game_$54_memory_ptr_$dyn_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "11618:3:1",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "11623:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "11634:11:1",
                            "type": ""
                          }
                        ],
                        "src": "11515:204:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11769:261:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11779:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "11802:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "11784:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11784:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "11779:1:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11813:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "11836:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "11818:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11818:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "11813:1:1"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "11976:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "11978:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11978:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "11978:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "11897:1:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11904:66:1",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                      },
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "11972:1:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "11900:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11900:74:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "11894:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11894:81:1"
                              },
                              "nodeType": "YulIf",
                              "src": "11891:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12008:16:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "12019:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "12022:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12015:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12015:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "12008:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "11756:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "11759:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "11765:3:1",
                            "type": ""
                          }
                        ],
                        "src": "11725:305:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12084:300:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12094:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "12117:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "12099:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12099:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "12094:1:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12128:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "12151:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "12133:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12133:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "12128:1:1"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "12326:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "12328:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12328:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12328:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "12238:1:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "12231:6:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "12231:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "12224:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12224:17:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "12246:1:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "12253:66:1",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                          },
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "12321:1:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "div",
                                          "nodeType": "YulIdentifier",
                                          "src": "12249:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "12249:74:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "12243:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12243:81:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "12220:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12220:105:1"
                              },
                              "nodeType": "YulIf",
                              "src": "12217:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12358:20:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "12373:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "12376:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "12369:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12369:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nodeType": "YulIdentifier",
                                  "src": "12358:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "12067:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "12070:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nodeType": "YulTypedName",
                            "src": "12076:7:1",
                            "type": ""
                          }
                        ],
                        "src": "12036:348:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12435:51:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12445:35:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "12474:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "12456:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12456:24:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "12445:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "12417:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "12427:7:1",
                            "type": ""
                          }
                        ],
                        "src": "12390:96:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12534:48:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12544:32:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "12569:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "12562:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12562:13:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "12555:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12555:21:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "12544:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "12516:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "12526:7:1",
                            "type": ""
                          }
                        ],
                        "src": "12492:90:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12649:82:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12659:16:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "12670:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "12659:7:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "12719:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_assert_t_enum$_CurrentPlayer_$27",
                                  "nodeType": "YulIdentifier",
                                  "src": "12676:42:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12676:49:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12676:49:1"
                            }
                          ]
                        },
                        "name": "cleanup_t_enum$_CurrentPlayer_$27",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "12631:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "12641:7:1",
                            "type": ""
                          }
                        ],
                        "src": "12588:143:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12790:74:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12800:16:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "12811:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "12800:7:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "12852:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_assert_t_enum$_Stage_$24",
                                  "nodeType": "YulIdentifier",
                                  "src": "12817:34:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12817:41:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12817:41:1"
                            }
                          ]
                        },
                        "name": "cleanup_t_enum$_Stage_$24",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "12772:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "12782:7:1",
                            "type": ""
                          }
                        ],
                        "src": "12737:127:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12915:81:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12925:65:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "12940:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12947:42:1",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "12936:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12936:54:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "12925:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "12897:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "12907:7:1",
                            "type": ""
                          }
                        ],
                        "src": "12870:126:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13047:32:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13057:16:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13068:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "13057:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "13029:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "13039:7:1",
                            "type": ""
                          }
                        ],
                        "src": "13002:77:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13159:69:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13169:53:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "13216:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_enum$_CurrentPlayer_$27",
                                  "nodeType": "YulIdentifier",
                                  "src": "13182:33:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13182:40:1"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "13169:9:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_enum$_CurrentPlayer_$27_to_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "13139:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "13149:9:1",
                            "type": ""
                          }
                        ],
                        "src": "13085:143:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13300:61:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13310:45:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "13349:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_enum$_Stage_$24",
                                  "nodeType": "YulIdentifier",
                                  "src": "13323:25:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13323:32:1"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "13310:9:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_enum$_Stage_$24_to_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "13280:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "13290:9:1",
                            "type": ""
                          }
                        ],
                        "src": "13234:127:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13410:190:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13420:33:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "13447:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "13429:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13429:24:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "13420:5:1"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "13543:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "13545:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "13545:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "13545:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "13468:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13475:66:1",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "13465:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13465:77:1"
                              },
                              "nodeType": "YulIf",
                              "src": "13462:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13574:20:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "13585:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13592:1:1",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13581:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13581:13:1"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "13574:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "13396:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "13406:3:1",
                            "type": ""
                          }
                        ],
                        "src": "13367:233:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13653:32:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13663:16:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13674:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "aligned",
                                  "nodeType": "YulIdentifier",
                                  "src": "13663:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "leftAlign_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "13635:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "aligned",
                            "nodeType": "YulTypedName",
                            "src": "13645:7:1",
                            "type": ""
                          }
                        ],
                        "src": "13606:79:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13725:142:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13735:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "13758:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "13740:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13740:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "13735:1:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13769:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "13792:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "13774:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13774:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "13769:1:1"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "13816:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x12",
                                        "nodeType": "YulIdentifier",
                                        "src": "13818:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "13818:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "13818:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "13813:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "13806:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13806:9:1"
                              },
                              "nodeType": "YulIf",
                              "src": "13803:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13847:14:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "13856:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "13859:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mod",
                                  "nodeType": "YulIdentifier",
                                  "src": "13852:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13852:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "13847:1:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "mod_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "13714:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "13717:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "13723:1:1",
                            "type": ""
                          }
                        ],
                        "src": "13691:176:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13901:152:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13918:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13921:77:1",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13911:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13911:88:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13911:88:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14015:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14018:4:1",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14008:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14008:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14008:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14039:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14042:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "14032:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14032:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14032:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "13873:180:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14087:152:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14104:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14107:77:1",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14097:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14097:88:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14097:88:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14201:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14204:4:1",
                                    "type": "",
                                    "value": "0x12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14194:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14194:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14194:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14225:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14228:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "14218:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14218:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14218:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x12",
                        "nodeType": "YulFunctionDefinition",
                        "src": "14059:180:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14273:152:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14290:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14293:77:1",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14283:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14283:88:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14283:88:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14387:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14390:4:1",
                                    "type": "",
                                    "value": "0x21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14380:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14380:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14380:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14411:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14414:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "14404:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14404:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14404:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x21",
                        "nodeType": "YulFunctionDefinition",
                        "src": "14245:180:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14490:62:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "14524:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x21",
                                        "nodeType": "YulIdentifier",
                                        "src": "14526:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14526:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14526:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "14513:5:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14520:1:1",
                                        "type": "",
                                        "value": "2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "14510:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14510:12:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "14503:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14503:20:1"
                              },
                              "nodeType": "YulIf",
                              "src": "14500:2:1"
                            }
                          ]
                        },
                        "name": "validator_assert_t_enum$_CurrentPlayer_$27",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "14483:5:1",
                            "type": ""
                          }
                        ],
                        "src": "14431:121:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14609:62:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "14643:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x21",
                                        "nodeType": "YulIdentifier",
                                        "src": "14645:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14645:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14645:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "14632:5:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14639:1:1",
                                        "type": "",
                                        "value": "3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "14629:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14629:12:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "14622:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14622:20:1"
                              },
                              "nodeType": "YulIf",
                              "src": "14619:2:1"
                            }
                          ]
                        },
                        "name": "validator_assert_t_enum$_Stage_$24",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "14602:5:1",
                            "type": ""
                          }
                        ],
                        "src": "14558:113:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14720:79:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "14777:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "14786:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "14789:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "14779:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14779:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14779:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "14743:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "14768:5:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "14750:17:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14750:24:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "14740:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14740:35:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "14733:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14733:43:1"
                              },
                              "nodeType": "YulIf",
                              "src": "14730:2:1"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "14713:5:1",
                            "type": ""
                          }
                        ],
                        "src": "14677:122:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14845:76:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "14899:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "14908:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "14911:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "14901:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14901:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14901:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "14868:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "14890:5:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_bool",
                                          "nodeType": "YulIdentifier",
                                          "src": "14875:14:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14875:21:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "14865:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14865:32:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "14858:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14858:40:1"
                              },
                              "nodeType": "YulIf",
                              "src": "14855:2:1"
                            }
                          ]
                        },
                        "name": "validator_revert_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "14838:5:1",
                            "type": ""
                          }
                        ],
                        "src": "14805:116:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14970:79:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15027:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15036:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15039:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "15029:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15029:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15029:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "14993:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "15018:5:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "15000:17:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15000:24:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "14990:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14990:35:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "14983:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14983:43:1"
                              },
                              "nodeType": "YulIf",
                              "src": "14980:2:1"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "14963:5:1",
                            "type": ""
                          }
                        ],
                        "src": "14927:122:1"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Game_$54_memory_ptr_to_t_struct$_Game_$54_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_Game_$54_memory_ptr_to_t_struct$_Game_$54_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x01e0)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // struct DiceIt.Game[] -> struct DiceIt.Game[]\n    function abi_encode_t_array$_t_struct$_Game_$54_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Game_$54_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Game_$54_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Game_$54_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_Game_$54_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_Game_$54_memory_ptr_to_t_struct$_Game_$54_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_Game_$54_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_enum$_CurrentPlayer_$27_to_t_uint8(value, pos) {\n        mstore(pos, convert_t_enum$_CurrentPlayer_$27_to_t_uint8(value))\n    }\n\n    function abi_encode_t_enum$_CurrentPlayer_$27_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_CurrentPlayer_$27_to_t_uint8(value))\n    }\n\n    function abi_encode_t_enum$_Stage_$24_to_t_uint8(value, pos) {\n        mstore(pos, convert_t_enum$_Stage_$24_to_t_uint8(value))\n    }\n\n    function abi_encode_t_enum$_Stage_$24_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Stage_$24_to_t_uint8(value))\n    }\n\n    // struct DiceIt.Game -> struct DiceIt.Game\n    function abi_encode_t_struct$_Game_$54_memory_ptr_to_t_struct$_Game_$54_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x01e0)\n\n        {\n            // id\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // owner\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // challenger\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // stage\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_enum$_Stage_$24_to_t_uint8(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // maxScore\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // maxTurn\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // currentPlayer\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_enum$_CurrentPlayer_$27_to_t_uint8(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // ownerPlayer\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_struct$_Player_$61_memory_ptr_to_t_struct$_Player_$61_memory_ptr(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // challengerPlayer\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_struct$_Player_$61_memory_ptr_to_t_struct$_Player_$61_memory_ptr(memberValue0, add(pos, 0x0140))\n        }\n\n        {\n            // winner\n\n            let memberValue0 := mload(add(value, 0x0120))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x01a0))\n        }\n\n        {\n            // bet\n\n            let memberValue0 := mload(add(value, 0x0140))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x01c0))\n        }\n\n    }\n\n    // struct DiceIt.Player -> struct DiceIt.Player\n    function abi_encode_t_struct$_Player_$61_memory_ptr_to_t_struct$_Player_$61_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x60)\n\n        {\n            // turn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // score\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // stop\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    // struct DiceIt.Player -> struct DiceIt.Player\n    function abi_encode_t_struct$_Player_$61_memory_ptr_to_t_struct$_Player_$61_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x60)\n\n        {\n            // turn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // score\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // stop\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Game_$54_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Game_$54_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Game_$54_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Game_$54_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_address_t_enum$_Stage_$24_t_uint256_t_uint256_t_enum$_CurrentPlayer_$27_t_struct$_Player_$61_memory_ptr_t_struct$_Player_$61_memory_ptr_t_address_t_uint256__to_t_uint256_t_address_t_address_t_uint8_t_uint256_t_uint256_t_uint8_t_struct$_Player_$61_memory_ptr_t_struct$_Player_$61_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart , value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 480)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_enum$_Stage_$24_to_t_uint8_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_enum$_CurrentPlayer_$27_to_t_uint8_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_struct$_Player_$61_memory_ptr_to_t_struct$_Player_$61_memory_ptr_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_struct$_Player_$61_memory_ptr_to_t_struct$_Player_$61_memory_ptr_fromStack(value8,  add(headStart, 320))\n\n        abi_encode_t_address_to_t_address_fromStack(value9,  add(headStart, 416))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value10,  add(headStart, 448))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_dataslot_t_array$_t_struct$_Game_$54_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_struct$_Game_$54_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_struct$_Game_$54_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Game_$54_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_enum$_CurrentPlayer_$27(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_CurrentPlayer_$27(value)\n    }\n\n    function cleanup_t_enum$_Stage_$24(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Stage_$24(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_enum$_CurrentPlayer_$27_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_CurrentPlayer_$27(value)\n    }\n\n    function convert_t_enum$_Stage_$24_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Stage_$24(value)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_CurrentPlayer_$27(value) {\n        if iszero(lt(value, 2)) { panic_error_0x21() }\n    }\n\n    function validator_assert_t_enum$_Stage_$24(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 1,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436106100555760003560e01c80630df716021461005a578063117a5b90146100975780632d76375d146100de5780633b17469e146100fa57806387fb99f614610116578063a40bf06114610132575b600080fd5b34801561006657600080fd5b50610081600480360381019061007c9190612071565b61015d565b60405161008e919061238d565b60405180910390f35b3480156100a357600080fd5b506100be60048036038101906100b99190612071565b6105ca565b6040516100d59b9a999897969594939291906123ca565b60405180910390f35b6100f860048036038101906100f3919061209a565b610710565b005b610114600480360381019061010f9190612022565b6112c6565b005b610130600480360381019061012b9190612071565b6116f0565b005b34801561013e57600080fd5b50610147611890565b60405161015491906123a8565b60405180910390f35b600081600280600281111561019b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6001600084815260200190815260200160002060020160149054906101000a900460ff1660028111156101f7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461020157600080fd5b60006001600086815260200190815260200160002060405180610160016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900460ff166002811115610323577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281111561035b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1660018111156103be577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60018111156103f6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016006820160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff16151515158152505081526020016009820160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff1615151515815250508152602001600c820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600d82015481525050905080608001518160e00151602001511115801561050a5750806080015181610100015160200151115b8061053d575080608001518160e00151602001511115801561053c5750806101000151602001518160e0015160200151115b5b1561054f5780602001519350506105c3565b80608001518161010001516020015111158015610577575080608001518160e0015160200151115b806105ab5750806080015181610100015160200151111580156105aa5750806101000151602001518160e0015160200151105b5b156105bd5780604001519350506105c3565b60009350505b5050919050565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160149054906101000a900460ff16908060030154908060040154908060050160009054906101000a900460ff16908060060160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff161515151581525050908060090160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff1615151515815250509080600c0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600d015490508b565b81600180600281111561074c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6001600084815260200190815260200160002060020160149054906101000a900460ff1660028111156107a8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146107b257600080fd5b833360006001600084815260200190815260200160002060405180610160016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900460ff1660028111156108d6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281111561090e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff166001811115610971577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60018111156109a9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016006820160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff16151515158152505081526020016009820160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff1615151515815250508152602001600c820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600d8201548152505090506000816020015173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b67578160c001516001811115610b0c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60006001811115610b46577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b148015610b5957508160e0015160400151155b610b6257600080fd5b610c3d565b816040015173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c37578160c001516001811115610bdc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600180811115610c15577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b148015610c29575081610100015160400151155b610c3257600080fd5b610c3c565b600080fd5b5b6000610c47611e5a565b90506000600160008b815260200190815260200160002090506000808260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610ccc57826006019150826009019050610d3b565b8260020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610d3557826009019150826006019050610d3a565b600080fd5b5b8a15610d5d5783826001016000828254610d5591906124d7565b925050819055505b816000016000815480929190610d7290612619565b91905055508a1580610d8b575082600301548260010154115b80610d9e57508260040154826000015410155b15610dc15760018260020160006101000a81548160ff0219169083151502179055505b8260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148015610e2f57508060020160009054906101000a900460ff16155b15610e8c5760018360050160006101000a81548160ff02191690836001811115610e82577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550610f54565b8260020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148015610efa57508060020160009054906101000a900460ff16155b15610f535760008360050160006101000a81548160ff02191690836001811115610f4d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505b5b8260060160020160009054906101000a900460ff168015610f8657508260090160020160009054906101000a900460ff165b156112b85760028360020160146101000a81548160ff02191690836002811115610fd9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550610fe78c61015d565b83600c0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff1683600c0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611165578260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc84600d01549081150290604051600060405180830381858888f193505050501580156110f0573d6000803e3d6000fd5b508260020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc84600d01549081150290604051600060405180830381858888f1935050505015801561115f573d6000803e3d6000fd5b506111e1565b82600c0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600285600d01546111b4919061252d565b9081150290604051600060405180830381858888f193505050501580156111df573d6000803e3d6000fd5b505b8b3373ffffffffffffffffffffffffffffffffffffffff167f2054774cb7e925725eac8501bba9c917d5c7e691145abf5a81d39841d0a5371384600001548560010154604051611232929190612475565b60405180910390a3600280811115611273577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8c3373ffffffffffffffffffffffffffffffffffffffff167f547e2e1ba13d6a72dfe27bd9814ab46412060b71fa2069142b1c7cff5d96b01a60405160405180910390a45b505050505050505050505050565b600034116112d357600080fd5b60405180610160016040528060005481526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff16815260200160006002811115611359577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020018381526020018281526020016001808111156113a3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016040518060600160405280600081526020016000815260200160001515815250815260200160405180606001604052806000815260200160008152602001600015158152508152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020013481525060016000805481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff02191690836002811115611510577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506080820151816003015560a0820151816004015560c08201518160050160006101000a81548160ff0219169083600181111561157a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060e082015181600601600082015181600001556020820151816001015560408201518160020160006101000a81548160ff021916908315150217905550505061010082015181600901600082015181600001556020820151816001015560408201518160020160006101000a81548160ff021916908315150217905550505061012082015181600c0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061014082015181600d01559050506000600281111561168e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000543373ffffffffffffffffffffffffffffffffffffffff167f547e2e1ba13d6a72dfe27bd9814ab46412060b71fa2069142b1c7cff5d96b01a60405160405180910390a46000808154809291906116e690612619565b9190505550505050565b80600080600281111561172c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6001600084815260200190815260200160002060020160149054906101000a900460ff166002811115611788577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461179257600080fd5b600060016000858152602001908152602001600020905080600d015434146117b957600080fd5b60018160020160146101000a81548160ff02191690836002811115611807577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060016002811115611846577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b843373ffffffffffffffffffffffffffffffffffffffff167f547e2e1ba13d6a72dfe27bd9814ab46412060b71fa2069142b1c7cff5d96b01a60405160405180910390a450505050565b606060008054905060008060005b8381101561199f573373ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061197757503373ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b1561198c5760018361198991906124d7565b92505b808061199790612619565b91505061189e565b5060008267ffffffffffffffff8111156119e2577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015611a1b57816020015b611a08611ea8565b815260200190600190039081611a005790505b50905060005b84811015611e4f573373ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611afa57503373ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15611e3c57600081905060006001600083815260200190815260200160002090508060405180610160016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900460ff166002811115611c29577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115611c61577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff166001811115611cc4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6001811115611cfc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016006820160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff16151515158152505081526020016009820160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff1615151515815250508152602001600c820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600d82015481525050848681518110611e1f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250600185611e3791906124d7565b945050505b8080611e4790612619565b915050611a21565b508094505050505090565b60006001600644426006604051602001611e7693929190612350565b6040516020818303038152906040528051906020012060001c611e99919061266c565b611ea391906124d7565b905090565b60405180610160016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160006002811115611f2f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600081526020016000815260200160006001811115611f7c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001611f89611fc0565b8152602001611f96611fc0565b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b604051806060016040528060008152602001600081526020016000151581525090565b600081359050611ff281612752565b92915050565b60008135905061200781612769565b92915050565b60008135905061201c81612780565b92915050565b60008060006060848603121561203757600080fd5b600061204586828701611fe3565b93505060206120568682870161200d565b92505060406120678682870161200d565b9150509250925092565b60006020828403121561208357600080fd5b60006120918482850161200d565b91505092915050565b600080604083850312156120ad57600080fd5b60006120bb8582860161200d565b92505060206120cc85828601611ff8565b9150509250929050565b60006120e283836121b6565b6101e08301905092915050565b6120f881612587565b82525050565b61210781612587565b82525050565b6000612118826124ae565b61212281856124c6565b935061212d8361249e565b8060005b8381101561215e57815161214588826120d6565b9750612150836124b9565b925050600181019050612131565b5085935050505092915050565b61217481612599565b82525050565b612183816125f5565b82525050565b612192816125f5565b82525050565b6121a181612607565b82525050565b6121b081612607565b82525050565b6101e0820160008201516121cd600085018261231b565b5060208201516121e060208501826120ef565b5060408201516121f360408501826120ef565b5060608201516122066060850182612198565b506080820151612219608085018261231b565b5060a082015161222c60a085018261231b565b5060c082015161223f60c085018261217a565b5060e082015161225260e0850182612297565b50610100820151612267610140850182612297565b5061012082015161227c6101a08501826120ef565b506101408201516122916101c085018261231b565b50505050565b6060820160008201516122ad600085018261231b565b5060208201516122c0602085018261231b565b5060408201516122d3604085018261216b565b50505050565b6060820160008201516122ef600085018261231b565b506020820151612302602085018261231b565b506040820151612315604085018261216b565b50505050565b612324816125eb565b82525050565b612333816125eb565b82525050565b61234a612345826125eb565b612662565b82525050565b600061235c8286612339565b60208201915061236c8285612339565b60208201915061237c8284612339565b602082019150819050949350505050565b60006020820190506123a260008301846120fe565b92915050565b600060208201905081810360008301526123c2818461210d565b905092915050565b60006101e0820190506123e0600083018e61232a565b6123ed602083018d6120fe565b6123fa604083018c6120fe565b612407606083018b6121a7565b612414608083018a61232a565b61242160a083018961232a565b61242e60c0830188612189565b61243b60e08301876122d9565b6124496101408301866122d9565b6124576101a08301856120fe565b6124656101c083018461232a565b9c9b505050505050505050505050565b600060408201905061248a600083018561232a565b612497602083018461232a565b9392505050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b60006124e2826125eb565b91506124ed836125eb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156125225761252161269d565b5b828201905092915050565b6000612538826125eb565b9150612543836125eb565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561257c5761257b61269d565b5b828202905092915050565b6000612592826125cb565b9050919050565b60008115159050919050565b60008190506125b38261272a565b919050565b60008190506125c68261273e565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612600826125a5565b9050919050565b6000612612826125b8565b9050919050565b6000612624826125eb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156126575761265661269d565b5b600182019050919050565b6000819050919050565b6000612677826125eb565b9150612682836125eb565b925082612692576126916126cc565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061273b5761273a6126fb565b5b50565b6003811061274f5761274e6126fb565b5b50565b61275b81612587565b811461276657600080fd5b50565b61277281612599565b811461277d57600080fd5b50565b612789816125eb565b811461279457600080fd5b5056fea2646970667358221220a4151d9c91c8ff3eb23fd83ef712b460952ddedd07a969c8735415a89115bdaf64736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDF71602 EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x117A5B90 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x2D76375D EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x3B17469E EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x87FB99F6 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0xA40BF061 EQ PUSH2 0x132 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x2071 JUMP JUMPDEST PUSH2 0x15D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x238D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB9 SWAP2 SWAP1 PUSH2 0x2071 JUMP JUMPDEST PUSH2 0x5CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x209A JUMP JUMPDEST PUSH2 0x710 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x2022 JUMP JUMPDEST PUSH2 0x12C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x2071 JUMP JUMPDEST PUSH2 0x16F0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x1890 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x23A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x19B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1F7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x323 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x35B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3BE JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3F6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x80 ADD MLOAD DUP2 PUSH1 0xE0 ADD MLOAD PUSH1 0x20 ADD MLOAD GT ISZERO DUP1 ISZERO PUSH2 0x50A JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD DUP2 PUSH2 0x100 ADD MLOAD PUSH1 0x20 ADD MLOAD GT JUMPDEST DUP1 PUSH2 0x53D JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD DUP2 PUSH1 0xE0 ADD MLOAD PUSH1 0x20 ADD MLOAD GT ISZERO DUP1 ISZERO PUSH2 0x53C JUMPI POP DUP1 PUSH2 0x100 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0xE0 ADD MLOAD PUSH1 0x20 ADD MLOAD GT JUMPDEST JUMPDEST ISZERO PUSH2 0x54F JUMPI DUP1 PUSH1 0x20 ADD MLOAD SWAP4 POP POP PUSH2 0x5C3 JUMP JUMPDEST DUP1 PUSH1 0x80 ADD MLOAD DUP2 PUSH2 0x100 ADD MLOAD PUSH1 0x20 ADD MLOAD GT ISZERO DUP1 ISZERO PUSH2 0x577 JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD DUP2 PUSH1 0xE0 ADD MLOAD PUSH1 0x20 ADD MLOAD GT JUMPDEST DUP1 PUSH2 0x5AB JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD DUP2 PUSH2 0x100 ADD MLOAD PUSH1 0x20 ADD MLOAD GT ISZERO DUP1 ISZERO PUSH2 0x5AA JUMPI POP DUP1 PUSH2 0x100 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0xE0 ADD MLOAD PUSH1 0x20 ADD MLOAD LT JUMPDEST JUMPDEST ISZERO PUSH2 0x5BD JUMPI DUP1 PUSH1 0x40 ADD MLOAD SWAP4 POP POP PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x0 SWAP4 POP POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x6 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 DUP1 PUSH1 0x9 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 DUP1 PUSH1 0xC ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0xD ADD SLOAD SWAP1 POP DUP12 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x74C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x7A8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x7B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLER PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x8D6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x90E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x971 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x9A9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB67 JUMPI DUP2 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xB0C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xB46 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ DUP1 ISZERO PUSH2 0xB59 JUMPI POP DUP2 PUSH1 0xE0 ADD MLOAD PUSH1 0x40 ADD MLOAD ISZERO JUMPDEST PUSH2 0xB62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC3D JUMP JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC37 JUMPI DUP2 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xBDC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0xC15 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ DUP1 ISZERO PUSH2 0xC29 JUMPI POP DUP2 PUSH2 0x100 ADD MLOAD PUSH1 0x40 ADD MLOAD ISZERO JUMPDEST PUSH2 0xC32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC3C JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC47 PUSH2 0x1E5A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCCC JUMPI DUP3 PUSH1 0x6 ADD SWAP2 POP DUP3 PUSH1 0x9 ADD SWAP1 POP PUSH2 0xD3B JUMP JUMPDEST DUP3 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD35 JUMPI DUP3 PUSH1 0x9 ADD SWAP2 POP DUP3 PUSH1 0x6 ADD SWAP1 POP PUSH2 0xD3A JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST DUP11 ISZERO PUSH2 0xD5D JUMPI DUP4 DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD55 SWAP2 SWAP1 PUSH2 0x24D7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xD72 SWAP1 PUSH2 0x2619 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP11 ISZERO DUP1 PUSH2 0xD8B JUMPI POP DUP3 PUSH1 0x3 ADD SLOAD DUP3 PUSH1 0x1 ADD SLOAD GT JUMPDEST DUP1 PUSH2 0xD9E JUMPI POP DUP3 PUSH1 0x4 ADD SLOAD DUP3 PUSH1 0x0 ADD SLOAD LT ISZERO JUMPDEST ISZERO PUSH2 0xDC1 JUMPI PUSH1 0x1 DUP3 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP3 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xE2F JUMPI POP DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xE8C JUMPI PUSH1 0x1 DUP4 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xE82 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0xF54 JUMP JUMPDEST DUP3 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xEFA JUMPI POP DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xF53 JUMPI PUSH1 0x0 DUP4 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xF4D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST DUP3 PUSH1 0x6 ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0xF86 JUMPI POP DUP3 PUSH1 0x9 ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x12B8 JUMPI PUSH1 0x2 DUP4 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xFD9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0xFE7 DUP13 PUSH2 0x15D JUMP JUMPDEST DUP4 PUSH1 0xC ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0xC ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1165 JUMPI DUP3 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP5 PUSH1 0xD ADD SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x10F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP3 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP5 PUSH1 0xD ADD SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x115F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x11E1 JUMP JUMPDEST DUP3 PUSH1 0xC ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x2 DUP6 PUSH1 0xD ADD SLOAD PUSH2 0x11B4 SWAP2 SWAP1 PUSH2 0x252D JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x11DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST DUP12 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2054774CB7E925725EAC8501BBA9C917D5C7E691145ABF5A81D39841D0A53713 DUP5 PUSH1 0x0 ADD SLOAD DUP6 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x1232 SWAP3 SWAP2 SWAP1 PUSH2 0x2475 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x1273 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP13 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x547E2E1BA13D6A72DFE27BD9814AB46412060B71FA2069142B1C7CFF5D96B01A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x12D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 SLOAD DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1359 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x13A3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLVALUE DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1510 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x157A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0xC ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0xD ADD SSTORE SWAP1 POP POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x168E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x547E2E1BA13D6A72DFE27BD9814AB46412060B71FA2069142B1C7CFF5D96B01A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x16E6 SWAP1 PUSH2 0x2619 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x172C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1788 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x1792 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0xD ADD SLOAD CALLVALUE EQ PUSH2 0x17B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1807 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1846 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x547E2E1BA13D6A72DFE27BD9814AB46412060B71FA2069142B1C7CFF5D96B01A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x199F JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1977 JUMPI POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x198C JUMPI PUSH1 0x1 DUP4 PUSH2 0x1989 SWAP2 SWAP1 PUSH2 0x24D7 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 DUP1 PUSH2 0x1997 SWAP1 PUSH2 0x2619 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x189E JUMP JUMPDEST POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19E2 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A1B JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1A08 PUSH2 0x1EA8 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1A00 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1E4F JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1AFA JUMPI POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x1E3C JUMPI PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1C29 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1C61 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1CC4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1CFC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP5 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x1E1F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x1 DUP6 PUSH2 0x1E37 SWAP2 SWAP1 PUSH2 0x24D7 JUMP JUMPDEST SWAP5 POP POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1E47 SWAP1 PUSH2 0x2619 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1A21 JUMP JUMPDEST POP DUP1 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x6 DIFFICULTY TIMESTAMP PUSH1 0x6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1E76 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x1E99 SWAP2 SWAP1 PUSH2 0x266C JUMP JUMPDEST PUSH2 0x1EA3 SWAP2 SWAP1 PUSH2 0x24D7 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1F2F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1F7C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F89 PUSH2 0x1FC0 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F96 PUSH2 0x1FC0 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FF2 DUP2 PUSH2 0x2752 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2007 DUP2 PUSH2 0x2769 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x201C DUP2 PUSH2 0x2780 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2037 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2045 DUP7 DUP3 DUP8 ADD PUSH2 0x1FE3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2056 DUP7 DUP3 DUP8 ADD PUSH2 0x200D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2067 DUP7 DUP3 DUP8 ADD PUSH2 0x200D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2083 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2091 DUP5 DUP3 DUP6 ADD PUSH2 0x200D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x20BB DUP6 DUP3 DUP7 ADD PUSH2 0x200D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20CC DUP6 DUP3 DUP7 ADD PUSH2 0x1FF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20E2 DUP4 DUP4 PUSH2 0x21B6 JUMP JUMPDEST PUSH2 0x1E0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20F8 DUP2 PUSH2 0x2587 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2107 DUP2 PUSH2 0x2587 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2118 DUP3 PUSH2 0x24AE JUMP JUMPDEST PUSH2 0x2122 DUP2 DUP6 PUSH2 0x24C6 JUMP JUMPDEST SWAP4 POP PUSH2 0x212D DUP4 PUSH2 0x249E JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x215E JUMPI DUP2 MLOAD PUSH2 0x2145 DUP9 DUP3 PUSH2 0x20D6 JUMP JUMPDEST SWAP8 POP PUSH2 0x2150 DUP4 PUSH2 0x24B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2131 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2174 DUP2 PUSH2 0x2599 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2183 DUP2 PUSH2 0x25F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2192 DUP2 PUSH2 0x25F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x21A1 DUP2 PUSH2 0x2607 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x21B0 DUP2 PUSH2 0x2607 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1E0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x21CD PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x231B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x21E0 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x20EF JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x21F3 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x20EF JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x2206 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2198 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x2219 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x231B JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x222C PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x231B JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x223F PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x217A JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x2252 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x2297 JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x2267 PUSH2 0x140 DUP6 ADD DUP3 PUSH2 0x2297 JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x227C PUSH2 0x1A0 DUP6 ADD DUP3 PUSH2 0x20EF JUMP JUMPDEST POP PUSH2 0x140 DUP3 ADD MLOAD PUSH2 0x2291 PUSH2 0x1C0 DUP6 ADD DUP3 PUSH2 0x231B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x22AD PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x231B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x22C0 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x231B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x22D3 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x216B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x22EF PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x231B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2302 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x231B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2315 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x216B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2324 DUP2 PUSH2 0x25EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2333 DUP2 PUSH2 0x25EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x234A PUSH2 0x2345 DUP3 PUSH2 0x25EB JUMP JUMPDEST PUSH2 0x2662 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x235C DUP3 DUP7 PUSH2 0x2339 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x236C DUP3 DUP6 PUSH2 0x2339 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x237C DUP3 DUP5 PUSH2 0x2339 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23A2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23C2 DUP2 DUP5 PUSH2 0x210D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E0 DUP3 ADD SWAP1 POP PUSH2 0x23E0 PUSH1 0x0 DUP4 ADD DUP15 PUSH2 0x232A JUMP JUMPDEST PUSH2 0x23ED PUSH1 0x20 DUP4 ADD DUP14 PUSH2 0x20FE JUMP JUMPDEST PUSH2 0x23FA PUSH1 0x40 DUP4 ADD DUP13 PUSH2 0x20FE JUMP JUMPDEST PUSH2 0x2407 PUSH1 0x60 DUP4 ADD DUP12 PUSH2 0x21A7 JUMP JUMPDEST PUSH2 0x2414 PUSH1 0x80 DUP4 ADD DUP11 PUSH2 0x232A JUMP JUMPDEST PUSH2 0x2421 PUSH1 0xA0 DUP4 ADD DUP10 PUSH2 0x232A JUMP JUMPDEST PUSH2 0x242E PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x2189 JUMP JUMPDEST PUSH2 0x243B PUSH1 0xE0 DUP4 ADD DUP8 PUSH2 0x22D9 JUMP JUMPDEST PUSH2 0x2449 PUSH2 0x140 DUP4 ADD DUP7 PUSH2 0x22D9 JUMP JUMPDEST PUSH2 0x2457 PUSH2 0x1A0 DUP4 ADD DUP6 PUSH2 0x20FE JUMP JUMPDEST PUSH2 0x2465 PUSH2 0x1C0 DUP4 ADD DUP5 PUSH2 0x232A JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x248A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x232A JUMP JUMPDEST PUSH2 0x2497 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x232A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24E2 DUP3 PUSH2 0x25EB JUMP JUMPDEST SWAP2 POP PUSH2 0x24ED DUP4 PUSH2 0x25EB JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2522 JUMPI PUSH2 0x2521 PUSH2 0x269D JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2538 DUP3 PUSH2 0x25EB JUMP JUMPDEST SWAP2 POP PUSH2 0x2543 DUP4 PUSH2 0x25EB JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x257C JUMPI PUSH2 0x257B PUSH2 0x269D JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2592 DUP3 PUSH2 0x25CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x25B3 DUP3 PUSH2 0x272A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x25C6 DUP3 PUSH2 0x273E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2600 DUP3 PUSH2 0x25A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2612 DUP3 PUSH2 0x25B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2624 DUP3 PUSH2 0x25EB JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2657 JUMPI PUSH2 0x2656 PUSH2 0x269D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2677 DUP3 PUSH2 0x25EB JUMP JUMPDEST SWAP2 POP PUSH2 0x2682 DUP4 PUSH2 0x25EB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2692 JUMPI PUSH2 0x2691 PUSH2 0x26CC JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x273B JUMPI PUSH2 0x273A PUSH2 0x26FB JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x274F JUMPI PUSH2 0x274E PUSH2 0x26FB JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x275B DUP2 PUSH2 0x2587 JUMP JUMPDEST DUP2 EQ PUSH2 0x2766 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2772 DUP2 PUSH2 0x2599 JUMP JUMPDEST DUP2 EQ PUSH2 0x277D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2789 DUP2 PUSH2 0x25EB JUMP JUMPDEST DUP2 EQ PUSH2 0x2794 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 ISZERO SAR SWAP13 SWAP2 0xC8 SELFDESTRUCT RETURNDATACOPY 0xB2 EXTCODEHASH 0xD8 RETURNDATACOPY 0xF7 SLT 0xB4 PUSH1 0x95 0x2D 0xDE 0xDD SMOD 0xA9 PUSH10 0xC8735415A89115BDAF64 PUSH20 0x6F6C634300080400330000000000000000000000 ",
              "sourceMap": "70:6345:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4628:865;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;924:37;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;2572:1606;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;968:610;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1701:293;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5499:914;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4628:865;4744:14;4707:6;4715:10;1671:5;1648:28;;;;;;;;;;;;;;;;:5;:13;1654:6;1648:13;;;;;;;;;;;:19;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;1640:37;;;;;;4774:16:::1;4793:5;:13;4799:6;4793:13;;;;;;;;;;;4774:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;4861:4;:13;;;4835:4;:16;;;:22;;;:39;;:102;;;;;4924:4;:13;;;4894:4;:21;;;:27;;;:43;4835:102;4834:233;;;;4981:4;:13;;;4955:4;:16;;;:22;;;:39;;:111;;;;;5039:4;:21;;;:27;;;5014:4;:16;;;:22;;;:52;4955:111;4834:233;4817:670;;;5099:4;:10;;;5092:17;;;;;4817:670;5175:4;:13;;;5144:4;:21;;;:27;;;:44;;:102;;;;;5233:4;:13;;;5208:4;:16;;;:22;;;:38;5144:102;5143:238;;;;5295:4;:13;;;5264:4;:21;;;:27;;;:44;;:116;;;;;5353:4;:21;;;:27;;;5328:4;:16;;;:22;;;:52;5264:116;5143:238;5126:361;;;5413:4;:15;;;5406:22;;;;;5126:361;5474:1;5459:17;;;1687:1;4628:865:::0;;;;;:::o;924:37::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2572:1606::-;2664:6;2672:9;1671:5;1648:28;;;;;;;;;;;;;;;;:5;:13;1654:6;1648:13;;;;;;;;;;;:19;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;1640:37;;;;;;2704:6:::1;2712:10;2064:16;2083:5;:13;2089:6;2083:13;;;;;;;;;;;2064:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;2106:19;2149:4;:10;;;2139:20;;:6;:20;;;2135:414;;;2223:4;:18;;;2200:41;;;;;;;;;;;;;;;;:19;:41;;;;;;;;;;;;;;;;;:87;;;;;2266:4;:16;;;:21;;;2265:22;2200:87;2175:126;;;::::0;::::1;;2135:414;;;2332:4;:15;;;2322:25;;:6;:25;;;2318:231;;;2416:4;:18;;;2388:46;;;;;;;;;;;;;;;;:24;:46:::0;::::1;;;;;;;;;;;;;;;;:97;;;;;2459:4;:21;;;:26;;;2458:27;2388:97;2363:136;;;::::0;::::1;;2318:231;;;2530:8;::::0;::::1;2318:231;2135:414;2738:17:::2;2758:8;:6;:8::i;:::-;2738:28;;2776:17;2796:5;:13;2802:6;2796:13;;;;;;;;;;;2776:33;;2819:21;2850:23:::0;2901:4:::2;:10;;;;;;;;;;;;2887:24;;:10;:24;;;2883:277;;;2936:4;:16;;2927:25;;2977:4;:21;;2966:32;;2883:277;;;3033:4;:15;;;;;;;;;;;;3019:29;;:10;:29;;;3015:145;;;3073:4;:21;;3064:30;;3119:4;:16;;3108:27;;3015:145;;;3152:8;::::0;::::2;3015:145;2883:277;3175:4;3171:35;;;3197:9;3181:6;:12;;;:25;;;;;;;:::i;:::-;;;;;;;;3171:35;3216:6;:11;;;:13;;;;;;;;;:::i;:::-;;;;;;3258:4;3257:5;:37;;;;3281:4;:13;;;3266:6;:12;;;:28;3257:37;:68;;;;3313:4;:12;;;3298:6;:11;;;:27;;3257:68;3240:114;;;3350:4;3336:6;:11;;;:18;;;;;;;;;;;;;;;;;;3240:114;3383:4;:10;;;;;;;;;;;;3369:24;;:10;:24;;;:42;;;;;3398:8;:13;;;;;;;;;;;;3397:14;3369:42;3365:242;;;3448:24;3427:4;:18;;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3365:242;;;3507:4;:15;;;;;;;;;;;;3493:29;;:10;:29;;;:47;;;;;3527:8;:13;;;;;;;;;;;;3526:14;3493:47;3489:118;;;3577:19;3556:4;:18;;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3489:118;3365:242;3621:4;:16;;:21;;;;;;;;;;;;:51;;;;;3646:4;:21;;:26;;;;;;;;;;;;3621:51;3617:555;;;3701:10;3688:4;:10;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3739:17;3749:6;3739:9;:17::i;:::-;3725:4;:11;;;:31;;;;;;;;;;;;;;;;;;3798:1;3775:25;;:4;:11;;;;;;;;;;;;:25;;;3771:245;;;3828:4;:10;;;;;;;;;;;;3820:28;;:38;3849:4;:8;;;3820:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;3884:4;:15;;;;;;;;;;;;3876:33;;:43;3910:4;:8;;;3876:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;3771:245;;;3966:4;:11;;;;;;;;;;;;3958:29;;:43;3999:1;3988:4;:8;;;:12;;;;:::i;:::-;3958:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;3771:245;4061:6;4049:10;4034:61;;;4069:6;:11;;;4082:6;:12;;;4034:61;;;;;;;:::i;:::-;;;;;;;;4150:10;4114:47:::0;::::2;;;;;;;;;;;;;;;4142:6;4130:10;4114:47;;;;;;;;;;;;3617:555;2558:1;;;;1687::::1;;;;2572:1606:::0;;;;:::o;968:610::-;1121:1;1109:9;:13;1101:22;;;;;;1160:312;;;;;;;;1178:16;;1160:312;;;;1208:10;1160:312;;;;;;1232:11;1160:312;;;;;;1257:9;1160:312;;;;;;;;;;;;;;;;;;;;1280:9;1160:312;;;;1303:8;1160:312;;;;1325:24;1160:312;;;;;;;;;;;;;;;;;;;;1363:19;;;;;;;;1370:1;1363:19;;;;1373:1;1363:19;;;;1376:5;1363:19;;;;;1160:312;;;;1396:19;;;;;;;;1403:1;1396:19;;;;1406:1;1396:19;;;;1409:5;1396:19;;;;;1160:312;;;;1437:1;1160:312;;;;;;1453:9;1160:312;;;1134:5;:23;1140:16;;1134:23;;;;;;;;;;;:338;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1533:9;1487:56;;;;;;;;;;;;;;;;1515:16;;1503:10;1487:56;;;;;;;;;;;;1553:16;;:18;;;;;;;;;:::i;:::-;;;;;;968:610;;;:::o;1701:293::-;1787:6;1795:9;1671:5;1648:28;;;;;;;;;;;;;;;;:5;:13;1654:6;1648:13;;;;;;;;;;;:19;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;1640:37;;;;;;1820:17:::1;1840:5;:13;1846:6;1840:13;;;;;;;;;;;1820:33;;1884:4;:8;;;1871:9;:21;1863:30;;;::::0;::::1;;1917:9;1904:4;:10;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1977:9;1941:46;;;;;;;;;;;;;;;;1969:6;1957:10;1941:46;;;;;;;;;;;;1687:1;1701:293:::0;;;:::o;5499:914::-;5544:22;5578;5603:16;;5578:41;;5629:17;5660:20;5700:9;5695:233;5719:14;5715:1;:18;5695:233;;;5793:10;5775:28;;:5;:8;5781:1;5775:8;;;;;;;;;;;:14;;;;;;;;;;;;:28;;;:81;;;;5846:10;5823:33;;:5;:8;5829:1;5823:8;;;;;;;;;;;:19;;;;;;;;;;;;:33;;;5775:81;5754:164;;;5902:1;5889:14;;;;;:::i;:::-;;;5754:164;5735:3;;;;;:::i;:::-;;;;5695:233;;;;5938:21;5973:9;5962:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;5938:45;;5998:9;5993:389;6017:14;6013:1;:18;5993:389;;;6091:10;6073:28;;:5;:8;6079:1;6073:8;;;;;;;;;;;:14;;;;;;;;;;;;:28;;;:81;;;;6144:10;6121:33;;:5;:8;6127:1;6121:8;;;;;;;;;;;:19;;;;;;;;;;;;:33;;;6073:81;6052:320;;;6187:17;6207:1;6187:21;;6226:24;6253:5;:16;6259:9;6253:16;;;;;;;;;;;6226:43;;6311:11;6287:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;6295:12;6287:21;;;;;;;;;;;;;;;;;;;;;:35;;;;6356:1;6340:17;;;;;:::i;:::-;;;6052:320;;;6033:3;;;;;:::i;:::-;;;;5993:389;;;;6399:7;6392:14;;;;;;5499:914;:::o;4282:340::-;4322:7;4614:1;4609;4459:16;4501:15;4550:1;4417:157;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4386:206;;;;;;4361:245;;:249;;;;:::i;:::-;4360:255;;;;:::i;:::-;4341:274;;4282:340;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:133::-;195:5;233:6;220:20;211:29;;249:30;273:5;249:30;:::i;:::-;201:84;;;;:::o;291:139::-;337:5;375:6;362:20;353:29;;391:33;418:5;391:33;:::i;:::-;343:87;;;;:::o;436:552::-;513:6;521;529;578:2;566:9;557:7;553:23;549:32;546:2;;;594:1;591;584:12;546:2;637:1;662:53;707:7;698:6;687:9;683:22;662:53;:::i;:::-;652:63;;608:117;764:2;790:53;835:7;826:6;815:9;811:22;790:53;:::i;:::-;780:63;;735:118;892:2;918:53;963:7;954:6;943:9;939:22;918:53;:::i;:::-;908:63;;863:118;536:452;;;;;:::o;994:262::-;1053:6;1102:2;1090:9;1081:7;1077:23;1073:32;1070:2;;;1118:1;1115;1108:12;1070:2;1161:1;1186:53;1231:7;1222:6;1211:9;1207:22;1186:53;:::i;:::-;1176:63;;1132:117;1060:196;;;;:::o;1262:401::-;1327:6;1335;1384:2;1372:9;1363:7;1359:23;1355:32;1352:2;;;1400:1;1397;1390:12;1352:2;1443:1;1468:53;1513:7;1504:6;1493:9;1489:22;1468:53;:::i;:::-;1458:63;;1414:117;1570:2;1596:50;1638:7;1629:6;1618:9;1614:22;1596:50;:::i;:::-;1586:60;;1541:115;1342:321;;;;;:::o;1669:261::-;1778:10;1799:86;1881:3;1873:6;1799:86;:::i;:::-;1917:6;1912:3;1908:16;1894:30;;1789:141;;;;:::o;1936:108::-;2013:24;2031:5;2013:24;:::i;:::-;2008:3;2001:37;1991:53;;:::o;2050:118::-;2137:24;2155:5;2137:24;:::i;:::-;2132:3;2125:37;2115:53;;:::o;2226:892::-;2385:3;2414:74;2482:5;2414:74;:::i;:::-;2504:106;2603:6;2598:3;2504:106;:::i;:::-;2497:113;;2634:76;2704:5;2634:76;:::i;:::-;2733:7;2764:1;2749:344;2774:6;2771:1;2768:13;2749:344;;;2850:6;2844:13;2877:103;2976:3;2961:13;2877:103;:::i;:::-;2870:110;;3003:80;3076:6;3003:80;:::i;:::-;2993:90;;2809:284;2796:1;2793;2789:9;2784:14;;2749:344;;;2753:14;3109:3;3102:10;;2390:728;;;;;;;:::o;3124:99::-;3195:21;3210:5;3195:21;:::i;:::-;3190:3;3183:34;3173:50;;:::o;3229:149::-;3320:51;3365:5;3320:51;:::i;:::-;3315:3;3308:64;3298:80;;:::o;3384:159::-;3485:51;3530:5;3485:51;:::i;:::-;3480:3;3473:64;3463:80;;:::o;3549:133::-;3632:43;3669:5;3632:43;:::i;:::-;3627:3;3620:56;3610:72;;:::o;3688:143::-;3781:43;3818:5;3781:43;:::i;:::-;3776:3;3769:56;3759:72;;:::o;3885:2217::-;4012:6;4007:3;4003:16;4099:4;4092:5;4088:16;4082:23;4118:63;4175:4;4170:3;4166:14;4152:12;4118:63;:::i;:::-;4029:162;4274:4;4267:5;4263:16;4257:23;4293:63;4350:4;4345:3;4341:14;4327:12;4293:63;:::i;:::-;4201:165;4454:4;4447:5;4443:16;4437:23;4473:63;4530:4;4525:3;4521:14;4507:12;4473:63;:::i;:::-;4376:170;4629:4;4622:5;4618:16;4612:23;4648:69;4711:4;4706:3;4702:14;4688:12;4648:69;:::i;:::-;4556:171;4813:4;4806:5;4802:16;4796:23;4832:63;4889:4;4884:3;4880:14;4866:12;4832:63;:::i;:::-;4737:168;4990:4;4983:5;4979:16;4973:23;5009:63;5066:4;5061:3;5057:14;5043:12;5009:63;:::i;:::-;4915:167;5173:4;5166:5;5162:16;5156:23;5192:77;5263:4;5258:3;5254:14;5240:12;5192:77;:::i;:::-;5092:187;5368:4;5361:5;5357:16;5351:23;5387:107;5488:4;5483:3;5479:14;5465:12;5387:107;:::i;:::-;5289:215;5598:6;5591:5;5587:18;5581:25;5619:109;5720:6;5715:3;5711:16;5697:12;5619:109;:::i;:::-;5514:224;5822:6;5815:5;5811:18;5805:25;5843:65;5900:6;5895:3;5891:16;5877:12;5843:65;:::i;:::-;5748:170;5999:6;5992:5;5988:18;5982:25;6020:65;6077:6;6072:3;6068:16;6054:12;6020:65;:::i;:::-;5928:167;3981:2121;;;:::o;6160:660::-;6291:4;6286:3;6282:14;6378:4;6371:5;6367:16;6361:23;6397:63;6454:4;6449:3;6445:14;6431:12;6397:63;:::i;:::-;6306:164;6553:4;6546:5;6542:16;6536:23;6572:63;6629:4;6624:3;6620:14;6606:12;6572:63;:::i;:::-;6480:165;6727:4;6720:5;6716:16;6710:23;6746:57;6797:4;6792:3;6788:14;6774:12;6746:57;:::i;:::-;6655:158;6260:560;;;:::o;6878:670::-;7019:4;7014:3;7010:14;7106:4;7099:5;7095:16;7089:23;7125:63;7182:4;7177:3;7173:14;7159:12;7125:63;:::i;:::-;7034:164;7281:4;7274:5;7270:16;7264:23;7300:63;7357:4;7352:3;7348:14;7334:12;7300:63;:::i;:::-;7208:165;7455:4;7448:5;7444:16;7438:23;7474:57;7525:4;7520:3;7516:14;7502:12;7474:57;:::i;:::-;7383:158;6988:560;;;:::o;7554:108::-;7631:24;7649:5;7631:24;:::i;:::-;7626:3;7619:37;7609:53;;:::o;7668:118::-;7755:24;7773:5;7755:24;:::i;:::-;7750:3;7743:37;7733:53;;:::o;7792:157::-;7897:45;7917:24;7935:5;7917:24;:::i;:::-;7897:45;:::i;:::-;7892:3;7885:58;7875:74;;:::o;7955:538::-;8123:3;8138:75;8209:3;8200:6;8138:75;:::i;:::-;8238:2;8233:3;8229:12;8222:19;;8251:75;8322:3;8313:6;8251:75;:::i;:::-;8351:2;8346:3;8342:12;8335:19;;8364:75;8435:3;8426:6;8364:75;:::i;:::-;8464:2;8459:3;8455:12;8448:19;;8484:3;8477:10;;8127:366;;;;;;:::o;8499:222::-;8592:4;8630:2;8619:9;8615:18;8607:26;;8643:71;8711:1;8700:9;8696:17;8687:6;8643:71;:::i;:::-;8597:124;;;;:::o;8727:453::-;8910:4;8948:2;8937:9;8933:18;8925:26;;8997:9;8991:4;8987:20;8983:1;8972:9;8968:17;8961:47;9025:148;9168:4;9159:6;9025:148;:::i;:::-;9017:156;;8915:265;;;;:::o;9186:1548::-;9668:4;9706:3;9695:9;9691:19;9683:27;;9720:71;9788:1;9777:9;9773:17;9764:6;9720:71;:::i;:::-;9801:72;9869:2;9858:9;9854:18;9845:6;9801:72;:::i;:::-;9883;9951:2;9940:9;9936:18;9927:6;9883:72;:::i;:::-;9965:78;10039:2;10028:9;10024:18;10015:6;9965:78;:::i;:::-;10053:73;10121:3;10110:9;10106:19;10097:6;10053:73;:::i;:::-;10136;10204:3;10193:9;10189:19;10180:6;10136:73;:::i;:::-;10219:87;10301:3;10290:9;10286:19;10277:6;10219:87;:::i;:::-;10316:117;10428:3;10417:9;10413:19;10404:6;10316:117;:::i;:::-;10443;10555:3;10544:9;10540:19;10531:6;10443:117;:::i;:::-;10570:73;10638:3;10627:9;10623:19;10614:6;10570:73;:::i;:::-;10653:74;10722:3;10711:9;10707:19;10697:7;10653:74;:::i;:::-;9673:1061;;;;;;;;;;;;;;:::o;10740:332::-;10861:4;10899:2;10888:9;10884:18;10876:26;;10912:71;10980:1;10969:9;10965:17;10956:6;10912:71;:::i;:::-;10993:72;11061:2;11050:9;11046:18;11037:6;10993:72;:::i;:::-;10866:206;;;;;:::o;11078:152::-;11165:4;11188:3;11180:11;;11218:4;11213:3;11209:14;11201:22;;11170:60;;;:::o;11236:134::-;11323:6;11357:5;11351:12;11341:22;;11330:40;;;:::o;11376:133::-;11466:4;11498;11493:3;11489:14;11481:22;;11471:38;;;:::o;11515:204::-;11634:11;11668:6;11663:3;11656:19;11708:4;11703:3;11699:14;11684:29;;11646:73;;;;:::o;11725:305::-;11765:3;11784:20;11802:1;11784:20;:::i;:::-;11779:25;;11818:20;11836:1;11818:20;:::i;:::-;11813:25;;11972:1;11904:66;11900:74;11897:1;11894:81;11891:2;;;11978:18;;:::i;:::-;11891:2;12022:1;12019;12015:9;12008:16;;11769:261;;;;:::o;12036:348::-;12076:7;12099:20;12117:1;12099:20;:::i;:::-;12094:25;;12133:20;12151:1;12133:20;:::i;:::-;12128:25;;12321:1;12253:66;12249:74;12246:1;12243:81;12238:1;12231:9;12224:17;12220:105;12217:2;;;12328:18;;:::i;:::-;12217:2;12376:1;12373;12369:9;12358:20;;12084:300;;;;:::o;12390:96::-;12427:7;12456:24;12474:5;12456:24;:::i;:::-;12445:35;;12435:51;;;:::o;12492:90::-;12526:7;12569:5;12562:13;12555:21;12544:32;;12534:48;;;:::o;12588:143::-;12641:7;12670:5;12659:16;;12676:49;12719:5;12676:49;:::i;:::-;12649:82;;;:::o;12737:127::-;12782:7;12811:5;12800:16;;12817:41;12852:5;12817:41;:::i;:::-;12790:74;;;:::o;12870:126::-;12907:7;12947:42;12940:5;12936:54;12925:65;;12915:81;;;:::o;13002:77::-;13039:7;13068:5;13057:16;;13047:32;;;:::o;13085:143::-;13149:9;13182:40;13216:5;13182:40;:::i;:::-;13169:53;;13159:69;;;:::o;13234:127::-;13290:9;13323:32;13349:5;13323:32;:::i;:::-;13310:45;;13300:61;;;:::o;13367:233::-;13406:3;13429:24;13447:5;13429:24;:::i;:::-;13420:33;;13475:66;13468:5;13465:77;13462:2;;;13545:18;;:::i;:::-;13462:2;13592:1;13585:5;13581:13;13574:20;;13410:190;;;:::o;13606:79::-;13645:7;13674:5;13663:16;;13653:32;;;:::o;13691:176::-;13723:1;13740:20;13758:1;13740:20;:::i;:::-;13735:25;;13774:20;13792:1;13774:20;:::i;:::-;13769:25;;13813:1;13803:2;;13818:18;;:::i;:::-;13803:2;13859:1;13856;13852:9;13847:14;;13725:142;;;;:::o;13873:180::-;13921:77;13918:1;13911:88;14018:4;14015:1;14008:15;14042:4;14039:1;14032:15;14059:180;14107:77;14104:1;14097:88;14204:4;14201:1;14194:15;14228:4;14225:1;14218:15;14245:180;14293:77;14290:1;14283:88;14390:4;14387:1;14380:15;14414:4;14411:1;14404:15;14431:121;14520:1;14513:5;14510:12;14500:2;;14526:18;;:::i;:::-;14500:2;14490:62;:::o;14558:113::-;14639:1;14632:5;14629:12;14619:2;;14645:18;;:::i;:::-;14619:2;14609:62;:::o;14677:122::-;14750:24;14768:5;14750:24;:::i;:::-;14743:5;14740:35;14730:2;;14789:1;14786;14779:12;14730:2;14720:79;:::o;14805:116::-;14875:21;14890:5;14875:21;:::i;:::-;14868:5;14865:32;14855:2;;14911:1;14908;14901:12;14855:2;14845:76;:::o;14927:122::-;15000:24;15018:5;15000:24;:::i;:::-;14993:5;14990:35;14980:2;;15039:1;15036;15029:12;14980:2;14970:79;:::o"
            },
            "methodIdentifiers": {
              "challengerBet(uint256)": "87fb99f6",
              "createGame(address,uint256,uint256)": "3b17469e",
              "fetchMyGames()": "a40bf061",
              "games(uint256)": "117a5b90",
              "playTurn(uint256,bool)": "2d76375d",
              "setWinner(uint256)": "0df71602"
            }
          }
        }
      }
    },
    "sources": {
      "contracts/DiceIt.sol": {
        "ast": {
          "absolutePath": "contracts/DiceIt.sol",
          "exportedSymbols": {
            "DiceIt": [
              720
            ]
          },
          "id": 721,
          "license": "GPL-3.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".0",
                "<",
                "0.9",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "37:31:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 720,
              "linearizedBaseContracts": [
                720
              ],
              "name": "DiceIt",
              "nameLocation": "79:6:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "id": 10,
                  "name": "GameStageChange",
                  "nameLocation": "98:15:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 9,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_from",
                        "nameLocation": "139:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 10,
                        "src": "123:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "123:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 5,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "170:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 10,
                        "src": "154:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "154:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 8,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_stage",
                        "nameLocation": "199:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 10,
                        "src": "185:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Stage_$24",
                          "typeString": "enum DiceIt.Stage"
                        },
                        "typeName": {
                          "id": 7,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 6,
                            "name": "Stage",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24,
                            "src": "185:5:0"
                          },
                          "referencedDeclaration": 24,
                          "src": "185:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$24",
                            "typeString": "enum DiceIt.Stage"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "113:98:0"
                  },
                  "src": "92:120:0"
                },
                {
                  "anonymous": false,
                  "id": 20,
                  "name": "GameTurnPlayed",
                  "nameLocation": "224:14:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 19,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 12,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_from",
                        "nameLocation": "264:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 20,
                        "src": "248:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 11,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "248:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 14,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "295:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 20,
                        "src": "279:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 13,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "279:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 16,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_turn",
                        "nameLocation": "318:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 20,
                        "src": "310:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "310:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 18,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_score",
                        "nameLocation": "341:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 20,
                        "src": "333:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 17,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "333:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "238:115:0"
                  },
                  "src": "218:136:0"
                },
                {
                  "canonicalName": "DiceIt.Stage",
                  "id": 24,
                  "members": [
                    {
                      "id": 21,
                      "name": "Reg",
                      "nameLocation": "381:3:0",
                      "nodeType": "EnumValue",
                      "src": "381:3:0"
                    },
                    {
                      "id": 22,
                      "name": "Run",
                      "nameLocation": "394:3:0",
                      "nodeType": "EnumValue",
                      "src": "394:3:0"
                    },
                    {
                      "id": 23,
                      "name": "Done",
                      "nameLocation": "407:4:0",
                      "nodeType": "EnumValue",
                      "src": "407:4:0"
                    }
                  ],
                  "name": "Stage",
                  "nameLocation": "365:5:0",
                  "nodeType": "EnumDefinition",
                  "src": "360:57:0"
                },
                {
                  "canonicalName": "DiceIt.CurrentPlayer",
                  "id": 27,
                  "members": [
                    {
                      "id": 25,
                      "name": "Owner",
                      "nameLocation": "451:5:0",
                      "nodeType": "EnumValue",
                      "src": "451:5:0"
                    },
                    {
                      "id": 26,
                      "name": "Challenger",
                      "nameLocation": "466:10:0",
                      "nodeType": "EnumValue",
                      "src": "466:10:0"
                    }
                  ],
                  "name": "CurrentPlayer",
                  "nameLocation": "427:13:0",
                  "nodeType": "EnumDefinition",
                  "src": "422:60:0"
                },
                {
                  "canonicalName": "DiceIt.Game",
                  "id": 54,
                  "members": [
                    {
                      "constant": false,
                      "id": 29,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "518:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 54,
                      "src": "510:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "510:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 31,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "538:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 54,
                      "src": "530:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 30,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "530:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 33,
                      "mutability": "mutable",
                      "name": "challenger",
                      "nameLocation": "561:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 54,
                      "src": "553:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 32,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "553:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 36,
                      "mutability": "mutable",
                      "name": "stage",
                      "nameLocation": "587:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 54,
                      "src": "581:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Stage_$24",
                        "typeString": "enum DiceIt.Stage"
                      },
                      "typeName": {
                        "id": 35,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34,
                          "name": "Stage",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24,
                          "src": "581:5:0"
                        },
                        "referencedDeclaration": 24,
                        "src": "581:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Stage_$24",
                          "typeString": "enum DiceIt.Stage"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 38,
                      "mutability": "mutable",
                      "name": "maxScore",
                      "nameLocation": "610:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 54,
                      "src": "602:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 37,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "602:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 40,
                      "mutability": "mutable",
                      "name": "maxTurn",
                      "nameLocation": "636:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 54,
                      "src": "628:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 39,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "628:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 43,
                      "mutability": "mutable",
                      "name": "currentPlayer",
                      "nameLocation": "667:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 54,
                      "src": "653:27:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CurrentPlayer_$27",
                        "typeString": "enum DiceIt.CurrentPlayer"
                      },
                      "typeName": {
                        "id": 42,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 41,
                          "name": "CurrentPlayer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 27,
                          "src": "653:13:0"
                        },
                        "referencedDeclaration": 27,
                        "src": "653:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CurrentPlayer_$27",
                          "typeString": "enum DiceIt.CurrentPlayer"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 46,
                      "mutability": "mutable",
                      "name": "ownerPlayer",
                      "nameLocation": "697:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 54,
                      "src": "690:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Player_$61_storage_ptr",
                        "typeString": "struct DiceIt.Player"
                      },
                      "typeName": {
                        "id": 45,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 44,
                          "name": "Player",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 61,
                          "src": "690:6:0"
                        },
                        "referencedDeclaration": 61,
                        "src": "690:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Player_$61_storage_ptr",
                          "typeString": "struct DiceIt.Player"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 49,
                      "mutability": "mutable",
                      "name": "challengerPlayer",
                      "nameLocation": "725:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 54,
                      "src": "718:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Player_$61_storage_ptr",
                        "typeString": "struct DiceIt.Player"
                      },
                      "typeName": {
                        "id": 48,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 47,
                          "name": "Player",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 61,
                          "src": "718:6:0"
                        },
                        "referencedDeclaration": 61,
                        "src": "718:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Player_$61_storage_ptr",
                          "typeString": "struct DiceIt.Player"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 51,
                      "mutability": "mutable",
                      "name": "winner",
                      "nameLocation": "759:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 54,
                      "src": "751:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 50,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "751:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 53,
                      "mutability": "mutable",
                      "name": "bet",
                      "nameLocation": "783:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 54,
                      "src": "775:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 52,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "775:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Game",
                  "nameLocation": "495:4:0",
                  "nodeType": "StructDefinition",
                  "scope": 720,
                  "src": "488:305:0",
                  "visibility": "public"
                },
                {
                  "canonicalName": "DiceIt.Player",
                  "id": 61,
                  "members": [
                    {
                      "constant": false,
                      "id": 56,
                      "mutability": "mutable",
                      "name": "turn",
                      "nameLocation": "831:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 61,
                      "src": "823:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 55,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "823:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 58,
                      "mutability": "mutable",
                      "name": "score",
                      "nameLocation": "853:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 61,
                      "src": "845:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 57,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "845:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 60,
                      "mutability": "mutable",
                      "name": "stop",
                      "nameLocation": "873:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 61,
                      "src": "868:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 59,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "868:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Player",
                  "nameLocation": "806:6:0",
                  "nodeType": "StructDefinition",
                  "scope": 720,
                  "src": "799:85:0",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 64,
                  "mutability": "mutable",
                  "name": "currentGameIndex",
                  "nameLocation": "898:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 720,
                  "src": "890:28:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "890:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "30",
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "917:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "functionSelector": "117a5b90",
                  "id": 69,
                  "mutability": "mutable",
                  "name": "games",
                  "nameLocation": "956:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 720,
                  "src": "924:37:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$54_storage_$",
                    "typeString": "mapping(uint256 => struct DiceIt.Game)"
                  },
                  "typeName": {
                    "id": 68,
                    "keyType": {
                      "id": 65,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "932:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "924:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$54_storage_$",
                      "typeString": "mapping(uint256 => struct DiceIt.Game)"
                    },
                    "valueType": {
                      "id": 67,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 66,
                        "name": "Game",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 54,
                        "src": "943:4:0"
                      },
                      "referencedDeclaration": 54,
                      "src": "943:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                        "typeString": "struct DiceIt.Game"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 129,
                    "nodeType": "Block",
                    "src": "1091:487:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 82,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 79,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1109:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 80,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "1109:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 81,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1121:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1109:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 78,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1101:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 83,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1101:22:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 84,
                        "nodeType": "ExpressionStatement",
                        "src": "1101:22:0"
                      },
                      {
                        "expression": {
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 85,
                              "name": "games",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69,
                              "src": "1134:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$54_storage_$",
                                "typeString": "mapping(uint256 => struct DiceIt.Game storage ref)"
                              }
                            },
                            "id": 87,
                            "indexExpression": {
                              "id": 86,
                              "name": "currentGameIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64,
                              "src": "1140:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1134:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Game_$54_storage",
                              "typeString": "struct DiceIt.Game storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 89,
                                "name": "currentGameIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64,
                                "src": "1178:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 90,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1208:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 91,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1208:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 92,
                                "name": "_challenger",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 71,
                                "src": "1232:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 93,
                                  "name": "Stage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24,
                                  "src": "1257:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_Stage_$24_$",
                                    "typeString": "type(enum DiceIt.Stage)"
                                  }
                                },
                                "id": 94,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "Reg",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 21,
                                "src": "1257:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Stage_$24",
                                  "typeString": "enum DiceIt.Stage"
                                }
                              },
                              {
                                "id": 95,
                                "name": "_maxScore",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73,
                                "src": "1280:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 96,
                                "name": "_maxTurn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 75,
                                "src": "1303:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 97,
                                  "name": "CurrentPlayer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 27,
                                  "src": "1325:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_CurrentPlayer_$27_$",
                                    "typeString": "type(enum DiceIt.CurrentPlayer)"
                                  }
                                },
                                "id": 98,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "Challenger",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 26,
                                "src": "1325:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_CurrentPlayer_$27",
                                  "typeString": "enum DiceIt.CurrentPlayer"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 100,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1370:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 101,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1373:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "66616c7365",
                                    "id": 102,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1376:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 99,
                                  "name": "Player",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 61,
                                  "src": "1363:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_Player_$61_storage_ptr_$",
                                    "typeString": "type(struct DiceIt.Player storage pointer)"
                                  }
                                },
                                "id": 103,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "structConstructorCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1363:19:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Player_$61_memory_ptr",
                                  "typeString": "struct DiceIt.Player memory"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 105,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1403:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 106,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1406:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "66616c7365",
                                    "id": 107,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1409:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 104,
                                  "name": "Player",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 61,
                                  "src": "1396:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_Player_$61_storage_ptr_$",
                                    "typeString": "type(struct DiceIt.Player storage pointer)"
                                  }
                                },
                                "id": 108,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "structConstructorCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1396:19:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Player_$61_memory_ptr",
                                  "typeString": "struct DiceIt.Player memory"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 111,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1437:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 110,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1429:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 109,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1429:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 112,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1429:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 113,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1453:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 114,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "1453:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_enum$_Stage_$24",
                                  "typeString": "enum DiceIt.Stage"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_enum$_CurrentPlayer_$27",
                                  "typeString": "enum DiceIt.CurrentPlayer"
                                },
                                {
                                  "typeIdentifier": "t_struct$_Player_$61_memory_ptr",
                                  "typeString": "struct DiceIt.Player memory"
                                },
                                {
                                  "typeIdentifier": "t_struct$_Player_$61_memory_ptr",
                                  "typeString": "struct DiceIt.Player memory"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 88,
                              "name": "Game",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "1160:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Game_$54_storage_ptr_$",
                                "typeString": "type(struct DiceIt.Game storage pointer)"
                              }
                            },
                            "id": 115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1160:312:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Game_$54_memory_ptr",
                              "typeString": "struct DiceIt.Game memory"
                            }
                          },
                          "src": "1134:338:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Game_$54_storage",
                            "typeString": "struct DiceIt.Game storage ref"
                          }
                        },
                        "id": 117,
                        "nodeType": "ExpressionStatement",
                        "src": "1134:338:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 119,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1503:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1503:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 121,
                              "name": "currentGameIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64,
                              "src": "1515:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 122,
                                "name": "Stage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24,
                                "src": "1533:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Stage_$24_$",
                                  "typeString": "type(enum DiceIt.Stage)"
                                }
                              },
                              "id": 123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Reg",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 21,
                              "src": "1533:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Stage_$24",
                                "typeString": "enum DiceIt.Stage"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_Stage_$24",
                                "typeString": "enum DiceIt.Stage"
                              }
                            ],
                            "id": 118,
                            "name": "GameStageChange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "1487:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_enum$_Stage_$24_$returns$__$",
                              "typeString": "function (address,uint256,enum DiceIt.Stage)"
                            }
                          },
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1487:56:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 125,
                        "nodeType": "EmitStatement",
                        "src": "1482:61:0"
                      },
                      {
                        "expression": {
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "1553:18:0",
                          "subExpression": {
                            "id": 126,
                            "name": "currentGameIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "1553:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 128,
                        "nodeType": "ExpressionStatement",
                        "src": "1553:18:0"
                      }
                    ]
                  },
                  "functionSelector": "3b17469e",
                  "id": 130,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createGame",
                  "nameLocation": "977:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 76,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 71,
                        "mutability": "mutable",
                        "name": "_challenger",
                        "nameLocation": "1005:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 130,
                        "src": "997:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 70,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "997:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 73,
                        "mutability": "mutable",
                        "name": "_maxScore",
                        "nameLocation": "1034:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 130,
                        "src": "1026:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 72,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1026:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 75,
                        "mutability": "mutable",
                        "name": "_maxTurn",
                        "nameLocation": "1061:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 130,
                        "src": "1053:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 74,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1053:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "987:88:0"
                  },
                  "returnParameters": {
                    "id": 77,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1091:0:0"
                  },
                  "scope": 720,
                  "src": "968:610:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 147,
                    "nodeType": "Block",
                    "src": "1630:65:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_Stage_$24",
                                "typeString": "enum DiceIt.Stage"
                              },
                              "id": 143,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 138,
                                    "name": "games",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 69,
                                    "src": "1648:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$54_storage_$",
                                      "typeString": "mapping(uint256 => struct DiceIt.Game storage ref)"
                                    }
                                  },
                                  "id": 140,
                                  "indexExpression": {
                                    "id": 139,
                                    "name": "gameId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 132,
                                    "src": "1654:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1648:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Game_$54_storage",
                                    "typeString": "struct DiceIt.Game storage ref"
                                  }
                                },
                                "id": 141,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "stage",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 36,
                                "src": "1648:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Stage_$24",
                                  "typeString": "enum DiceIt.Stage"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 142,
                                "name": "stage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 135,
                                "src": "1671:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Stage_$24",
                                  "typeString": "enum DiceIt.Stage"
                                }
                              },
                              "src": "1648:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 137,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1640:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1640:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 145,
                        "nodeType": "ExpressionStatement",
                        "src": "1640:37:0"
                      },
                      {
                        "id": 146,
                        "nodeType": "PlaceholderStatement",
                        "src": "1687:1:0"
                      }
                    ]
                  },
                  "id": 148,
                  "name": "isStage",
                  "nameLocation": "1593:7:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 136,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 132,
                        "mutability": "mutable",
                        "name": "gameId",
                        "nameLocation": "1609:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 148,
                        "src": "1601:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 131,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1601:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 135,
                        "mutability": "mutable",
                        "name": "stage",
                        "nameLocation": "1623:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 148,
                        "src": "1617:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Stage_$24",
                          "typeString": "enum DiceIt.Stage"
                        },
                        "typeName": {
                          "id": 134,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 133,
                            "name": "Stage",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24,
                            "src": "1617:5:0"
                          },
                          "referencedDeclaration": 24,
                          "src": "1617:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$24",
                            "typeString": "enum DiceIt.Stage"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1600:29:0"
                  },
                  "src": "1584:111:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 188,
                    "nodeType": "Block",
                    "src": "1810:184:0",
                    "statements": [
                      {
                        "assignments": [
                          160
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 160,
                            "mutability": "mutable",
                            "name": "game",
                            "nameLocation": "1833:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 188,
                            "src": "1820:17:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                              "typeString": "struct DiceIt.Game"
                            },
                            "typeName": {
                              "id": 159,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 158,
                                "name": "Game",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 54,
                                "src": "1820:4:0"
                              },
                              "referencedDeclaration": 54,
                              "src": "1820:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                                "typeString": "struct DiceIt.Game"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 164,
                        "initialValue": {
                          "baseExpression": {
                            "id": 161,
                            "name": "games",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "1840:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$54_storage_$",
                              "typeString": "mapping(uint256 => struct DiceIt.Game storage ref)"
                            }
                          },
                          "id": 163,
                          "indexExpression": {
                            "id": 162,
                            "name": "gameId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 150,
                            "src": "1846:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1840:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Game_$54_storage",
                            "typeString": "struct DiceIt.Game storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1820:33:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 166,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1871:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 167,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "1871:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 168,
                                  "name": "game",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 160,
                                  "src": "1884:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                                    "typeString": "struct DiceIt.Game storage pointer"
                                  }
                                },
                                "id": 169,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "bet",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 53,
                                "src": "1884:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1871:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 165,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1863:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1863:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 172,
                        "nodeType": "ExpressionStatement",
                        "src": "1863:30:0"
                      },
                      {
                        "expression": {
                          "id": 178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 173,
                              "name": "game",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 160,
                              "src": "1904:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                                "typeString": "struct DiceIt.Game storage pointer"
                              }
                            },
                            "id": 175,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "stage",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36,
                            "src": "1904:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Stage_$24",
                              "typeString": "enum DiceIt.Stage"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 176,
                              "name": "Stage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "1917:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Stage_$24_$",
                                "typeString": "type(enum DiceIt.Stage)"
                              }
                            },
                            "id": 177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Run",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22,
                            "src": "1917:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Stage_$24",
                              "typeString": "enum DiceIt.Stage"
                            }
                          },
                          "src": "1904:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$24",
                            "typeString": "enum DiceIt.Stage"
                          }
                        },
                        "id": 179,
                        "nodeType": "ExpressionStatement",
                        "src": "1904:22:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 181,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1957:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 182,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1957:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 183,
                              "name": "gameId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 150,
                              "src": "1969:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 184,
                                "name": "Stage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24,
                                "src": "1977:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Stage_$24_$",
                                  "typeString": "type(enum DiceIt.Stage)"
                                }
                              },
                              "id": 185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Run",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 22,
                              "src": "1977:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Stage_$24",
                                "typeString": "enum DiceIt.Stage"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_Stage_$24",
                                "typeString": "enum DiceIt.Stage"
                              }
                            ],
                            "id": 180,
                            "name": "GameStageChange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "1941:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_enum$_Stage_$24_$returns$__$",
                              "typeString": "function (address,uint256,enum DiceIt.Stage)"
                            }
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1941:46:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 187,
                        "nodeType": "EmitStatement",
                        "src": "1936:51:0"
                      }
                    ]
                  },
                  "functionSelector": "87fb99f6",
                  "id": 189,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 153,
                          "name": "gameId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 150,
                          "src": "1787:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 154,
                            "name": "Stage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "1795:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stage_$24_$",
                              "typeString": "type(enum DiceIt.Stage)"
                            }
                          },
                          "id": 155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Reg",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21,
                          "src": "1795:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$24",
                            "typeString": "enum DiceIt.Stage"
                          }
                        }
                      ],
                      "id": 156,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 152,
                        "name": "isStage",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 148,
                        "src": "1779:7:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1779:26:0"
                    }
                  ],
                  "name": "challengerBet",
                  "nameLocation": "1710:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 151,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 150,
                        "mutability": "mutable",
                        "name": "gameId",
                        "nameLocation": "1732:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 189,
                        "src": "1724:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 149,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1724:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1723:16:0"
                  },
                  "returnParameters": {
                    "id": 157,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1810:0:0"
                  },
                  "scope": 720,
                  "src": "1701:293:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 248,
                    "nodeType": "Block",
                    "src": "2054:512:0",
                    "statements": [
                      {
                        "assignments": [
                          197
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 197,
                            "mutability": "mutable",
                            "name": "game",
                            "nameLocation": "2076:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 248,
                            "src": "2064:16:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Game_$54_memory_ptr",
                              "typeString": "struct DiceIt.Game"
                            },
                            "typeName": {
                              "id": 196,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 195,
                                "name": "Game",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 54,
                                "src": "2064:4:0"
                              },
                              "referencedDeclaration": 54,
                              "src": "2064:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                                "typeString": "struct DiceIt.Game"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 201,
                        "initialValue": {
                          "baseExpression": {
                            "id": 198,
                            "name": "games",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "2083:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$54_storage_$",
                              "typeString": "mapping(uint256 => struct DiceIt.Game storage ref)"
                            }
                          },
                          "id": 200,
                          "indexExpression": {
                            "id": 199,
                            "name": "gameId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 191,
                            "src": "2089:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2083:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Game_$54_storage",
                            "typeString": "struct DiceIt.Game storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2064:32:0"
                      },
                      {
                        "assignments": [
                          203
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 203,
                            "mutability": "mutable",
                            "name": "playerIndex",
                            "nameLocation": "2114:11:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 248,
                            "src": "2106:19:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 202,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2106:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 204,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2106:19:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 205,
                            "name": "player",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 193,
                            "src": "2139:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 206,
                              "name": "game",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 197,
                              "src": "2149:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Game_$54_memory_ptr",
                                "typeString": "struct DiceIt.Game memory"
                              }
                            },
                            "id": 207,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31,
                            "src": "2149:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2139:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 223,
                              "name": "player",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 193,
                              "src": "2322:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 224,
                                "name": "game",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 197,
                                "src": "2332:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Game_$54_memory_ptr",
                                  "typeString": "struct DiceIt.Game memory"
                                }
                              },
                              "id": 225,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "challenger",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 33,
                              "src": "2332:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "2322:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "id": 244,
                            "nodeType": "Block",
                            "src": "2516:33:0",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 241,
                                    "name": "revert",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      -19,
                                      -19
                                    ],
                                    "referencedDeclaration": -19,
                                    "src": "2530:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 242,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2530:8:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 243,
                                "nodeType": "ExpressionStatement",
                                "src": "2530:8:0"
                              }
                            ]
                          },
                          "id": 245,
                          "nodeType": "IfStatement",
                          "src": "2318:231:0",
                          "trueBody": {
                            "id": 240,
                            "nodeType": "Block",
                            "src": "2349:161:0",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 237,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_enum$_CurrentPlayer_$27",
                                          "typeString": "enum DiceIt.CurrentPlayer"
                                        },
                                        "id": 232,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 228,
                                            "name": "CurrentPlayer",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 27,
                                            "src": "2388:13:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_enum$_CurrentPlayer_$27_$",
                                              "typeString": "type(enum DiceIt.CurrentPlayer)"
                                            }
                                          },
                                          "id": 229,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "Challenger",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 26,
                                          "src": "2388:24:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_CurrentPlayer_$27",
                                            "typeString": "enum DiceIt.CurrentPlayer"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 230,
                                            "name": "game",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 197,
                                            "src": "2416:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Game_$54_memory_ptr",
                                              "typeString": "struct DiceIt.Game memory"
                                            }
                                          },
                                          "id": 231,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "currentPlayer",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 43,
                                          "src": "2416:18:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_CurrentPlayer_$27",
                                            "typeString": "enum DiceIt.CurrentPlayer"
                                          }
                                        },
                                        "src": "2388:46:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "&&",
                                      "rightExpression": {
                                        "id": 236,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "!",
                                        "prefix": true,
                                        "src": "2458:27:0",
                                        "subExpression": {
                                          "expression": {
                                            "expression": {
                                              "id": 233,
                                              "name": "game",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 197,
                                              "src": "2459:4:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Game_$54_memory_ptr",
                                                "typeString": "struct DiceIt.Game memory"
                                              }
                                            },
                                            "id": 234,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "challengerPlayer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 49,
                                            "src": "2459:21:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Player_$61_memory_ptr",
                                              "typeString": "struct DiceIt.Player memory"
                                            }
                                          },
                                          "id": 235,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "stop",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 60,
                                          "src": "2459:26:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "2388:97:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "id": 227,
                                    "name": "require",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      -18,
                                      -18
                                    ],
                                    "referencedDeclaration": -18,
                                    "src": "2363:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                      "typeString": "function (bool) pure"
                                    }
                                  },
                                  "id": 238,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2363:136:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 239,
                                "nodeType": "ExpressionStatement",
                                "src": "2363:136:0"
                              }
                            ]
                          }
                        },
                        "id": 246,
                        "nodeType": "IfStatement",
                        "src": "2135:414:0",
                        "trueBody": {
                          "id": 222,
                          "nodeType": "Block",
                          "src": "2161:151:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 219,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_enum$_CurrentPlayer_$27",
                                        "typeString": "enum DiceIt.CurrentPlayer"
                                      },
                                      "id": 214,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 210,
                                          "name": "CurrentPlayer",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 27,
                                          "src": "2200:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_enum$_CurrentPlayer_$27_$",
                                            "typeString": "type(enum DiceIt.CurrentPlayer)"
                                          }
                                        },
                                        "id": 211,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "Owner",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 25,
                                        "src": "2200:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_CurrentPlayer_$27",
                                          "typeString": "enum DiceIt.CurrentPlayer"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 212,
                                          "name": "game",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 197,
                                          "src": "2223:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Game_$54_memory_ptr",
                                            "typeString": "struct DiceIt.Game memory"
                                          }
                                        },
                                        "id": 213,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "currentPlayer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 43,
                                        "src": "2223:18:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_CurrentPlayer_$27",
                                          "typeString": "enum DiceIt.CurrentPlayer"
                                        }
                                      },
                                      "src": "2200:41:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "id": 218,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "!",
                                      "prefix": true,
                                      "src": "2265:22:0",
                                      "subExpression": {
                                        "expression": {
                                          "expression": {
                                            "id": 215,
                                            "name": "game",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 197,
                                            "src": "2266:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Game_$54_memory_ptr",
                                              "typeString": "struct DiceIt.Game memory"
                                            }
                                          },
                                          "id": 216,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "ownerPlayer",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 46,
                                          "src": "2266:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Player_$61_memory_ptr",
                                            "typeString": "struct DiceIt.Player memory"
                                          }
                                        },
                                        "id": 217,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "stop",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 60,
                                        "src": "2266:21:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "2200:87:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 209,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "2175:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                    "typeString": "function (bool) pure"
                                  }
                                },
                                "id": 220,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2175:126:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 221,
                              "nodeType": "ExpressionStatement",
                              "src": "2175:126:0"
                            }
                          ]
                        }
                      },
                      {
                        "id": 247,
                        "nodeType": "PlaceholderStatement",
                        "src": "2558:1:0"
                      }
                    ]
                  },
                  "id": 249,
                  "name": "isPlayerTurn",
                  "nameLocation": "2009:12:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 194,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 191,
                        "mutability": "mutable",
                        "name": "gameId",
                        "nameLocation": "2030:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "2022:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 190,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2022:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 193,
                        "mutability": "mutable",
                        "name": "player",
                        "nameLocation": "2046:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "2038:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 192,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2038:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2021:32:0"
                  },
                  "src": "2000:566:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 477,
                    "nodeType": "Block",
                    "src": "2728:1450:0",
                    "statements": [
                      {
                        "assignments": [
                          267
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 267,
                            "mutability": "mutable",
                            "name": "randomInt",
                            "nameLocation": "2746:9:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 477,
                            "src": "2738:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 266,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2738:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 270,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 268,
                            "name": "random",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 506,
                            "src": "2758:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2758:8:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2738:28:0"
                      },
                      {
                        "assignments": [
                          273
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 273,
                            "mutability": "mutable",
                            "name": "game",
                            "nameLocation": "2789:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 477,
                            "src": "2776:17:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                              "typeString": "struct DiceIt.Game"
                            },
                            "typeName": {
                              "id": 272,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 271,
                                "name": "Game",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 54,
                                "src": "2776:4:0"
                              },
                              "referencedDeclaration": 54,
                              "src": "2776:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                                "typeString": "struct DiceIt.Game"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 277,
                        "initialValue": {
                          "baseExpression": {
                            "id": 274,
                            "name": "games",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "2796:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$54_storage_$",
                              "typeString": "mapping(uint256 => struct DiceIt.Game storage ref)"
                            }
                          },
                          "id": 276,
                          "indexExpression": {
                            "id": 275,
                            "name": "gameId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 251,
                            "src": "2802:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2796:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Game_$54_storage",
                            "typeString": "struct DiceIt.Game storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2776:33:0"
                      },
                      {
                        "assignments": [
                          280
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 280,
                            "mutability": "mutable",
                            "name": "player",
                            "nameLocation": "2834:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 477,
                            "src": "2819:21:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Player_$61_storage_ptr",
                              "typeString": "struct DiceIt.Player"
                            },
                            "typeName": {
                              "id": 279,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 278,
                                "name": "Player",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 61,
                                "src": "2819:6:0"
                              },
                              "referencedDeclaration": 61,
                              "src": "2819:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Player_$61_storage_ptr",
                                "typeString": "struct DiceIt.Player"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 281,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2819:21:0"
                      },
                      {
                        "assignments": [
                          284
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 284,
                            "mutability": "mutable",
                            "name": "opponent",
                            "nameLocation": "2865:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 477,
                            "src": "2850:23:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Player_$61_storage_ptr",
                              "typeString": "struct DiceIt.Player"
                            },
                            "typeName": {
                              "id": 283,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 282,
                                "name": "Player",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 61,
                                "src": "2850:6:0"
                              },
                              "referencedDeclaration": 61,
                              "src": "2850:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Player_$61_storage_ptr",
                                "typeString": "struct DiceIt.Player"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 285,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2850:23:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 286,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2887:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2887:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 288,
                              "name": "game",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 273,
                              "src": "2901:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                                "typeString": "struct DiceIt.Game storage pointer"
                              }
                            },
                            "id": 289,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31,
                            "src": "2901:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2887:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 306,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 302,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3019:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 303,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3019:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 304,
                                "name": "game",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 273,
                                "src": "3033:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                                  "typeString": "struct DiceIt.Game storage pointer"
                                }
                              },
                              "id": 305,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "challenger",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 33,
                              "src": "3033:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "3019:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 318,
                                "name": "revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -19,
                                  -19
                                ],
                                "referencedDeclaration": -19,
                                "src": "3152:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3152:8:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 320,
                            "nodeType": "ExpressionStatement",
                            "src": "3152:8:0"
                          },
                          "id": 321,
                          "nodeType": "IfStatement",
                          "src": "3015:145:0",
                          "trueBody": {
                            "id": 317,
                            "nodeType": "Block",
                            "src": "3050:96:0",
                            "statements": [
                              {
                                "expression": {
                                  "id": 310,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 307,
                                    "name": "player",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 280,
                                    "src": "3064:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Player_$61_storage_ptr",
                                      "typeString": "struct DiceIt.Player storage pointer"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "expression": {
                                      "id": 308,
                                      "name": "game",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 273,
                                      "src": "3073:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                                        "typeString": "struct DiceIt.Game storage pointer"
                                      }
                                    },
                                    "id": 309,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "challengerPlayer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 49,
                                    "src": "3073:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Player_$61_storage",
                                      "typeString": "struct DiceIt.Player storage ref"
                                    }
                                  },
                                  "src": "3064:30:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Player_$61_storage_ptr",
                                    "typeString": "struct DiceIt.Player storage pointer"
                                  }
                                },
                                "id": 311,
                                "nodeType": "ExpressionStatement",
                                "src": "3064:30:0"
                              },
                              {
                                "expression": {
                                  "id": 315,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 312,
                                    "name": "opponent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 284,
                                    "src": "3108:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Player_$61_storage_ptr",
                                      "typeString": "struct DiceIt.Player storage pointer"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "expression": {
                                      "id": 313,
                                      "name": "game",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 273,
                                      "src": "3119:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                                        "typeString": "struct DiceIt.Game storage pointer"
                                      }
                                    },
                                    "id": 314,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "ownerPlayer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 46,
                                    "src": "3119:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Player_$61_storage",
                                      "typeString": "struct DiceIt.Player storage ref"
                                    }
                                  },
                                  "src": "3108:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Player_$61_storage_ptr",
                                    "typeString": "struct DiceIt.Player storage pointer"
                                  }
                                },
                                "id": 316,
                                "nodeType": "ExpressionStatement",
                                "src": "3108:27:0"
                              }
                            ]
                          }
                        },
                        "id": 322,
                        "nodeType": "IfStatement",
                        "src": "2883:277:0",
                        "trueBody": {
                          "id": 301,
                          "nodeType": "Block",
                          "src": "2913:96:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 294,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 291,
                                  "name": "player",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 280,
                                  "src": "2927:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Player_$61_storage_ptr",
                                    "typeString": "struct DiceIt.Player storage pointer"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 292,
                                    "name": "game",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 273,
                                    "src": "2936:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                                      "typeString": "struct DiceIt.Game storage pointer"
                                    }
                                  },
                                  "id": 293,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "ownerPlayer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46,
                                  "src": "2936:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Player_$61_storage",
                                    "typeString": "struct DiceIt.Player storage ref"
                                  }
                                },
                                "src": "2927:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Player_$61_storage_ptr",
                                  "typeString": "struct DiceIt.Player storage pointer"
                                }
                              },
                              "id": 295,
                              "nodeType": "ExpressionStatement",
                              "src": "2927:25:0"
                            },
                            {
                              "expression": {
                                "id": 299,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 296,
                                  "name": "opponent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 284,
                                  "src": "2966:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Player_$61_storage_ptr",
                                    "typeString": "struct DiceIt.Player storage pointer"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 297,
                                    "name": "game",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 273,
                                    "src": "2977:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                                      "typeString": "struct DiceIt.Game storage pointer"
                                    }
                                  },
                                  "id": 298,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "challengerPlayer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 49,
                                  "src": "2977:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Player_$61_storage",
                                    "typeString": "struct DiceIt.Player storage ref"
                                  }
                                },
                                "src": "2966:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Player_$61_storage_ptr",
                                  "typeString": "struct DiceIt.Player storage pointer"
                                }
                              },
                              "id": 300,
                              "nodeType": "ExpressionStatement",
                              "src": "2966:32:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "id": 323,
                          "name": "draw",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 253,
                          "src": "3175:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 330,
                        "nodeType": "IfStatement",
                        "src": "3171:35:0",
                        "trueBody": {
                          "expression": {
                            "id": 328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "id": 324,
                                "name": "player",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 280,
                                "src": "3181:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Player_$61_storage_ptr",
                                  "typeString": "struct DiceIt.Player storage pointer"
                                }
                              },
                              "id": 326,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "score",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 58,
                              "src": "3181:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "+=",
                            "rightHandSide": {
                              "id": 327,
                              "name": "randomInt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 267,
                              "src": "3197:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3181:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 329,
                          "nodeType": "ExpressionStatement",
                          "src": "3181:25:0"
                        }
                      },
                      {
                        "expression": {
                          "id": 334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "3216:13:0",
                          "subExpression": {
                            "expression": {
                              "id": 331,
                              "name": "player",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 280,
                              "src": "3216:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Player_$61_storage_ptr",
                                "typeString": "struct DiceIt.Player storage pointer"
                              }
                            },
                            "id": 333,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "turn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 56,
                            "src": "3216:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 335,
                        "nodeType": "ExpressionStatement",
                        "src": "3216:13:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 343,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "3257:5:0",
                              "subExpression": {
                                "id": 336,
                                "name": "draw",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 253,
                                "src": "3258:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 342,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 338,
                                  "name": "player",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 280,
                                  "src": "3266:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Player_$61_storage_ptr",
                                    "typeString": "struct DiceIt.Player storage pointer"
                                  }
                                },
                                "id": 339,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "score",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 58,
                                "src": "3266:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "id": 340,
                                  "name": "game",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 273,
                                  "src": "3281:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                                    "typeString": "struct DiceIt.Game storage pointer"
                                  }
                                },
                                "id": 341,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "maxScore",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 38,
                                "src": "3281:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3266:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "3257:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 348,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 344,
                                "name": "player",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 280,
                                "src": "3298:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Player_$61_storage_ptr",
                                  "typeString": "struct DiceIt.Player storage pointer"
                                }
                              },
                              "id": 345,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "turn",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 56,
                              "src": "3298:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "expression": {
                                "id": 346,
                                "name": "game",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 273,
                                "src": "3313:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                                  "typeString": "struct DiceIt.Game storage pointer"
                                }
                              },
                              "id": 347,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "maxTurn",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40,
                              "src": "3313:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3298:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3257:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 356,
                        "nodeType": "IfStatement",
                        "src": "3240:114:0",
                        "trueBody": {
                          "expression": {
                            "id": 354,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "id": 350,
                                "name": "player",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 280,
                                "src": "3336:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Player_$61_storage_ptr",
                                  "typeString": "struct DiceIt.Player storage pointer"
                                }
                              },
                              "id": 352,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "stop",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 60,
                              "src": "3336:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "74727565",
                              "id": 353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3350:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "src": "3336:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 355,
                          "nodeType": "ExpressionStatement",
                          "src": "3336:18:0"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 357,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3369:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 358,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3369:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 359,
                                "name": "game",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 273,
                                "src": "3383:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                                  "typeString": "struct DiceIt.Game storage pointer"
                                }
                              },
                              "id": 360,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 31,
                              "src": "3383:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "3369:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "3397:14:0",
                            "subExpression": {
                              "expression": {
                                "id": 362,
                                "name": "opponent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 284,
                                "src": "3398:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Player_$61_storage_ptr",
                                  "typeString": "struct DiceIt.Player storage pointer"
                                }
                              },
                              "id": 363,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "stop",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 60,
                              "src": "3398:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3369:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 382,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 374,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3493:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 375,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3493:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 376,
                                  "name": "game",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 273,
                                  "src": "3507:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                                    "typeString": "struct DiceIt.Game storage pointer"
                                  }
                                },
                                "id": 377,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "challenger",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 33,
                                "src": "3507:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3493:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "id": 381,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "3526:14:0",
                              "subExpression": {
                                "expression": {
                                  "id": 379,
                                  "name": "opponent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 284,
                                  "src": "3527:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Player_$61_storage_ptr",
                                    "typeString": "struct DiceIt.Player storage pointer"
                                  }
                                },
                                "id": 380,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "stop",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 60,
                                "src": "3527:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "3493:47:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 391,
                          "nodeType": "IfStatement",
                          "src": "3489:118:0",
                          "trueBody": {
                            "id": 390,
                            "nodeType": "Block",
                            "src": "3542:65:0",
                            "statements": [
                              {
                                "expression": {
                                  "id": 388,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "expression": {
                                      "id": 383,
                                      "name": "game",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 273,
                                      "src": "3556:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                                        "typeString": "struct DiceIt.Game storage pointer"
                                      }
                                    },
                                    "id": 385,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "memberName": "currentPlayer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 43,
                                    "src": "3556:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_CurrentPlayer_$27",
                                      "typeString": "enum DiceIt.CurrentPlayer"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "expression": {
                                      "id": 386,
                                      "name": "CurrentPlayer",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 27,
                                      "src": "3577:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_CurrentPlayer_$27_$",
                                        "typeString": "type(enum DiceIt.CurrentPlayer)"
                                      }
                                    },
                                    "id": 387,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "Owner",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 25,
                                    "src": "3577:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_CurrentPlayer_$27",
                                      "typeString": "enum DiceIt.CurrentPlayer"
                                    }
                                  },
                                  "src": "3556:40:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_CurrentPlayer_$27",
                                    "typeString": "enum DiceIt.CurrentPlayer"
                                  }
                                },
                                "id": 389,
                                "nodeType": "ExpressionStatement",
                                "src": "3556:40:0"
                              }
                            ]
                          }
                        },
                        "id": 392,
                        "nodeType": "IfStatement",
                        "src": "3365:242:0",
                        "trueBody": {
                          "id": 373,
                          "nodeType": "Block",
                          "src": "3413:70:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 371,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 366,
                                    "name": "game",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 273,
                                    "src": "3427:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                                      "typeString": "struct DiceIt.Game storage pointer"
                                    }
                                  },
                                  "id": 368,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "currentPlayer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 43,
                                  "src": "3427:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_CurrentPlayer_$27",
                                    "typeString": "enum DiceIt.CurrentPlayer"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 369,
                                    "name": "CurrentPlayer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 27,
                                    "src": "3448:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_CurrentPlayer_$27_$",
                                      "typeString": "type(enum DiceIt.CurrentPlayer)"
                                    }
                                  },
                                  "id": 370,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "Challenger",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 26,
                                  "src": "3448:24:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_CurrentPlayer_$27",
                                    "typeString": "enum DiceIt.CurrentPlayer"
                                  }
                                },
                                "src": "3427:45:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_CurrentPlayer_$27",
                                  "typeString": "enum DiceIt.CurrentPlayer"
                                }
                              },
                              "id": 372,
                              "nodeType": "ExpressionStatement",
                              "src": "3427:45:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 393,
                                "name": "game",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 273,
                                "src": "3621:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                                  "typeString": "struct DiceIt.Game storage pointer"
                                }
                              },
                              "id": 394,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerPlayer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46,
                              "src": "3621:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Player_$61_storage",
                                "typeString": "struct DiceIt.Player storage ref"
                              }
                            },
                            "id": 395,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stop",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 60,
                            "src": "3621:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 396,
                                "name": "game",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 273,
                                "src": "3646:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                                  "typeString": "struct DiceIt.Game storage pointer"
                                }
                              },
                              "id": 397,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "challengerPlayer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 49,
                              "src": "3646:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Player_$61_storage",
                                "typeString": "struct DiceIt.Player storage ref"
                              }
                            },
                            "id": 398,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stop",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 60,
                            "src": "3646:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3621:51:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 476,
                        "nodeType": "IfStatement",
                        "src": "3617:555:0",
                        "trueBody": {
                          "id": 475,
                          "nodeType": "Block",
                          "src": "3674:498:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 405,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 400,
                                    "name": "game",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 273,
                                    "src": "3688:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                                      "typeString": "struct DiceIt.Game storage pointer"
                                    }
                                  },
                                  "id": 402,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "stage",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 36,
                                  "src": "3688:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Stage_$24",
                                    "typeString": "enum DiceIt.Stage"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 403,
                                    "name": "Stage",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24,
                                    "src": "3701:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Stage_$24_$",
                                      "typeString": "type(enum DiceIt.Stage)"
                                    }
                                  },
                                  "id": 404,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "Done",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 23,
                                  "src": "3701:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Stage_$24",
                                    "typeString": "enum DiceIt.Stage"
                                  }
                                },
                                "src": "3688:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Stage_$24",
                                  "typeString": "enum DiceIt.Stage"
                                }
                              },
                              "id": 406,
                              "nodeType": "ExpressionStatement",
                              "src": "3688:23:0"
                            },
                            {
                              "expression": {
                                "id": 413,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 407,
                                    "name": "game",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 273,
                                    "src": "3725:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                                      "typeString": "struct DiceIt.Game storage pointer"
                                    }
                                  },
                                  "id": 409,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "winner",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 51,
                                  "src": "3725:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 411,
                                      "name": "gameId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 251,
                                      "src": "3749:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 410,
                                    "name": "setWinner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 602,
                                    "src": "3739:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                      "typeString": "function (uint256) view returns (address)"
                                    }
                                  },
                                  "id": 412,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3739:17:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "3725:31:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 414,
                              "nodeType": "ExpressionStatement",
                              "src": "3725:31:0"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 421,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 415,
                                    "name": "game",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 273,
                                    "src": "3775:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                                      "typeString": "struct DiceIt.Game storage pointer"
                                    }
                                  },
                                  "id": 416,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "winner",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 51,
                                  "src": "3775:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 419,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3798:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 418,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3790:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 417,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3790:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 420,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3790:10:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "3775:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 455,
                                "nodeType": "Block",
                                "src": "3940:76:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 452,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 449,
                                              "name": "game",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 273,
                                              "src": "3988:4:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                                                "typeString": "struct DiceIt.Game storage pointer"
                                              }
                                            },
                                            "id": 450,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "bet",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 53,
                                            "src": "3988:8:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "hexValue": "32",
                                            "id": 451,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3999:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_2_by_1",
                                              "typeString": "int_const 2"
                                            },
                                            "value": "2"
                                          },
                                          "src": "3988:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "expression": {
                                                "id": 445,
                                                "name": "game",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 273,
                                                "src": "3966:4:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                                                  "typeString": "struct DiceIt.Game storage pointer"
                                                }
                                              },
                                              "id": 446,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "winner",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 51,
                                              "src": "3966:11:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 444,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "3958:8:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_payable_$",
                                              "typeString": "type(address payable)"
                                            },
                                            "typeName": {
                                              "id": 443,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "3958:8:0",
                                              "stateMutability": "payable",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 447,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3958:20:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                          }
                                        },
                                        "id": 448,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "transfer",
                                        "nodeType": "MemberAccess",
                                        "src": "3958:29:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                          "typeString": "function (uint256)"
                                        }
                                      },
                                      "id": 453,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3958:43:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 454,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3958:43:0"
                                  }
                                ]
                              },
                              "id": 456,
                              "nodeType": "IfStatement",
                              "src": "3771:245:0",
                              "trueBody": {
                                "id": 442,
                                "nodeType": "Block",
                                "src": "3802:132:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 428,
                                            "name": "game",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 273,
                                            "src": "3849:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                                              "typeString": "struct DiceIt.Game storage pointer"
                                            }
                                          },
                                          "id": 429,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "bet",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 53,
                                          "src": "3849:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "expression": {
                                                "id": 424,
                                                "name": "game",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 273,
                                                "src": "3828:4:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                                                  "typeString": "struct DiceIt.Game storage pointer"
                                                }
                                              },
                                              "id": 425,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "owner",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 31,
                                              "src": "3828:10:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 423,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "3820:8:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_payable_$",
                                              "typeString": "type(address payable)"
                                            },
                                            "typeName": {
                                              "id": 422,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "3820:8:0",
                                              "stateMutability": "payable",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 426,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3820:19:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                          }
                                        },
                                        "id": 427,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "transfer",
                                        "nodeType": "MemberAccess",
                                        "src": "3820:28:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                          "typeString": "function (uint256)"
                                        }
                                      },
                                      "id": 430,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3820:38:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 431,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3820:38:0"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 438,
                                            "name": "game",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 273,
                                            "src": "3910:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                                              "typeString": "struct DiceIt.Game storage pointer"
                                            }
                                          },
                                          "id": 439,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "bet",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 53,
                                          "src": "3910:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "expression": {
                                                "id": 434,
                                                "name": "game",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 273,
                                                "src": "3884:4:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                                                  "typeString": "struct DiceIt.Game storage pointer"
                                                }
                                              },
                                              "id": 435,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "challenger",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 33,
                                              "src": "3884:15:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 433,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "3876:8:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_payable_$",
                                              "typeString": "type(address payable)"
                                            },
                                            "typeName": {
                                              "id": 432,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "3876:8:0",
                                              "stateMutability": "payable",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 436,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3876:24:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                          }
                                        },
                                        "id": 437,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "transfer",
                                        "nodeType": "MemberAccess",
                                        "src": "3876:33:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                          "typeString": "function (uint256)"
                                        }
                                      },
                                      "id": 440,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3876:43:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 441,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3876:43:0"
                                  }
                                ]
                              }
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 458,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "4049:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 459,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "4049:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 460,
                                    "name": "gameId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 251,
                                    "src": "4061:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 461,
                                      "name": "player",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 280,
                                      "src": "4069:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Player_$61_storage_ptr",
                                        "typeString": "struct DiceIt.Player storage pointer"
                                      }
                                    },
                                    "id": 462,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "turn",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 56,
                                    "src": "4069:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 463,
                                      "name": "player",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 280,
                                      "src": "4082:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Player_$61_storage_ptr",
                                        "typeString": "struct DiceIt.Player storage pointer"
                                      }
                                    },
                                    "id": 464,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "score",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 58,
                                    "src": "4082:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 457,
                                  "name": "GameTurnPlayed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 20,
                                  "src": "4034:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256,uint256,uint256)"
                                  }
                                },
                                "id": 465,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4034:61:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 466,
                              "nodeType": "EmitStatement",
                              "src": "4029:66:0"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 468,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "4130:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 469,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "4130:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 470,
                                    "name": "gameId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 251,
                                    "src": "4142:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 471,
                                      "name": "Stage",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24,
                                      "src": "4150:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_Stage_$24_$",
                                        "typeString": "type(enum DiceIt.Stage)"
                                      }
                                    },
                                    "id": 472,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "Done",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 23,
                                    "src": "4150:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Stage_$24",
                                      "typeString": "enum DiceIt.Stage"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_enum$_Stage_$24",
                                      "typeString": "enum DiceIt.Stage"
                                    }
                                  ],
                                  "id": 467,
                                  "name": "GameStageChange",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10,
                                  "src": "4114:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_enum$_Stage_$24_$returns$__$",
                                    "typeString": "function (address,uint256,enum DiceIt.Stage)"
                                  }
                                },
                                "id": 473,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4114:47:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 474,
                              "nodeType": "EmitStatement",
                              "src": "4109:52:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "2d76375d",
                  "id": 478,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 256,
                          "name": "gameId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 251,
                          "src": "2664:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 257,
                            "name": "Stage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "2672:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stage_$24_$",
                              "typeString": "type(enum DiceIt.Stage)"
                            }
                          },
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Run",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22,
                          "src": "2672:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$24",
                            "typeString": "enum DiceIt.Stage"
                          }
                        }
                      ],
                      "id": 259,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 255,
                        "name": "isStage",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 148,
                        "src": "2656:7:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2656:26:0"
                    },
                    {
                      "arguments": [
                        {
                          "id": 261,
                          "name": "gameId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 251,
                          "src": "2704:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 262,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2712:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2712:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 264,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 260,
                        "name": "isPlayerTurn",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 249,
                        "src": "2691:12:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2691:32:0"
                    }
                  ],
                  "name": "playTurn",
                  "nameLocation": "2581:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 254,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 251,
                        "mutability": "mutable",
                        "name": "gameId",
                        "nameLocation": "2598:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 478,
                        "src": "2590:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 250,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2590:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 253,
                        "mutability": "mutable",
                        "name": "draw",
                        "nameLocation": "2611:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 478,
                        "src": "2606:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 252,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2606:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2589:27:0"
                  },
                  "returnParameters": {
                    "id": 265,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2728:0:0"
                  },
                  "scope": 720,
                  "src": "2572:1606:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 505,
                    "nodeType": "Block",
                    "src": "4331:291:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 500,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "expression": {
                                                "id": 488,
                                                "name": "block",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -4,
                                                "src": "4459:5:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_block",
                                                  "typeString": "block"
                                                }
                                              },
                                              "id": 489,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "difficulty",
                                              "nodeType": "MemberAccess",
                                              "src": "4459:16:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            {
                                              "expression": {
                                                "id": 490,
                                                "name": "block",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -4,
                                                "src": "4501:5:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_block",
                                                  "typeString": "block"
                                                }
                                              },
                                              "id": 491,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "timestamp",
                                              "nodeType": "MemberAccess",
                                              "src": "4501:15:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "hexValue": "36",
                                                  "id": 494,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "4550:1:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_6_by_1",
                                                    "typeString": "int_const 6"
                                                  },
                                                  "value": "6"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_rational_6_by_1",
                                                    "typeString": "int_const 6"
                                                  }
                                                ],
                                                "id": 493,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "4542:7:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_uint256_$",
                                                  "typeString": "type(uint256)"
                                                },
                                                "typeName": {
                                                  "id": 492,
                                                  "name": "uint256",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "4542:7:0",
                                                  "typeDescriptions": {}
                                                }
                                              },
                                              "id": 495,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "4542:10:0",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "id": 486,
                                              "name": "abi",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -1,
                                              "src": "4417:3:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_abi",
                                                "typeString": "abi"
                                              }
                                            },
                                            "id": 487,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "encodePacked",
                                            "nodeType": "MemberAccess",
                                            "src": "4417:16:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                              "typeString": "function () pure returns (bytes memory)"
                                            }
                                          },
                                          "id": 496,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "4417:157:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        ],
                                        "id": 485,
                                        "name": "keccak256",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -8,
                                        "src": "4386:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                          "typeString": "function (bytes memory) pure returns (bytes32)"
                                        }
                                      },
                                      "id": 497,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4386:206:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "id": 484,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4361:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 483,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4361:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 498,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4361:245:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "%",
                                "rightExpression": {
                                  "hexValue": "36",
                                  "id": 499,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4609:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_6_by_1",
                                    "typeString": "int_const 6"
                                  },
                                  "value": "6"
                                },
                                "src": "4361:249:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 501,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4360:251:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 502,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4614:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "4360:255:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 482,
                        "id": 504,
                        "nodeType": "Return",
                        "src": "4341:274:0"
                      }
                    ]
                  },
                  "id": 506,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "random",
                  "nameLocation": "4291:6:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 479,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4297:2:0"
                  },
                  "returnParameters": {
                    "id": 482,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 481,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 506,
                        "src": "4322:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 480,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4322:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4321:9:0"
                  },
                  "scope": 720,
                  "src": "4282:340:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 601,
                    "nodeType": "Block",
                    "src": "4764:729:0",
                    "statements": [
                      {
                        "assignments": [
                          520
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 520,
                            "mutability": "mutable",
                            "name": "game",
                            "nameLocation": "4786:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 601,
                            "src": "4774:16:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Game_$54_memory_ptr",
                              "typeString": "struct DiceIt.Game"
                            },
                            "typeName": {
                              "id": 519,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 518,
                                "name": "Game",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 54,
                                "src": "4774:4:0"
                              },
                              "referencedDeclaration": 54,
                              "src": "4774:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                                "typeString": "struct DiceIt.Game"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 524,
                        "initialValue": {
                          "baseExpression": {
                            "id": 521,
                            "name": "games",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "4793:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$54_storage_$",
                              "typeString": "mapping(uint256 => struct DiceIt.Game storage ref)"
                            }
                          },
                          "id": 523,
                          "indexExpression": {
                            "id": 522,
                            "name": "gameId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 508,
                            "src": "4799:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4793:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Game_$54_storage",
                            "typeString": "struct DiceIt.Game storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4774:32:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 537,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 530,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 525,
                                        "name": "game",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 520,
                                        "src": "4835:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Game_$54_memory_ptr",
                                          "typeString": "struct DiceIt.Game memory"
                                        }
                                      },
                                      "id": 526,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "ownerPlayer",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 46,
                                      "src": "4835:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Player_$61_memory_ptr",
                                        "typeString": "struct DiceIt.Player memory"
                                      }
                                    },
                                    "id": 527,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "score",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 58,
                                    "src": "4835:22:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<=",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 528,
                                      "name": "game",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 520,
                                      "src": "4861:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Game_$54_memory_ptr",
                                        "typeString": "struct DiceIt.Game memory"
                                      }
                                    },
                                    "id": 529,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "maxScore",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 38,
                                    "src": "4861:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4835:39:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 536,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 531,
                                        "name": "game",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 520,
                                        "src": "4894:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Game_$54_memory_ptr",
                                          "typeString": "struct DiceIt.Game memory"
                                        }
                                      },
                                      "id": 532,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "challengerPlayer",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 49,
                                      "src": "4894:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Player_$61_memory_ptr",
                                        "typeString": "struct DiceIt.Player memory"
                                      }
                                    },
                                    "id": 533,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "score",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 58,
                                    "src": "4894:27:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 534,
                                      "name": "game",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 520,
                                      "src": "4924:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Game_$54_memory_ptr",
                                        "typeString": "struct DiceIt.Game memory"
                                      }
                                    },
                                    "id": 535,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "maxScore",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 38,
                                    "src": "4924:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4894:43:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "4835:102:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 538,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4834:104:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 552,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 544,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 539,
                                        "name": "game",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 520,
                                        "src": "4955:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Game_$54_memory_ptr",
                                          "typeString": "struct DiceIt.Game memory"
                                        }
                                      },
                                      "id": 540,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "ownerPlayer",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 46,
                                      "src": "4955:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Player_$61_memory_ptr",
                                        "typeString": "struct DiceIt.Player memory"
                                      }
                                    },
                                    "id": 541,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "score",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 58,
                                    "src": "4955:22:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<=",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 542,
                                      "name": "game",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 520,
                                      "src": "4981:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Game_$54_memory_ptr",
                                        "typeString": "struct DiceIt.Game memory"
                                      }
                                    },
                                    "id": 543,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "maxScore",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 38,
                                    "src": "4981:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4955:39:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 551,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 545,
                                        "name": "game",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 520,
                                        "src": "5014:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Game_$54_memory_ptr",
                                          "typeString": "struct DiceIt.Game memory"
                                        }
                                      },
                                      "id": 546,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "ownerPlayer",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 46,
                                      "src": "5014:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Player_$61_memory_ptr",
                                        "typeString": "struct DiceIt.Player memory"
                                      }
                                    },
                                    "id": 547,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "score",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 58,
                                    "src": "5014:22:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 548,
                                        "name": "game",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 520,
                                        "src": "5039:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Game_$54_memory_ptr",
                                          "typeString": "struct DiceIt.Game memory"
                                        }
                                      },
                                      "id": 549,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "challengerPlayer",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 49,
                                      "src": "5039:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Player_$61_memory_ptr",
                                        "typeString": "struct DiceIt.Player memory"
                                      }
                                    },
                                    "id": 550,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "score",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 58,
                                    "src": "5039:27:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5014:52:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "4955:111:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 553,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4954:113:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4834:233:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 588,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 571,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 564,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 559,
                                          "name": "game",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 520,
                                          "src": "5144:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Game_$54_memory_ptr",
                                            "typeString": "struct DiceIt.Game memory"
                                          }
                                        },
                                        "id": 560,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "challengerPlayer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 49,
                                        "src": "5144:21:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Player_$61_memory_ptr",
                                          "typeString": "struct DiceIt.Player memory"
                                        }
                                      },
                                      "id": 561,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "score",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 58,
                                      "src": "5144:27:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<=",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 562,
                                        "name": "game",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 520,
                                        "src": "5175:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Game_$54_memory_ptr",
                                          "typeString": "struct DiceIt.Game memory"
                                        }
                                      },
                                      "id": 563,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "maxScore",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 38,
                                      "src": "5175:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5144:44:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 570,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 565,
                                          "name": "game",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 520,
                                          "src": "5208:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Game_$54_memory_ptr",
                                            "typeString": "struct DiceIt.Game memory"
                                          }
                                        },
                                        "id": 566,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "ownerPlayer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 46,
                                        "src": "5208:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Player_$61_memory_ptr",
                                          "typeString": "struct DiceIt.Player memory"
                                        }
                                      },
                                      "id": 567,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "score",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 58,
                                      "src": "5208:22:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 568,
                                        "name": "game",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 520,
                                        "src": "5233:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Game_$54_memory_ptr",
                                          "typeString": "struct DiceIt.Game memory"
                                        }
                                      },
                                      "id": 569,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "maxScore",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 38,
                                      "src": "5233:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5208:38:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "5144:102:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 572,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5143:104:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 586,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 578,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 573,
                                          "name": "game",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 520,
                                          "src": "5264:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Game_$54_memory_ptr",
                                            "typeString": "struct DiceIt.Game memory"
                                          }
                                        },
                                        "id": 574,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "challengerPlayer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 49,
                                        "src": "5264:21:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Player_$61_memory_ptr",
                                          "typeString": "struct DiceIt.Player memory"
                                        }
                                      },
                                      "id": 575,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "score",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 58,
                                      "src": "5264:27:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<=",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 576,
                                        "name": "game",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 520,
                                        "src": "5295:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Game_$54_memory_ptr",
                                          "typeString": "struct DiceIt.Game memory"
                                        }
                                      },
                                      "id": 577,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "maxScore",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 38,
                                      "src": "5295:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5264:44:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 585,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 579,
                                          "name": "game",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 520,
                                          "src": "5328:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Game_$54_memory_ptr",
                                            "typeString": "struct DiceIt.Game memory"
                                          }
                                        },
                                        "id": 580,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "ownerPlayer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 46,
                                        "src": "5328:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Player_$61_memory_ptr",
                                          "typeString": "struct DiceIt.Player memory"
                                        }
                                      },
                                      "id": 581,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "score",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 58,
                                      "src": "5328:22:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 582,
                                          "name": "game",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 520,
                                          "src": "5353:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Game_$54_memory_ptr",
                                            "typeString": "struct DiceIt.Game memory"
                                          }
                                        },
                                        "id": 583,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "challengerPlayer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 49,
                                        "src": "5353:21:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Player_$61_memory_ptr",
                                          "typeString": "struct DiceIt.Player memory"
                                        }
                                      },
                                      "id": 584,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "score",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 58,
                                      "src": "5353:27:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5328:52:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "5264:116:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 587,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5263:118:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "5143:238:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "id": 598,
                            "nodeType": "Block",
                            "src": "5445:42:0",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 595,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5474:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 594,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5466:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 593,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5466:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 596,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5466:10:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "functionReturnParameters": 517,
                                "id": 597,
                                "nodeType": "Return",
                                "src": "5459:17:0"
                              }
                            ]
                          },
                          "id": 599,
                          "nodeType": "IfStatement",
                          "src": "5126:361:0",
                          "trueBody": {
                            "id": 592,
                            "nodeType": "Block",
                            "src": "5392:47:0",
                            "statements": [
                              {
                                "expression": {
                                  "expression": {
                                    "id": 589,
                                    "name": "game",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 520,
                                    "src": "5413:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Game_$54_memory_ptr",
                                      "typeString": "struct DiceIt.Game memory"
                                    }
                                  },
                                  "id": 590,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "challenger",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 33,
                                  "src": "5413:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "functionReturnParameters": 517,
                                "id": 591,
                                "nodeType": "Return",
                                "src": "5406:22:0"
                              }
                            ]
                          }
                        },
                        "id": 600,
                        "nodeType": "IfStatement",
                        "src": "4817:670:0",
                        "trueBody": {
                          "id": 558,
                          "nodeType": "Block",
                          "src": "5078:42:0",
                          "statements": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 555,
                                  "name": "game",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 520,
                                  "src": "5099:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Game_$54_memory_ptr",
                                    "typeString": "struct DiceIt.Game memory"
                                  }
                                },
                                "id": 556,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "owner",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 31,
                                "src": "5099:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "functionReturnParameters": 517,
                              "id": 557,
                              "nodeType": "Return",
                              "src": "5092:17:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "0df71602",
                  "id": 602,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 511,
                          "name": "gameId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 508,
                          "src": "4707:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 512,
                            "name": "Stage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "4715:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stage_$24_$",
                              "typeString": "type(enum DiceIt.Stage)"
                            }
                          },
                          "id": 513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Done",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23,
                          "src": "4715:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$24",
                            "typeString": "enum DiceIt.Stage"
                          }
                        }
                      ],
                      "id": 514,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 510,
                        "name": "isStage",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 148,
                        "src": "4699:7:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4699:27:0"
                    }
                  ],
                  "name": "setWinner",
                  "nameLocation": "4637:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 509,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 508,
                        "mutability": "mutable",
                        "name": "gameId",
                        "nameLocation": "4655:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 602,
                        "src": "4647:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 507,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4647:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4646:16:0"
                  },
                  "returnParameters": {
                    "id": 517,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 516,
                        "mutability": "mutable",
                        "name": "winner",
                        "nameLocation": "4752:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 602,
                        "src": "4744:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 515,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4744:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4743:16:0"
                  },
                  "scope": 720,
                  "src": "4628:865:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 718,
                    "nodeType": "Block",
                    "src": "5568:845:0",
                    "statements": [
                      {
                        "assignments": [
                          610
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 610,
                            "mutability": "mutable",
                            "name": "totalGameCount",
                            "nameLocation": "5586:14:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 718,
                            "src": "5578:22:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 609,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5578:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 612,
                        "initialValue": {
                          "id": 611,
                          "name": "currentGameIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "5603:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5578:41:0"
                      },
                      {
                        "assignments": [
                          614
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 614,
                            "mutability": "mutable",
                            "name": "gameCount",
                            "nameLocation": "5637:9:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 718,
                            "src": "5629:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 613,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5629:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 616,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5649:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5629:21:0"
                      },
                      {
                        "assignments": [
                          618
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 618,
                            "mutability": "mutable",
                            "name": "currentIndex",
                            "nameLocation": "5668:12:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 718,
                            "src": "5660:20:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 617,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5660:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 620,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5683:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5660:24:0"
                      },
                      {
                        "body": {
                          "id": 652,
                          "nodeType": "Block",
                          "src": "5740:188:0",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 645,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 637,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 631,
                                        "name": "games",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 69,
                                        "src": "5775:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$54_storage_$",
                                          "typeString": "mapping(uint256 => struct DiceIt.Game storage ref)"
                                        }
                                      },
                                      "id": 633,
                                      "indexExpression": {
                                        "id": 632,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 622,
                                        "src": "5781:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5775:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Game_$54_storage",
                                        "typeString": "struct DiceIt.Game storage ref"
                                      }
                                    },
                                    "id": 634,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "owner",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 31,
                                    "src": "5775:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 635,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "5793:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 636,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "5793:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "5775:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 644,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 638,
                                        "name": "games",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 69,
                                        "src": "5823:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$54_storage_$",
                                          "typeString": "mapping(uint256 => struct DiceIt.Game storage ref)"
                                        }
                                      },
                                      "id": 640,
                                      "indexExpression": {
                                        "id": 639,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 622,
                                        "src": "5829:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5823:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Game_$54_storage",
                                        "typeString": "struct DiceIt.Game storage ref"
                                      }
                                    },
                                    "id": 641,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "challenger",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 33,
                                    "src": "5823:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 642,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "5846:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 643,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "5846:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "5823:33:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "5775:81:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 651,
                              "nodeType": "IfStatement",
                              "src": "5754:164:0",
                              "trueBody": {
                                "id": 650,
                                "nodeType": "Block",
                                "src": "5871:47:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 648,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 646,
                                        "name": "gameCount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 614,
                                        "src": "5889:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "+=",
                                      "rightHandSide": {
                                        "hexValue": "31",
                                        "id": 647,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5902:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "5889:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 649,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5889:14:0"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 625,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 622,
                            "src": "5715:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 626,
                            "name": "totalGameCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 610,
                            "src": "5719:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5715:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 653,
                        "initializationExpression": {
                          "assignments": [
                            622
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 622,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "5708:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 653,
                              "src": "5700:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 621,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5700:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 624,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 623,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5712:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "5700:13:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "5735:3:0",
                            "subExpression": {
                              "id": 628,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 622,
                              "src": "5735:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 630,
                          "nodeType": "ExpressionStatement",
                          "src": "5735:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "5695:233:0"
                      },
                      {
                        "assignments": [
                          658
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 658,
                            "mutability": "mutable",
                            "name": "myGames",
                            "nameLocation": "5952:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 718,
                            "src": "5938:21:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Game_$54_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct DiceIt.Game[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 656,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 655,
                                  "name": "Game",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 54,
                                  "src": "5938:4:0"
                                },
                                "referencedDeclaration": 54,
                                "src": "5938:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                                  "typeString": "struct DiceIt.Game"
                                }
                              },
                              "id": 657,
                              "nodeType": "ArrayTypeName",
                              "src": "5938:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Game_$54_storage_$dyn_storage_ptr",
                                "typeString": "struct DiceIt.Game[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 665,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 663,
                              "name": "gameCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 614,
                              "src": "5973:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 662,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "5962:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Game_$54_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct DiceIt.Game memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 660,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 659,
                                  "name": "Game",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 54,
                                  "src": "5966:4:0"
                                },
                                "referencedDeclaration": 54,
                                "src": "5966:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                                  "typeString": "struct DiceIt.Game"
                                }
                              },
                              "id": 661,
                              "nodeType": "ArrayTypeName",
                              "src": "5966:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Game_$54_storage_$dyn_storage_ptr",
                                "typeString": "struct DiceIt.Game[]"
                              }
                            }
                          },
                          "id": 664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5962:21:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Game_$54_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct DiceIt.Game memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5938:45:0"
                      },
                      {
                        "body": {
                          "id": 714,
                          "nodeType": "Block",
                          "src": "6038:344:0",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 690,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 682,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 676,
                                        "name": "games",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 69,
                                        "src": "6073:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$54_storage_$",
                                          "typeString": "mapping(uint256 => struct DiceIt.Game storage ref)"
                                        }
                                      },
                                      "id": 678,
                                      "indexExpression": {
                                        "id": 677,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 667,
                                        "src": "6079:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6073:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Game_$54_storage",
                                        "typeString": "struct DiceIt.Game storage ref"
                                      }
                                    },
                                    "id": 679,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "owner",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 31,
                                    "src": "6073:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 680,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "6091:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 681,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "6091:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "6073:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 689,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 683,
                                        "name": "games",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 69,
                                        "src": "6121:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$54_storage_$",
                                          "typeString": "mapping(uint256 => struct DiceIt.Game storage ref)"
                                        }
                                      },
                                      "id": 685,
                                      "indexExpression": {
                                        "id": 684,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 667,
                                        "src": "6127:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6121:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Game_$54_storage",
                                        "typeString": "struct DiceIt.Game storage ref"
                                      }
                                    },
                                    "id": 686,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "challenger",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 33,
                                    "src": "6121:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 687,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "6144:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 688,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "6144:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "6121:33:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "6073:81:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 713,
                              "nodeType": "IfStatement",
                              "src": "6052:320:0",
                              "trueBody": {
                                "id": 712,
                                "nodeType": "Block",
                                "src": "6169:203:0",
                                "statements": [
                                  {
                                    "assignments": [
                                      692
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 692,
                                        "mutability": "mutable",
                                        "name": "currentId",
                                        "nameLocation": "6195:9:0",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 712,
                                        "src": "6187:17:0",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 691,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "6187:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 694,
                                    "initialValue": {
                                      "id": 693,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 667,
                                      "src": "6207:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "6187:21:0"
                                  },
                                  {
                                    "assignments": [
                                      697
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 697,
                                        "mutability": "mutable",
                                        "name": "currentItem",
                                        "nameLocation": "6239:11:0",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 712,
                                        "src": "6226:24:0",
                                        "stateVariable": false,
                                        "storageLocation": "storage",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                                          "typeString": "struct DiceIt.Game"
                                        },
                                        "typeName": {
                                          "id": 696,
                                          "nodeType": "UserDefinedTypeName",
                                          "pathNode": {
                                            "id": 695,
                                            "name": "Game",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 54,
                                            "src": "6226:4:0"
                                          },
                                          "referencedDeclaration": 54,
                                          "src": "6226:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                                            "typeString": "struct DiceIt.Game"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 701,
                                    "initialValue": {
                                      "baseExpression": {
                                        "id": 698,
                                        "name": "games",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 69,
                                        "src": "6253:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$54_storage_$",
                                          "typeString": "mapping(uint256 => struct DiceIt.Game storage ref)"
                                        }
                                      },
                                      "id": 700,
                                      "indexExpression": {
                                        "id": 699,
                                        "name": "currentId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 692,
                                        "src": "6259:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6253:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Game_$54_storage",
                                        "typeString": "struct DiceIt.Game storage ref"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "6226:43:0"
                                  },
                                  {
                                    "expression": {
                                      "id": 706,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 702,
                                          "name": "myGames",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 658,
                                          "src": "6287:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Game_$54_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct DiceIt.Game memory[] memory"
                                          }
                                        },
                                        "id": 704,
                                        "indexExpression": {
                                          "id": 703,
                                          "name": "currentIndex",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 618,
                                          "src": "6295:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "6287:21:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Game_$54_memory_ptr",
                                          "typeString": "struct DiceIt.Game memory"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 705,
                                        "name": "currentItem",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 697,
                                        "src": "6311:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                                          "typeString": "struct DiceIt.Game storage pointer"
                                        }
                                      },
                                      "src": "6287:35:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Game_$54_memory_ptr",
                                        "typeString": "struct DiceIt.Game memory"
                                      }
                                    },
                                    "id": 707,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6287:35:0"
                                  },
                                  {
                                    "expression": {
                                      "id": 710,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 708,
                                        "name": "currentIndex",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 618,
                                        "src": "6340:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "+=",
                                      "rightHandSide": {
                                        "hexValue": "31",
                                        "id": 709,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6356:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "6340:17:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 711,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6340:17:0"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 670,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 667,
                            "src": "6013:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 671,
                            "name": "totalGameCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 610,
                            "src": "6017:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6013:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 715,
                        "initializationExpression": {
                          "assignments": [
                            667
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 667,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "6006:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 715,
                              "src": "5998:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 666,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5998:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 669,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 668,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6010:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "5998:13:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "6033:3:0",
                            "subExpression": {
                              "id": 673,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 667,
                              "src": "6033:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 675,
                          "nodeType": "ExpressionStatement",
                          "src": "6033:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "5993:389:0"
                      },
                      {
                        "expression": {
                          "id": 716,
                          "name": "myGames",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 658,
                          "src": "6399:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Game_$54_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct DiceIt.Game memory[] memory"
                          }
                        },
                        "functionReturnParameters": 608,
                        "id": 717,
                        "nodeType": "Return",
                        "src": "6392:14:0"
                      }
                    ]
                  },
                  "functionSelector": "a40bf061",
                  "id": 719,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "fetchMyGames",
                  "nameLocation": "5508:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 603,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5520:2:0"
                  },
                  "returnParameters": {
                    "id": 608,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 607,
                        "mutability": "mutable",
                        "name": "_myGames",
                        "nameLocation": "5558:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 719,
                        "src": "5544:22:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Game_$54_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct DiceIt.Game[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 605,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 604,
                              "name": "Game",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 54,
                              "src": "5544:4:0"
                            },
                            "referencedDeclaration": 54,
                            "src": "5544:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Game_$54_storage_ptr",
                              "typeString": "struct DiceIt.Game"
                            }
                          },
                          "id": 606,
                          "nodeType": "ArrayTypeName",
                          "src": "5544:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Game_$54_storage_$dyn_storage_ptr",
                            "typeString": "struct DiceIt.Game[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5543:24:0"
                  },
                  "scope": 720,
                  "src": "5499:914:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 721,
              "src": "70:6345:0",
              "usedErrors": []
            }
          ],
          "src": "37:6379:0"
        },
        "id": 0
      }
    }
  }
}
