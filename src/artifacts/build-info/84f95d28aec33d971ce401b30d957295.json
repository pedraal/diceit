{
  "id": "84f95d28aec33d971ce401b30d957295",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.4",
  "solcLongVersion": "0.8.4+commit.c7e474f2",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/DiceIt.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\ncontract DiceIt {\n    event GameStageChange(\n        address indexed _from,\n        uint256 indexed index,\n        Stage indexed _stage\n    );\n\n    enum Stage {\n        Reg,\n        Run,\n        Done\n    }\n    enum CurrentPlayer {\n        Owner,\n        Challenger\n    }\n\n    struct Game {\n        uint256 id;\n        address owner;\n        address challenger;\n        Stage stage;\n        uint256 maxScore;\n        uint256 maxTurn;\n        CurrentPlayer currentPlayer;\n        Player ownerPlayer;\n        Player challengerPlayer;\n        address winner;\n        uint256 bet;\n    }\n\n    struct Player {\n        uint256 turn;\n        uint256 score;\n        bool stop;\n    }\n\n    uint256 currentGameIndex = 0;\n    mapping(uint256 => Game) public games;\n\n    function createGame(\n        address _challenger,\n        uint256 _maxScore,\n        uint256 _maxTurn\n    ) public payable {\n        require(msg.value > 0);\n\n        games[currentGameIndex] = Game(\n            currentGameIndex,\n            msg.sender,\n            _challenger,\n            Stage.Reg,\n            _maxScore,\n            _maxTurn,\n            CurrentPlayer.Challenger,\n            Player(0, 0, false),\n            Player(0, 0, false),\n            address(0),\n            msg.value\n        );\n        emit GameStageChange(msg.sender, currentGameIndex, Stage.Reg);\n        currentGameIndex++;\n    }\n\n    modifier isStage(uint256 gameId, Stage stage) {\n        require(games[gameId].stage == stage);\n        _;\n    }\n\n    function challengerBet(uint256 gameId)\n        public\n        payable\n        isStage(gameId, Stage.Reg)\n    {\n        Game storage game = games[gameId];\n        require(msg.value == game.bet);\n\n        game.stage = Stage.Run;\n        emit GameStageChange(msg.sender, gameId, Stage.Run);\n    }\n\n    modifier isPlayerTurn(uint256 gameId, address player) {\n        Game memory game = games[gameId];\n        uint256 playerIndex;\n        if (player == game.owner) {\n            require(\n                CurrentPlayer.Owner == game.currentPlayer &&\n                    !game.ownerPlayer.stop\n            );\n        } else if (player == game.challenger) {\n            require(\n                CurrentPlayer.Challenger == game.currentPlayer &&\n                    !game.challengerPlayer.stop\n            );\n        } else {\n            revert();\n        }\n        _;\n    }\n\n    function playTurn(uint256 gameId, bool draw)\n        public\n        payable\n        isStage(gameId, Stage.Run)\n        isPlayerTurn(gameId, msg.sender)\n    {\n        uint256 randomInt = random();\n        Game storage game = games[gameId];\n        if (msg.sender == game.owner) {\n            if (draw) game.ownerPlayer.score += randomInt;\n            game.ownerPlayer.turn++;\n\n            if (\n                !draw ||\n                game.ownerPlayer.score > game.maxScore ||\n                game.ownerPlayer.turn >= game.maxTurn\n            ) game.ownerPlayer.stop = true;\n\n            if (!game.challengerPlayer.stop)\n                game.currentPlayer = CurrentPlayer.Challenger;\n        } else if (msg.sender == game.challenger) {\n            if (draw) game.challengerPlayer.score += randomInt;\n            game.challengerPlayer.turn++;\n\n            if (\n                !draw ||\n                game.challengerPlayer.score > game.maxScore ||\n                game.challengerPlayer.turn >= game.maxTurn\n            ) game.challengerPlayer.stop = true;\n            if (!game.ownerPlayer.stop)\n                game.currentPlayer = CurrentPlayer.Owner;\n        }\n\n        if (game.ownerPlayer.stop && game.challengerPlayer.stop) {\n            game.stage = Stage.Done;\n            game.winner = setWinner(gameId);\n\n            if (game.winner == address(0)) {\n                payable(game.owner).transfer(game.bet);\n                payable(game.challenger).transfer(game.bet);\n            } else {\n                payable(msg.sender).transfer(game.bet * 2);\n            }\n            emit GameStageChange(msg.sender, gameId, Stage.Done);\n        }\n    }\n\n    // This is not a proper random generation method but it will do the job for this demo project\n    function random() private view returns (uint256) {\n        return\n            (uint256(\n                keccak256(\n                    abi.encodePacked(\n                        block.difficulty,\n                        block.timestamp,\n                        uint256(6)\n                    )\n                )\n            ) % 6) + 1;\n    }\n\n    function setWinner(uint256 gameId)\n        public\n        view\n        isStage(gameId, Stage.Done)\n        returns (address winner)\n    {\n        Game memory game = games[gameId];\n\n        if (\n            (game.ownerPlayer.score <= game.maxScore &&\n                game.challengerPlayer.score > game.maxScore) ||\n            (game.ownerPlayer.score <= game.maxScore &&\n                game.ownerPlayer.score > game.challengerPlayer.score)\n        ) {\n            return game.owner;\n        } else if (\n            (game.challengerPlayer.score <= game.maxScore &&\n                game.ownerPlayer.score > game.maxScore) ||\n            (game.challengerPlayer.score <= game.maxScore &&\n                game.ownerPlayer.score < game.challengerPlayer.score)\n        ) {\n            return game.challenger;\n        } else {\n            return address(0);\n        }\n    }\n\n    function fetchMyGames() public view returns (Game[] memory _myGames) {\n        uint256 totalGameCount = currentGameIndex;\n        uint256 gameCount = 0;\n        uint256 currentIndex = 0;\n\n        for (uint256 i = 0; i < totalGameCount; i++) {\n            if (\n                games[i].owner == msg.sender ||\n                games[i].challenger == msg.sender\n            ) {\n                gameCount += 1;\n            }\n        }\n\n        Game[] memory myGames = new Game[](gameCount);\n        for (uint256 i = 0; i < totalGameCount; i++) {\n            if (\n                games[i].owner == msg.sender ||\n                games[i].challenger == msg.sender\n            ) {\n                uint256 currentId = i;\n                Game storage currentItem = games[currentId];\n                myGames[currentIndex] = currentItem;\n                currentIndex += 1;\n            }\n        }\n\n        return myGames;\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/DiceIt.sol": {
        "DiceIt": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "_from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "enum DiceIt.Stage",
                  "name": "_stage",
                  "type": "uint8"
                }
              ],
              "name": "GameStageChange",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "gameId",
                  "type": "uint256"
                }
              ],
              "name": "challengerBet",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_challenger",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_maxScore",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_maxTurn",
                  "type": "uint256"
                }
              ],
              "name": "createGame",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "fetchMyGames",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "owner",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "challenger",
                      "type": "address"
                    },
                    {
                      "internalType": "enum DiceIt.Stage",
                      "name": "stage",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxScore",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxTurn",
                      "type": "uint256"
                    },
                    {
                      "internalType": "enum DiceIt.CurrentPlayer",
                      "name": "currentPlayer",
                      "type": "uint8"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "turn",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "score",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bool",
                          "name": "stop",
                          "type": "bool"
                        }
                      ],
                      "internalType": "struct DiceIt.Player",
                      "name": "ownerPlayer",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "turn",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "score",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bool",
                          "name": "stop",
                          "type": "bool"
                        }
                      ],
                      "internalType": "struct DiceIt.Player",
                      "name": "challengerPlayer",
                      "type": "tuple"
                    },
                    {
                      "internalType": "address",
                      "name": "winner",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "bet",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct DiceIt.Game[]",
                  "name": "_myGames",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "games",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "challenger",
                  "type": "address"
                },
                {
                  "internalType": "enum DiceIt.Stage",
                  "name": "stage",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "maxScore",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxTurn",
                  "type": "uint256"
                },
                {
                  "internalType": "enum DiceIt.CurrentPlayer",
                  "name": "currentPlayer",
                  "type": "uint8"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "turn",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "score",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "stop",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct DiceIt.Player",
                  "name": "ownerPlayer",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "turn",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "score",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "stop",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct DiceIt.Player",
                  "name": "challengerPlayer",
                  "type": "tuple"
                },
                {
                  "internalType": "address",
                  "name": "winner",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "bet",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "gameId",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "draw",
                  "type": "bool"
                }
              ],
              "name": "playTurn",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "gameId",
                  "type": "uint256"
                }
              ],
              "name": "setWinner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "winner",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60806040526000805534801561001457600080fd5b506126ec806100246000396000f3fe6080604052600436106100555760003560e01c80630df716021461005a578063117a5b90146100975780632d76375d146100de5780633b17469e146100fa57806387fb99f614610116578063a40bf06114610132575b600080fd5b34801561006657600080fd5b50610081600480360381019061007c9190611fb9565b61015d565b60405161008e91906122d5565b60405180910390f35b3480156100a357600080fd5b506100be60048036038101906100b99190611fb9565b6105ca565b6040516100d59b9a99989796959493929190612312565b60405180910390f35b6100f860048036038101906100f39190611fe2565b610710565b005b610114600480360381019061010f9190611f6a565b61120e565b005b610130600480360381019061012b9190611fb9565b611638565b005b34801561013e57600080fd5b506101476117d8565b60405161015491906122f0565b60405180910390f35b600081600280600281111561019b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6001600084815260200190815260200160002060020160149054906101000a900460ff1660028111156101f7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461020157600080fd5b60006001600086815260200190815260200160002060405180610160016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900460ff166002811115610323577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281111561035b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1660018111156103be577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60018111156103f6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016006820160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff16151515158152505081526020016009820160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff1615151515815250508152602001600c820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600d82015481525050905080608001518160e00151602001511115801561050a5750806080015181610100015160200151115b8061053d575080608001518160e00151602001511115801561053c5750806101000151602001518160e0015160200151115b5b1561054f5780602001519350506105c3565b80608001518161010001516020015111158015610577575080608001518160e0015160200151115b806105ab5750806080015181610100015160200151111580156105aa5750806101000151602001518160e0015160200151105b5b156105bd5780604001519350506105c3565b60009350505b5050919050565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160149054906101000a900460ff16908060030154908060040154908060050160009054906101000a900460ff16908060060160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff161515151581525050908060090160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff1615151515815250509080600c0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600d015490508b565b81600180600281111561074c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6001600084815260200190815260200160002060020160149054906101000a900460ff1660028111156107a8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146107b257600080fd5b833360006001600084815260200190815260200160002060405180610160016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900460ff1660028111156108d6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281111561090e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff166001811115610971577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60018111156109a9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016006820160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff16151515158152505081526020016009820160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff1615151515815250508152602001600c820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600d8201548152505090506000816020015173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b67578160c001516001811115610b0c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60006001811115610b46577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b148015610b5957508160e0015160400151155b610b6257600080fd5b610c3d565b816040015173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c37578160c001516001811115610bdc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600180811115610c15577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b148015610c29575081610100015160400151155b610c3257600080fd5b610c3c565b600080fd5b5b6000610c47611da2565b90506000600160008b815260200190815260200160002090508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610dbf578815610cdd5781816006016001016000828254610cd591906123f6565b925050819055505b806006016000016000815480929190610cf590612538565b9190505550881580610d11575080600301548160060160010154115b80610d2757508060040154816006016000015410155b15610d4d5760018160060160020160006101000a81548160ff0219169083151502179055505b8060090160020160009054906101000a900460ff16610dba5760018160050160006101000a81548160ff02191690836001811115610db4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505b610f1b565b8060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610f1a578815610e3c5781816009016001016000828254610e3491906123f6565b925050819055505b806009016000016000815480929190610e5490612538565b9190505550881580610e70575080600301548160090160010154115b80610e8657508060040154816009016000015410155b15610eac5760018160090160020160006101000a81548160ff0219169083151502179055505b8060060160020160009054906101000a900460ff16610f195760008160050160006101000a81548160ff02191690836001811115610f13577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505b5b5b8060060160020160009054906101000a900460ff168015610f4d57508060090160020160009054906101000a900460ff165b156112025760028160020160146101000a81548160ff02191690836002811115610fa0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550610fae8a61015d565b81600c0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff1681600c0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561112c578060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc82600d01549081150290604051600060405180830381858888f193505050501580156110b7573d6000803e3d6000fd5b508060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc82600d01549081150290604051600060405180830381858888f19350505050158015611126573d6000803e3d6000fd5b50611184565b3373ffffffffffffffffffffffffffffffffffffffff166108fc600283600d0154611157919061244c565b9081150290604051600060405180830381858888f19350505050158015611182573d6000803e3d6000fd5b505b6002808111156111bd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8a3373ffffffffffffffffffffffffffffffffffffffff167f547e2e1ba13d6a72dfe27bd9814ab46412060b71fa2069142b1c7cff5d96b01a60405160405180910390a45b50505050505050505050565b6000341161121b57600080fd5b60405180610160016040528060005481526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001600060028111156112a1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020018381526020018281526020016001808111156112eb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016040518060600160405280600081526020016000815260200160001515815250815260200160405180606001604052806000815260200160008152602001600015158152508152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020013481525060016000805481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff02191690836002811115611458577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506080820151816003015560a0820151816004015560c08201518160050160006101000a81548160ff021916908360018111156114c2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060e082015181600601600082015181600001556020820151816001015560408201518160020160006101000a81548160ff021916908315150217905550505061010082015181600901600082015181600001556020820151816001015560408201518160020160006101000a81548160ff021916908315150217905550505061012082015181600c0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061014082015181600d0155905050600060028111156115d6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000543373ffffffffffffffffffffffffffffffffffffffff167f547e2e1ba13d6a72dfe27bd9814ab46412060b71fa2069142b1c7cff5d96b01a60405160405180910390a460008081548092919061162e90612538565b9190505550505050565b806000806002811115611674577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6001600084815260200190815260200160002060020160149054906101000a900460ff1660028111156116d0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146116da57600080fd5b600060016000858152602001908152602001600020905080600d0154341461170157600080fd5b60018160020160146101000a81548160ff0219169083600281111561174f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506001600281111561178e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b843373ffffffffffffffffffffffffffffffffffffffff167f547e2e1ba13d6a72dfe27bd9814ab46412060b71fa2069142b1c7cff5d96b01a60405160405180910390a450505050565b606060008054905060008060005b838110156118e7573373ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806118bf57503373ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b156118d4576001836118d191906123f6565b92505b80806118df90612538565b9150506117e6565b5060008267ffffffffffffffff81111561192a577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561196357816020015b611950611df0565b8152602001906001900390816119485790505b50905060005b84811015611d97573373ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611a4257503373ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15611d8457600081905060006001600083815260200190815260200160002090508060405180610160016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900460ff166002811115611b71577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115611ba9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff166001811115611c0c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6001811115611c44577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016006820160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff16151515158152505081526020016009820160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff1615151515815250508152602001600c820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600d82015481525050848681518110611d67577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250600185611d7f91906123f6565b945050505b8080611d8f90612538565b915050611969565b508094505050505090565b60006001600644426006604051602001611dbe93929190612298565b6040516020818303038152906040528051906020012060001c611de1919061258b565b611deb91906123f6565b905090565b60405180610160016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160006002811115611e77577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600081526020016000815260200160006001811115611ec4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001611ed1611f08565b8152602001611ede611f08565b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b604051806060016040528060008152602001600081526020016000151581525090565b600081359050611f3a81612671565b92915050565b600081359050611f4f81612688565b92915050565b600081359050611f648161269f565b92915050565b600080600060608486031215611f7f57600080fd5b6000611f8d86828701611f2b565b9350506020611f9e86828701611f55565b9250506040611faf86828701611f55565b9150509250925092565b600060208284031215611fcb57600080fd5b6000611fd984828501611f55565b91505092915050565b60008060408385031215611ff557600080fd5b600061200385828601611f55565b925050602061201485828601611f40565b9150509250929050565b600061202a83836120fe565b6101e08301905092915050565b612040816124a6565b82525050565b61204f816124a6565b82525050565b6000612060826123cd565b61206a81856123e5565b9350612075836123bd565b8060005b838110156120a657815161208d888261201e565b9750612098836123d8565b925050600181019050612079565b5085935050505092915050565b6120bc816124b8565b82525050565b6120cb81612514565b82525050565b6120da81612514565b82525050565b6120e981612526565b82525050565b6120f881612526565b82525050565b6101e0820160008201516121156000850182612263565b5060208201516121286020850182612037565b50604082015161213b6040850182612037565b50606082015161214e60608501826120e0565b5060808201516121616080850182612263565b5060a082015161217460a0850182612263565b5060c082015161218760c08501826120c2565b5060e082015161219a60e08501826121df565b506101008201516121af6101408501826121df565b506101208201516121c46101a0850182612037565b506101408201516121d96101c0850182612263565b50505050565b6060820160008201516121f56000850182612263565b5060208201516122086020850182612263565b50604082015161221b60408501826120b3565b50505050565b6060820160008201516122376000850182612263565b50602082015161224a6020850182612263565b50604082015161225d60408501826120b3565b50505050565b61226c8161250a565b82525050565b61227b8161250a565b82525050565b61229261228d8261250a565b612581565b82525050565b60006122a48286612281565b6020820191506122b48285612281565b6020820191506122c48284612281565b602082019150819050949350505050565b60006020820190506122ea6000830184612046565b92915050565b6000602082019050818103600083015261230a8184612055565b905092915050565b60006101e082019050612328600083018e612272565b612335602083018d612046565b612342604083018c612046565b61234f606083018b6120ef565b61235c608083018a612272565b61236960a0830189612272565b61237660c08301886120d1565b61238360e0830187612221565b612391610140830186612221565b61239f6101a0830185612046565b6123ad6101c0830184612272565b9c9b505050505050505050505050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b60006124018261250a565b915061240c8361250a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612441576124406125bc565b5b828201905092915050565b60006124578261250a565b91506124628361250a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561249b5761249a6125bc565b5b828202905092915050565b60006124b1826124ea565b9050919050565b60008115159050919050565b60008190506124d282612649565b919050565b60008190506124e58261265d565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061251f826124c4565b9050919050565b6000612531826124d7565b9050919050565b60006125438261250a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612576576125756125bc565b5b600182019050919050565b6000819050919050565b60006125968261250a565b91506125a18361250a565b9250826125b1576125b06125eb565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061265a5761265961261a565b5b50565b6003811061266e5761266d61261a565b5b50565b61267a816124a6565b811461268557600080fd5b50565b612691816124b8565b811461269c57600080fd5b50565b6126a88161250a565b81146126b357600080fd5b5056fea26469706673582212203692615a44cc62e49ebe88aced057d273506fccad7a34197e2a800ed4e7e1a5a64736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26EC DUP1 PUSH2 0x24 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDF71602 EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x117A5B90 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x2D76375D EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x3B17469E EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x87FB99F6 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0xA40BF061 EQ PUSH2 0x132 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x1FB9 JUMP JUMPDEST PUSH2 0x15D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB9 SWAP2 SWAP1 PUSH2 0x1FB9 JUMP JUMPDEST PUSH2 0x5CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2312 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x1FE2 JUMP JUMPDEST PUSH2 0x710 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x1F6A JUMP JUMPDEST PUSH2 0x120E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x1FB9 JUMP JUMPDEST PUSH2 0x1638 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x17D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x22F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x19B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1F7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x323 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x35B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3BE JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3F6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x80 ADD MLOAD DUP2 PUSH1 0xE0 ADD MLOAD PUSH1 0x20 ADD MLOAD GT ISZERO DUP1 ISZERO PUSH2 0x50A JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD DUP2 PUSH2 0x100 ADD MLOAD PUSH1 0x20 ADD MLOAD GT JUMPDEST DUP1 PUSH2 0x53D JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD DUP2 PUSH1 0xE0 ADD MLOAD PUSH1 0x20 ADD MLOAD GT ISZERO DUP1 ISZERO PUSH2 0x53C JUMPI POP DUP1 PUSH2 0x100 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0xE0 ADD MLOAD PUSH1 0x20 ADD MLOAD GT JUMPDEST JUMPDEST ISZERO PUSH2 0x54F JUMPI DUP1 PUSH1 0x20 ADD MLOAD SWAP4 POP POP PUSH2 0x5C3 JUMP JUMPDEST DUP1 PUSH1 0x80 ADD MLOAD DUP2 PUSH2 0x100 ADD MLOAD PUSH1 0x20 ADD MLOAD GT ISZERO DUP1 ISZERO PUSH2 0x577 JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD DUP2 PUSH1 0xE0 ADD MLOAD PUSH1 0x20 ADD MLOAD GT JUMPDEST DUP1 PUSH2 0x5AB JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD DUP2 PUSH2 0x100 ADD MLOAD PUSH1 0x20 ADD MLOAD GT ISZERO DUP1 ISZERO PUSH2 0x5AA JUMPI POP DUP1 PUSH2 0x100 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0xE0 ADD MLOAD PUSH1 0x20 ADD MLOAD LT JUMPDEST JUMPDEST ISZERO PUSH2 0x5BD JUMPI DUP1 PUSH1 0x40 ADD MLOAD SWAP4 POP POP PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x0 SWAP4 POP POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x6 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 DUP1 PUSH1 0x9 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 DUP1 PUSH1 0xC ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0xD ADD SLOAD SWAP1 POP DUP12 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x74C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x7A8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x7B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLER PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x8D6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x90E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x971 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x9A9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB67 JUMPI DUP2 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xB0C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xB46 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ DUP1 ISZERO PUSH2 0xB59 JUMPI POP DUP2 PUSH1 0xE0 ADD MLOAD PUSH1 0x40 ADD MLOAD ISZERO JUMPDEST PUSH2 0xB62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC3D JUMP JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC37 JUMPI DUP2 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xBDC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0xC15 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ DUP1 ISZERO PUSH2 0xC29 JUMPI POP DUP2 PUSH2 0x100 ADD MLOAD PUSH1 0x40 ADD MLOAD ISZERO JUMPDEST PUSH2 0xC32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC3C JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC47 PUSH2 0x1DA2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDBF JUMPI DUP9 ISZERO PUSH2 0xCDD JUMPI DUP2 DUP2 PUSH1 0x6 ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCD5 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xCF5 SWAP1 PUSH2 0x2538 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP9 ISZERO DUP1 PUSH2 0xD11 JUMPI POP DUP1 PUSH1 0x3 ADD SLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x1 ADD SLOAD GT JUMPDEST DUP1 PUSH2 0xD27 JUMPI POP DUP1 PUSH1 0x4 ADD SLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x0 ADD SLOAD LT ISZERO JUMPDEST ISZERO PUSH2 0xD4D JUMPI PUSH1 0x1 DUP2 PUSH1 0x6 ADD PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0x9 ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xDBA JUMPI PUSH1 0x1 DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xDB4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xF1B JUMP JUMPDEST DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF1A JUMPI DUP9 ISZERO PUSH2 0xE3C JUMPI DUP2 DUP2 PUSH1 0x9 ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE34 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0x9 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xE54 SWAP1 PUSH2 0x2538 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP9 ISZERO DUP1 PUSH2 0xE70 JUMPI POP DUP1 PUSH1 0x3 ADD SLOAD DUP2 PUSH1 0x9 ADD PUSH1 0x1 ADD SLOAD GT JUMPDEST DUP1 PUSH2 0xE86 JUMPI POP DUP1 PUSH1 0x4 ADD SLOAD DUP2 PUSH1 0x9 ADD PUSH1 0x0 ADD SLOAD LT ISZERO JUMPDEST ISZERO PUSH2 0xEAC JUMPI PUSH1 0x1 DUP2 PUSH1 0x9 ADD PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF19 JUMPI PUSH1 0x0 DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xF13 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0xF4D JUMPI POP DUP1 PUSH1 0x9 ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1202 JUMPI PUSH1 0x2 DUP2 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xFA0 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0xFAE DUP11 PUSH2 0x15D JUMP JUMPDEST DUP2 PUSH1 0xC ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0xC ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x112C JUMPI DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH1 0xD ADD SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x10B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH1 0xD ADD SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1126 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x1184 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x2 DUP4 PUSH1 0xD ADD SLOAD PUSH2 0x1157 SWAP2 SWAP1 PUSH2 0x244C JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1182 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x11BD JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP11 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x547E2E1BA13D6A72DFE27BD9814AB46412060B71FA2069142B1C7CFF5D96B01A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x121B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 SLOAD DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x12A1 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x12EB JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLVALUE DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1458 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x14C2 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0xC ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0xD ADD SSTORE SWAP1 POP POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x15D6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x547E2E1BA13D6A72DFE27BD9814AB46412060B71FA2069142B1C7CFF5D96B01A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x162E SWAP1 PUSH2 0x2538 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1674 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x16D0 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x16DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0xD ADD SLOAD CALLVALUE EQ PUSH2 0x1701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x174F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x178E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x547E2E1BA13D6A72DFE27BD9814AB46412060B71FA2069142B1C7CFF5D96B01A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18E7 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x18BF JUMPI POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x18D4 JUMPI PUSH1 0x1 DUP4 PUSH2 0x18D1 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 DUP1 PUSH2 0x18DF SWAP1 PUSH2 0x2538 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x17E6 JUMP JUMPDEST POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x192A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1963 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1950 PUSH2 0x1DF0 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1948 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1D97 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1A42 JUMPI POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x1D84 JUMPI PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1B71 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1BA9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1C0C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1C44 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP5 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x1D67 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x1 DUP6 PUSH2 0x1D7F SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST SWAP5 POP POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1D8F SWAP1 PUSH2 0x2538 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1969 JUMP JUMPDEST POP DUP1 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x6 DIFFICULTY TIMESTAMP PUSH1 0x6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1DBE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2298 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x1DE1 SWAP2 SWAP1 PUSH2 0x258B JUMP JUMPDEST PUSH2 0x1DEB SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1E77 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1EC4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1ED1 PUSH2 0x1F08 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1EDE PUSH2 0x1F08 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F3A DUP2 PUSH2 0x2671 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F4F DUP2 PUSH2 0x2688 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F64 DUP2 PUSH2 0x269F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1F8D DUP7 DUP3 DUP8 ADD PUSH2 0x1F2B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F9E DUP7 DUP3 DUP8 ADD PUSH2 0x1F55 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1FAF DUP7 DUP3 DUP8 ADD PUSH2 0x1F55 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FD9 DUP5 DUP3 DUP6 ADD PUSH2 0x1F55 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2003 DUP6 DUP3 DUP7 ADD PUSH2 0x1F55 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2014 DUP6 DUP3 DUP7 ADD PUSH2 0x1F40 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202A DUP4 DUP4 PUSH2 0x20FE JUMP JUMPDEST PUSH2 0x1E0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2040 DUP2 PUSH2 0x24A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x204F DUP2 PUSH2 0x24A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2060 DUP3 PUSH2 0x23CD JUMP JUMPDEST PUSH2 0x206A DUP2 DUP6 PUSH2 0x23E5 JUMP JUMPDEST SWAP4 POP PUSH2 0x2075 DUP4 PUSH2 0x23BD JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20A6 JUMPI DUP2 MLOAD PUSH2 0x208D DUP9 DUP3 PUSH2 0x201E JUMP JUMPDEST SWAP8 POP PUSH2 0x2098 DUP4 PUSH2 0x23D8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2079 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20BC DUP2 PUSH2 0x24B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x20CB DUP2 PUSH2 0x2514 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x20DA DUP2 PUSH2 0x2514 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x20E9 DUP2 PUSH2 0x2526 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x20F8 DUP2 PUSH2 0x2526 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1E0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x2115 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x2263 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2128 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2037 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x213B PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2037 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x214E PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x20E0 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x2161 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x2263 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x2174 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x2263 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x2187 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x20C2 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x219A PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x21DF JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x21AF PUSH2 0x140 DUP6 ADD DUP3 PUSH2 0x21DF JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x21C4 PUSH2 0x1A0 DUP6 ADD DUP3 PUSH2 0x2037 JUMP JUMPDEST POP PUSH2 0x140 DUP3 ADD MLOAD PUSH2 0x21D9 PUSH2 0x1C0 DUP6 ADD DUP3 PUSH2 0x2263 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x21F5 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x2263 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2208 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2263 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x221B PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x20B3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x2237 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x2263 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x224A PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2263 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x225D PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x20B3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x226C DUP2 PUSH2 0x250A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x227B DUP2 PUSH2 0x250A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2292 PUSH2 0x228D DUP3 PUSH2 0x250A JUMP JUMPDEST PUSH2 0x2581 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22A4 DUP3 DUP7 PUSH2 0x2281 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x22B4 DUP3 DUP6 PUSH2 0x2281 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x22C4 DUP3 DUP5 PUSH2 0x2281 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22EA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2046 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x230A DUP2 DUP5 PUSH2 0x2055 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E0 DUP3 ADD SWAP1 POP PUSH2 0x2328 PUSH1 0x0 DUP4 ADD DUP15 PUSH2 0x2272 JUMP JUMPDEST PUSH2 0x2335 PUSH1 0x20 DUP4 ADD DUP14 PUSH2 0x2046 JUMP JUMPDEST PUSH2 0x2342 PUSH1 0x40 DUP4 ADD DUP13 PUSH2 0x2046 JUMP JUMPDEST PUSH2 0x234F PUSH1 0x60 DUP4 ADD DUP12 PUSH2 0x20EF JUMP JUMPDEST PUSH2 0x235C PUSH1 0x80 DUP4 ADD DUP11 PUSH2 0x2272 JUMP JUMPDEST PUSH2 0x2369 PUSH1 0xA0 DUP4 ADD DUP10 PUSH2 0x2272 JUMP JUMPDEST PUSH2 0x2376 PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x20D1 JUMP JUMPDEST PUSH2 0x2383 PUSH1 0xE0 DUP4 ADD DUP8 PUSH2 0x2221 JUMP JUMPDEST PUSH2 0x2391 PUSH2 0x140 DUP4 ADD DUP7 PUSH2 0x2221 JUMP JUMPDEST PUSH2 0x239F PUSH2 0x1A0 DUP4 ADD DUP6 PUSH2 0x2046 JUMP JUMPDEST PUSH2 0x23AD PUSH2 0x1C0 DUP4 ADD DUP5 PUSH2 0x2272 JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2401 DUP3 PUSH2 0x250A JUMP JUMPDEST SWAP2 POP PUSH2 0x240C DUP4 PUSH2 0x250A JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2441 JUMPI PUSH2 0x2440 PUSH2 0x25BC JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2457 DUP3 PUSH2 0x250A JUMP JUMPDEST SWAP2 POP PUSH2 0x2462 DUP4 PUSH2 0x250A JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x249B JUMPI PUSH2 0x249A PUSH2 0x25BC JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24B1 DUP3 PUSH2 0x24EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x24D2 DUP3 PUSH2 0x2649 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x24E5 DUP3 PUSH2 0x265D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x251F DUP3 PUSH2 0x24C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2531 DUP3 PUSH2 0x24D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2543 DUP3 PUSH2 0x250A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2576 JUMPI PUSH2 0x2575 PUSH2 0x25BC JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2596 DUP3 PUSH2 0x250A JUMP JUMPDEST SWAP2 POP PUSH2 0x25A1 DUP4 PUSH2 0x250A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x25B1 JUMPI PUSH2 0x25B0 PUSH2 0x25EB JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x265A JUMPI PUSH2 0x2659 PUSH2 0x261A JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x266E JUMPI PUSH2 0x266D PUSH2 0x261A JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x267A DUP2 PUSH2 0x24A6 JUMP JUMPDEST DUP2 EQ PUSH2 0x2685 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2691 DUP2 PUSH2 0x24B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x269C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x26A8 DUP2 PUSH2 0x250A JUMP JUMPDEST DUP2 EQ PUSH2 0x26B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE SWAP3 PUSH2 0x5A44 0xCC PUSH3 0xE49EBE DUP9 0xAC 0xED SDIV PUSH30 0x273506FCCAD7A34197E2A800ED4E7E1A5A64736F6C634300080400330000 ",
              "sourceMap": "70:6249:0:-:0;;;775:1;748:28;;70:6249;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:14714:1",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "59:87:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "69:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "91:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "78:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "78:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "69:5:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "134:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "107:26:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "107:33:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "107:33:1"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "37:6:1",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "45:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "53:5:1",
                            "type": ""
                          }
                        ],
                        "src": "7:139:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "201:84:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "211:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "233:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "220:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "220:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "211:5:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "273:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "249:23:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "249:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "249:30:1"
                            }
                          ]
                        },
                        "name": "abi_decode_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "179:6:1",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "187:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "195:5:1",
                            "type": ""
                          }
                        ],
                        "src": "152:133:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "343:87:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "353:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "375:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "362:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "362:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "353:5:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "418:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "391:26:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "391:33:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "391:33:1"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "321:6:1",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "329:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "337:5:1",
                            "type": ""
                          }
                        ],
                        "src": "291:139:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "536:452:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "582:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "591:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "594:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "584:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "584:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "584:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "557:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "566:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "553:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "553:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "578:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "549:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "549:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "546:2:1"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "608:117:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "623:15:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "637:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "627:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "652:63:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "687:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "698:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "683:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "683:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "707:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "662:20:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "662:53:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "652:6:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "735:118:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "750:16:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "764:2:1",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "754:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "780:63:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "815:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "826:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "811:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "811:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "835:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "790:20:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "790:53:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "780:6:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "863:118:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "878:16:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "892:2:1",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "882:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "908:63:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "943:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "954:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "939:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "939:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "963:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "918:20:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "918:53:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "908:6:1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint256t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "490:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "501:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "513:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "521:6:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "529:6:1",
                            "type": ""
                          }
                        ],
                        "src": "436:552:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1060:196:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1106:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1115:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1118:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1108:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1108:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1108:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1081:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1090:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1077:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1077:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1102:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1073:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1073:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1070:2:1"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1132:117:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1147:15:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1161:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1151:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1176:63:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1211:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1222:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1207:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1207:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1231:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "1186:20:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1186:53:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1176:6:1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1030:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1041:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1053:6:1",
                            "type": ""
                          }
                        ],
                        "src": "994:262:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1342:321:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1388:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1397:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1400:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1390:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1390:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1390:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1363:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1372:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1359:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1359:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1384:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1355:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1355:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1352:2:1"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1414:117:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1429:15:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1443:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1433:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1458:63:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1493:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1504:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1489:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1489:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1513:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "1468:20:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1468:53:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1458:6:1"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1541:115:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1556:16:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1570:2:1",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1560:6:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1586:60:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1618:9:1"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1629:6:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1614:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1614:22:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1638:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "1596:17:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1596:50:1"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "1586:6:1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1304:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1315:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1327:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1335:6:1",
                            "type": ""
                          }
                        ],
                        "src": "1262:401:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1789:141:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1873:6:1"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1881:3:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_struct$_Game_$44_memory_ptr_to_t_struct$_Game_$44_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1799:73:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1799:86:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1799:86:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1894:30:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1912:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1917:6:1",
                                    "type": "",
                                    "value": "0x01e0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1908:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1908:16:1"
                              },
                              "variableNames": [
                                {
                                  "name": "updatedPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "1894:10:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encodeUpdatedPos_t_struct$_Game_$44_memory_ptr_to_t_struct$_Game_$44_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1762:6:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "1770:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updatedPos",
                            "nodeType": "YulTypedName",
                            "src": "1778:10:1",
                            "type": ""
                          }
                        ],
                        "src": "1669:261:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1991:53:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2008:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2031:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "2013:17:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2013:24:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2001:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2001:37:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2001:37:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1979:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "1986:3:1",
                            "type": ""
                          }
                        ],
                        "src": "1936:108:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2115:53:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2132:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2155:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "2137:17:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2137:24:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2125:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2125:37:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2125:37:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2103:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2110:3:1",
                            "type": ""
                          }
                        ],
                        "src": "2050:118:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2390:728:1",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2400:88:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2482:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_array$_t_struct$_Game_$44_memory_ptr_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "2414:67:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2414:74:1"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "2404:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2497:113:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2598:3:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2603:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_array$_t_struct$_Game_$44_memory_ptr_$dyn_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "2504:93:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2504:106:1"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "2497:3:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2619:91:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2704:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_dataslot_t_array$_t_struct$_Game_$44_memory_ptr_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "2634:69:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2634:76:1"
                              },
                              "variables": [
                                {
                                  "name": "baseRef",
                                  "nodeType": "YulTypedName",
                                  "src": "2623:7:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2719:21:1",
                              "value": {
                                "name": "baseRef",
                                "nodeType": "YulIdentifier",
                                "src": "2733:7:1"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "2723:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2809:284:1",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2823:34:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "2850:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "2844:5:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2844:13:1"
                                    },
                                    "variables": [
                                      {
                                        "name": "elementValue0",
                                        "nodeType": "YulTypedName",
                                        "src": "2827:13:1",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2870:110:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "elementValue0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2961:13:1"
                                        },
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "2976:3:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_encodeUpdatedPos_t_struct$_Game_$44_memory_ptr_to_t_struct$_Game_$44_memory_ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "2877:83:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2877:103:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "2870:3:1"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2993:90:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "3076:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "array_nextElement_t_array$_t_struct$_Game_$44_memory_ptr_$dyn_memory_ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "3003:72:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3003:80:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "2993:6:1"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "2771:1:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2774:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2768:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2768:13:1"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "2782:18:1",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2784:14:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2793:1:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2796:1:1",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2789:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2789:9:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "2784:1:1"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "2753:14:1",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2755:10:1",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2764:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulTypedName",
                                        "src": "2759:1:1",
                                        "type": ""
                                      }
                                    ]
                                  }
                                ]
                              },
                              "src": "2749:344:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3102:10:1",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3109:3:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "3102:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_array$_t_struct$_Game_$44_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Game_$44_memory_ptr_$dyn_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2369:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2376:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2385:3:1",
                            "type": ""
                          }
                        ],
                        "src": "2226:892:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3173:50:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3190:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3210:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "3195:14:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3195:21:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3183:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3183:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3183:34:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bool_to_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3161:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3168:3:1",
                            "type": ""
                          }
                        ],
                        "src": "3124:99:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3298:80:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3315:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3365:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_enum$_CurrentPlayer_$17_to_t_uint8",
                                      "nodeType": "YulIdentifier",
                                      "src": "3320:44:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3320:51:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3308:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3308:64:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3308:64:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_enum$_CurrentPlayer_$17_to_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3286:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3293:3:1",
                            "type": ""
                          }
                        ],
                        "src": "3229:149:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3463:80:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3480:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3530:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_enum$_CurrentPlayer_$17_to_t_uint8",
                                      "nodeType": "YulIdentifier",
                                      "src": "3485:44:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3485:51:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3473:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3473:64:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3473:64:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_enum$_CurrentPlayer_$17_to_t_uint8_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3451:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3458:3:1",
                            "type": ""
                          }
                        ],
                        "src": "3384:159:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3610:72:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3627:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3669:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_enum$_Stage_$14_to_t_uint8",
                                      "nodeType": "YulIdentifier",
                                      "src": "3632:36:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3632:43:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3620:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3620:56:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3620:56:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_enum$_Stage_$14_to_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3598:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3605:3:1",
                            "type": ""
                          }
                        ],
                        "src": "3549:133:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3759:72:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3776:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3818:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_enum$_Stage_$14_to_t_uint8",
                                      "nodeType": "YulIdentifier",
                                      "src": "3781:36:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3781:43:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3769:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3769:56:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3769:56:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_enum$_Stage_$14_to_t_uint8_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3747:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3754:3:1",
                            "type": ""
                          }
                        ],
                        "src": "3688:143:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3981:2121:1",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3991:28:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4007:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4012:6:1",
                                    "type": "",
                                    "value": "0x01e0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4003:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4003:16:1"
                              },
                              "variables": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulTypedName",
                                  "src": "3995:4:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4029:162:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4062:43:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "4092:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4099:4:1",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4088:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4088:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "4082:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4082:23:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "4066:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "4152:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "4170:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4175:4:1",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4166:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4166:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "4118:33:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4118:63:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4118:63:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4201:165:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4237:43:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "4267:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4274:4:1",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4263:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4263:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "4257:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4257:23:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "4241:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "4327:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "4345:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4350:4:1",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4341:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4341:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_address_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "4293:33:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4293:63:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4293:63:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4376:170:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4417:43:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "4447:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4454:4:1",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4443:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4443:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "4437:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4437:23:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "4421:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "4507:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "4525:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4530:4:1",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4521:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4521:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_address_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "4473:33:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4473:63:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4473:63:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4556:171:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4592:43:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "4622:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4629:4:1",
                                            "type": "",
                                            "value": "0x60"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4618:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4618:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "4612:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4612:23:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "4596:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "4688:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "4706:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4711:4:1",
                                            "type": "",
                                            "value": "0x60"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4702:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4702:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_enum$_Stage_$14_to_t_uint8",
                                      "nodeType": "YulIdentifier",
                                      "src": "4648:39:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4648:69:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4648:69:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4737:168:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4776:43:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "4806:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4813:4:1",
                                            "type": "",
                                            "value": "0x80"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4802:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4802:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "4796:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4796:23:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "4780:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "4866:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "4884:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4889:4:1",
                                            "type": "",
                                            "value": "0x80"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4880:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4880:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "4832:33:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4832:63:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4832:63:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4915:167:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4953:43:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "4983:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4990:4:1",
                                            "type": "",
                                            "value": "0xa0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4979:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4979:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "4973:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4973:23:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "4957:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "5043:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "5061:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5066:4:1",
                                            "type": "",
                                            "value": "0xa0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5057:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5057:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "5009:33:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5009:63:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "5009:63:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "5092:187:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "5136:43:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "5166:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5173:4:1",
                                            "type": "",
                                            "value": "0xc0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5162:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5162:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "5156:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5156:23:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "5140:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "5240:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "5258:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5263:4:1",
                                            "type": "",
                                            "value": "0xc0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5254:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5254:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_enum$_CurrentPlayer_$17_to_t_uint8",
                                      "nodeType": "YulIdentifier",
                                      "src": "5192:47:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5192:77:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "5192:77:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "5289:215:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "5331:43:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "5361:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5368:4:1",
                                            "type": "",
                                            "value": "0xe0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5357:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5357:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "5351:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5351:23:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "5335:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "5465:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "5483:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5488:4:1",
                                            "type": "",
                                            "value": "0xe0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5479:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5479:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_struct$_Player_$51_memory_ptr_to_t_struct$_Player_$51_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "5387:77:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5387:107:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "5387:107:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "5514:224:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "5561:45:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "5591:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5598:6:1",
                                            "type": "",
                                            "value": "0x0100"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5587:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5587:18:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "5581:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5581:25:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "5565:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "5697:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "5715:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5720:6:1",
                                            "type": "",
                                            "value": "0x0140"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5711:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5711:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_struct$_Player_$51_memory_ptr_to_t_struct$_Player_$51_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "5619:77:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5619:109:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "5619:109:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "5748:170:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "5785:45:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "5815:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5822:6:1",
                                            "type": "",
                                            "value": "0x0120"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5811:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5811:18:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "5805:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5805:25:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "5789:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "5877:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "5895:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5900:6:1",
                                            "type": "",
                                            "value": "0x01a0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5891:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5891:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_address_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "5843:33:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5843:65:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "5843:65:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "5928:167:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "5962:45:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "5992:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5999:6:1",
                                            "type": "",
                                            "value": "0x0140"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5988:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5988:18:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "5982:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5982:25:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "5966:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "6054:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "6072:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6077:6:1",
                                            "type": "",
                                            "value": "0x01c0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6068:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6068:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "6020:33:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6020:65:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "6020:65:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_struct$_Game_$44_memory_ptr_to_t_struct$_Game_$44_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3968:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3975:3:1",
                            "type": ""
                          }
                        ],
                        "src": "3885:2217:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6260:560:1",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6270:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6286:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6291:4:1",
                                    "type": "",
                                    "value": "0x60"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6282:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6282:14:1"
                              },
                              "variables": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulTypedName",
                                  "src": "6274:4:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "6306:164:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "6341:43:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "6371:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6378:4:1",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6367:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6367:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "6361:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6361:23:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "6345:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "6431:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "6449:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6454:4:1",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6445:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6445:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "6397:33:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6397:63:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "6397:63:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "6480:165:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "6516:43:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "6546:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6553:4:1",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6542:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6542:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "6536:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6536:23:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "6520:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "6606:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "6624:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6629:4:1",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6620:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6620:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "6572:33:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6572:63:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "6572:63:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "6655:158:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "6690:43:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "6720:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6727:4:1",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6716:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6716:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "6710:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6710:23:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "6694:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "6774:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "6792:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6797:4:1",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6788:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6788:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_bool_to_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "6746:27:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6746:57:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "6746:57:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_struct$_Player_$51_memory_ptr_to_t_struct$_Player_$51_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6247:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6254:3:1",
                            "type": ""
                          }
                        ],
                        "src": "6160:660:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6988:560:1",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6998:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7014:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7019:4:1",
                                    "type": "",
                                    "value": "0x60"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7010:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7010:14:1"
                              },
                              "variables": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulTypedName",
                                  "src": "7002:4:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "7034:164:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "7069:43:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "7099:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "7106:4:1",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "7095:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7095:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "7089:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7089:23:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "7073:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "7159:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "7177:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "7182:4:1",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "7173:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7173:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "7125:33:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7125:63:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "7125:63:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "7208:165:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "7244:43:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "7274:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "7281:4:1",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "7270:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7270:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "7264:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7264:23:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "7248:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "7334:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "7352:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "7357:4:1",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "7348:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7348:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "7300:33:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7300:63:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "7300:63:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "7383:158:1",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "7418:43:1",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "7448:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "7455:4:1",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "7444:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7444:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "7438:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7438:23:1"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "7422:12:1",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "7502:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "7520:3:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "7525:4:1",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "7516:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7516:14:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_bool_to_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "7474:27:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7474:57:1"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "7474:57:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_struct$_Player_$51_memory_ptr_to_t_struct$_Player_$51_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6975:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6982:3:1",
                            "type": ""
                          }
                        ],
                        "src": "6878:670:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7609:53:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7626:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "7649:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "7631:17:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7631:24:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7619:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7619:37:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7619:37:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7597:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7604:3:1",
                            "type": ""
                          }
                        ],
                        "src": "7554:108:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7733:53:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7750:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "7773:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "7755:17:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7755:24:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7743:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7743:37:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7743:37:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7721:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7728:3:1",
                            "type": ""
                          }
                        ],
                        "src": "7668:118:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7875:74:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7892:3:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "7935:5:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "7917:17:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7917:24:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "leftAlign_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "7897:19:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7897:45:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7885:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7885:58:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7885:58:1"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7863:5:1",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7870:3:1",
                            "type": ""
                          }
                        ],
                        "src": "7792:157:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8127:366:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "8200:6:1"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8209:3:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8138:61:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8138:75:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8138:75:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8222:19:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8233:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8238:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8229:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8229:12:1"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "8222:3:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "8313:6:1"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8322:3:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8251:61:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8251:75:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8251:75:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8335:19:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8346:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8351:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8342:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8342:12:1"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "8335:3:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "8426:6:1"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8435:3:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8364:61:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8364:75:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8364:75:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8448:19:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8459:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8464:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8455:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8455:12:1"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "8448:3:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8477:10:1",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "8484:3:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "8477:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "8090:3:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "8096:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "8104:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "8112:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "8123:3:1",
                            "type": ""
                          }
                        ],
                        "src": "7955:538:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8597:124:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8607:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8619:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8630:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8615:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8615:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8607:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "8687:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8700:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8711:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8696:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8696:17:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8643:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8643:71:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8643:71:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8569:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "8581:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8592:4:1",
                            "type": ""
                          }
                        ],
                        "src": "8499:222:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8915:265:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8925:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8937:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8948:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8933:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8933:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8925:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8972:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8983:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8968:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8968:17:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "8991:4:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8997:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "8987:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8987:20:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8961:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8961:47:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8961:47:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9017:156:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "9159:6:1"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "9168:4:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_array$_t_struct$_Game_$44_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Game_$44_memory_ptr_$dyn_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9025:133:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9025:148:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9017:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_array$_t_struct$_Game_$44_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Game_$44_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8887:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "8899:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8910:4:1",
                            "type": ""
                          }
                        ],
                        "src": "8727:453:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9673:1061:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9683:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9695:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9706:3:1",
                                    "type": "",
                                    "value": "480"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9691:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9691:19:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9683:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "9764:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9777:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9788:1:1",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9773:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9773:17:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9720:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9720:71:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9720:71:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "9845:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9858:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9869:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9854:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9854:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9801:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9801:72:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9801:72:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "9927:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9940:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9951:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9936:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9936:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9883:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9883:72:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9883:72:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "10015:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10028:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10039:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10024:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10024:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_enum$_Stage_$14_to_t_uint8_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9965:49:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9965:78:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9965:78:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "10097:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10110:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10121:3:1",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10106:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10106:19:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10053:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10053:73:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10053:73:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value5",
                                    "nodeType": "YulIdentifier",
                                    "src": "10180:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10193:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10204:3:1",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10189:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10189:19:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10136:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10136:73:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10136:73:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value6",
                                    "nodeType": "YulIdentifier",
                                    "src": "10277:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10290:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10301:3:1",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10286:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10286:19:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_enum$_CurrentPlayer_$17_to_t_uint8_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10219:57:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10219:87:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10219:87:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value7",
                                    "nodeType": "YulIdentifier",
                                    "src": "10404:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10417:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10428:3:1",
                                        "type": "",
                                        "value": "224"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10413:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10413:19:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_struct$_Player_$51_memory_ptr_to_t_struct$_Player_$51_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10316:87:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10316:117:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10316:117:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value8",
                                    "nodeType": "YulIdentifier",
                                    "src": "10531:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10544:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10555:3:1",
                                        "type": "",
                                        "value": "320"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10540:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10540:19:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_struct$_Player_$51_memory_ptr_to_t_struct$_Player_$51_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10443:87:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10443:117:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10443:117:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value9",
                                    "nodeType": "YulIdentifier",
                                    "src": "10614:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10627:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10638:3:1",
                                        "type": "",
                                        "value": "416"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10623:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10623:19:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10570:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10570:73:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10570:73:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value10",
                                    "nodeType": "YulIdentifier",
                                    "src": "10697:7:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10711:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10722:3:1",
                                        "type": "",
                                        "value": "448"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10707:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10707:19:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10653:43:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10653:74:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10653:74:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_address_t_address_t_enum$_Stage_$14_t_uint256_t_uint256_t_enum$_CurrentPlayer_$17_t_struct$_Player_$51_memory_ptr_t_struct$_Player_$51_memory_ptr_t_address_t_uint256__to_t_uint256_t_address_t_address_t_uint8_t_uint256_t_uint256_t_uint8_t_struct$_Player_$51_memory_ptr_t_struct$_Player_$51_memory_ptr_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9564:9:1",
                            "type": ""
                          },
                          {
                            "name": "value10",
                            "nodeType": "YulTypedName",
                            "src": "9576:7:1",
                            "type": ""
                          },
                          {
                            "name": "value9",
                            "nodeType": "YulTypedName",
                            "src": "9585:6:1",
                            "type": ""
                          },
                          {
                            "name": "value8",
                            "nodeType": "YulTypedName",
                            "src": "9593:6:1",
                            "type": ""
                          },
                          {
                            "name": "value7",
                            "nodeType": "YulTypedName",
                            "src": "9601:6:1",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "9609:6:1",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "9617:6:1",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "9625:6:1",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "9633:6:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "9641:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "9649:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "9657:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9668:4:1",
                            "type": ""
                          }
                        ],
                        "src": "9186:1548:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10832:60:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10842:11:1",
                              "value": {
                                "name": "ptr",
                                "nodeType": "YulIdentifier",
                                "src": "10850:3:1"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "10842:4:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10863:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "10875:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10880:4:1",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10871:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10871:14:1"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "10863:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_t_array$_t_struct$_Game_$44_memory_ptr_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "10819:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "10827:4:1",
                            "type": ""
                          }
                        ],
                        "src": "10740:152:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10992:40:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11003:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "11019:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "11013:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11013:12:1"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "11003:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_array$_t_struct$_Game_$44_memory_ptr_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "10975:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "10985:6:1",
                            "type": ""
                          }
                        ],
                        "src": "10898:134:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11133:38:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11143:22:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "11155:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11160:4:1",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11151:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11151:14:1"
                              },
                              "variableNames": [
                                {
                                  "name": "next",
                                  "nodeType": "YulIdentifier",
                                  "src": "11143:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_nextElement_t_array$_t_struct$_Game_$44_memory_ptr_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "11120:3:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "next",
                            "nodeType": "YulTypedName",
                            "src": "11128:4:1",
                            "type": ""
                          }
                        ],
                        "src": "11038:133:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11308:73:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11325:3:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "11330:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11318:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11318:19:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11318:19:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11346:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11365:3:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11370:4:1",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11361:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11361:14:1"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "11346:11:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_array$_t_struct$_Game_$44_memory_ptr_$dyn_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "11280:3:1",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "11285:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "11296:11:1",
                            "type": ""
                          }
                        ],
                        "src": "11177:204:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11431:261:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11441:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "11464:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "11446:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11446:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "11441:1:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11475:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "11498:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "11480:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11480:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "11475:1:1"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "11638:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "11640:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11640:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "11640:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "11559:1:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11566:66:1",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                      },
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "11634:1:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "11562:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11562:74:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "11556:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11556:81:1"
                              },
                              "nodeType": "YulIf",
                              "src": "11553:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11670:16:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "11681:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "11684:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11677:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11677:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "11670:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "11418:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "11421:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "11427:3:1",
                            "type": ""
                          }
                        ],
                        "src": "11387:305:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11746:300:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11756:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "11779:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "11761:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11761:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "11756:1:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11790:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "11813:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "11795:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11795:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "11790:1:1"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "11988:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "11990:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11990:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "11990:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "11900:1:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "11893:6:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "11893:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "11886:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11886:17:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "11908:1:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "11915:66:1",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                          },
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "11983:1:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "div",
                                          "nodeType": "YulIdentifier",
                                          "src": "11911:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "11911:74:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "11905:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11905:81:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "11882:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11882:105:1"
                              },
                              "nodeType": "YulIf",
                              "src": "11879:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12020:20:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "12035:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "12038:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "12031:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12031:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nodeType": "YulIdentifier",
                                  "src": "12020:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "11729:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "11732:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nodeType": "YulTypedName",
                            "src": "11738:7:1",
                            "type": ""
                          }
                        ],
                        "src": "11698:348:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12097:51:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12107:35:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "12136:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "12118:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12118:24:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "12107:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "12079:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "12089:7:1",
                            "type": ""
                          }
                        ],
                        "src": "12052:96:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12196:48:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12206:32:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "12231:5:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "12224:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12224:13:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "12217:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12217:21:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "12206:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "12178:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "12188:7:1",
                            "type": ""
                          }
                        ],
                        "src": "12154:90:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12311:82:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12321:16:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "12332:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "12321:7:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "12381:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_assert_t_enum$_CurrentPlayer_$17",
                                  "nodeType": "YulIdentifier",
                                  "src": "12338:42:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12338:49:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12338:49:1"
                            }
                          ]
                        },
                        "name": "cleanup_t_enum$_CurrentPlayer_$17",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "12293:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "12303:7:1",
                            "type": ""
                          }
                        ],
                        "src": "12250:143:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12452:74:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12462:16:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "12473:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "12462:7:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "12514:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_assert_t_enum$_Stage_$14",
                                  "nodeType": "YulIdentifier",
                                  "src": "12479:34:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12479:41:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12479:41:1"
                            }
                          ]
                        },
                        "name": "cleanup_t_enum$_Stage_$14",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "12434:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "12444:7:1",
                            "type": ""
                          }
                        ],
                        "src": "12399:127:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12577:81:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12587:65:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "12602:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12609:42:1",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "12598:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12598:54:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "12587:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "12559:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "12569:7:1",
                            "type": ""
                          }
                        ],
                        "src": "12532:126:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12709:32:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12719:16:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "12730:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "12719:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "12691:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "12701:7:1",
                            "type": ""
                          }
                        ],
                        "src": "12664:77:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12821:69:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12831:53:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "12878:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_enum$_CurrentPlayer_$17",
                                  "nodeType": "YulIdentifier",
                                  "src": "12844:33:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12844:40:1"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "12831:9:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_enum$_CurrentPlayer_$17_to_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "12801:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "12811:9:1",
                            "type": ""
                          }
                        ],
                        "src": "12747:143:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12962:61:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12972:45:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "13011:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_enum$_Stage_$14",
                                  "nodeType": "YulIdentifier",
                                  "src": "12985:25:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12985:32:1"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "12972:9:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_enum$_Stage_$14_to_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "12942:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "12952:9:1",
                            "type": ""
                          }
                        ],
                        "src": "12896:127:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13072:190:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13082:33:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "13109:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "13091:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13091:24:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "13082:5:1"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "13205:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "13207:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "13207:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "13207:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "13130:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13137:66:1",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "13127:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13127:77:1"
                              },
                              "nodeType": "YulIf",
                              "src": "13124:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13236:20:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "13247:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13254:1:1",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13243:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13243:13:1"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "13236:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "13058:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "13068:3:1",
                            "type": ""
                          }
                        ],
                        "src": "13029:233:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13315:32:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13325:16:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13336:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "aligned",
                                  "nodeType": "YulIdentifier",
                                  "src": "13325:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "leftAlign_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "13297:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "aligned",
                            "nodeType": "YulTypedName",
                            "src": "13307:7:1",
                            "type": ""
                          }
                        ],
                        "src": "13268:79:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13387:142:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13397:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "13420:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "13402:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13402:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "13397:1:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13431:25:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "13454:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "13436:17:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13436:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "13431:1:1"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "13478:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x12",
                                        "nodeType": "YulIdentifier",
                                        "src": "13480:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "13480:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "13480:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "13475:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "13468:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13468:9:1"
                              },
                              "nodeType": "YulIf",
                              "src": "13465:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13509:14:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "13518:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "13521:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mod",
                                  "nodeType": "YulIdentifier",
                                  "src": "13514:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13514:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "13509:1:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "mod_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "13376:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "13379:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "13385:1:1",
                            "type": ""
                          }
                        ],
                        "src": "13353:176:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13563:152:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13580:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13583:77:1",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13573:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13573:88:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13573:88:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13677:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13680:4:1",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13670:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13670:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13670:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13701:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13704:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "13694:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13694:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13694:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "13535:180:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13749:152:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13766:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13769:77:1",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13759:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13759:88:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13759:88:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13863:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13866:4:1",
                                    "type": "",
                                    "value": "0x12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13856:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13856:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13856:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13887:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13890:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "13880:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13880:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13880:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x12",
                        "nodeType": "YulFunctionDefinition",
                        "src": "13721:180:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13935:152:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13952:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13955:77:1",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13945:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13945:88:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13945:88:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14049:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14052:4:1",
                                    "type": "",
                                    "value": "0x21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14042:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14042:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14042:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14073:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14076:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "14066:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14066:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14066:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x21",
                        "nodeType": "YulFunctionDefinition",
                        "src": "13907:180:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14152:62:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "14186:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x21",
                                        "nodeType": "YulIdentifier",
                                        "src": "14188:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14188:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14188:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "14175:5:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14182:1:1",
                                        "type": "",
                                        "value": "2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "14172:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14172:12:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "14165:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14165:20:1"
                              },
                              "nodeType": "YulIf",
                              "src": "14162:2:1"
                            }
                          ]
                        },
                        "name": "validator_assert_t_enum$_CurrentPlayer_$17",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "14145:5:1",
                            "type": ""
                          }
                        ],
                        "src": "14093:121:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14271:62:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "14305:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x21",
                                        "nodeType": "YulIdentifier",
                                        "src": "14307:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14307:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14307:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "14294:5:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14301:1:1",
                                        "type": "",
                                        "value": "3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "14291:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14291:12:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "14284:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14284:20:1"
                              },
                              "nodeType": "YulIf",
                              "src": "14281:2:1"
                            }
                          ]
                        },
                        "name": "validator_assert_t_enum$_Stage_$14",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "14264:5:1",
                            "type": ""
                          }
                        ],
                        "src": "14220:113:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14382:79:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "14439:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "14448:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "14451:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "14441:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14441:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14441:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "14405:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "14430:5:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "14412:17:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14412:24:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "14402:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14402:35:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "14395:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14395:43:1"
                              },
                              "nodeType": "YulIf",
                              "src": "14392:2:1"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "14375:5:1",
                            "type": ""
                          }
                        ],
                        "src": "14339:122:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14507:76:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "14561:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "14570:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "14573:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "14563:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14563:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14563:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "14530:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "14552:5:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_bool",
                                          "nodeType": "YulIdentifier",
                                          "src": "14537:14:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14537:21:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "14527:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14527:32:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "14520:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14520:40:1"
                              },
                              "nodeType": "YulIf",
                              "src": "14517:2:1"
                            }
                          ]
                        },
                        "name": "validator_revert_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "14500:5:1",
                            "type": ""
                          }
                        ],
                        "src": "14467:116:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14632:79:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "14689:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "14698:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "14701:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "14691:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14691:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14691:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "14655:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "14680:5:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "14662:17:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14662:24:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "14652:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14652:35:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "14645:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14645:43:1"
                              },
                              "nodeType": "YulIf",
                              "src": "14642:2:1"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "14625:5:1",
                            "type": ""
                          }
                        ],
                        "src": "14589:122:1"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Game_$44_memory_ptr_to_t_struct$_Game_$44_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_Game_$44_memory_ptr_to_t_struct$_Game_$44_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x01e0)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // struct DiceIt.Game[] -> struct DiceIt.Game[]\n    function abi_encode_t_array$_t_struct$_Game_$44_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Game_$44_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Game_$44_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Game_$44_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_Game_$44_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_Game_$44_memory_ptr_to_t_struct$_Game_$44_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_Game_$44_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_enum$_CurrentPlayer_$17_to_t_uint8(value, pos) {\n        mstore(pos, convert_t_enum$_CurrentPlayer_$17_to_t_uint8(value))\n    }\n\n    function abi_encode_t_enum$_CurrentPlayer_$17_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_CurrentPlayer_$17_to_t_uint8(value))\n    }\n\n    function abi_encode_t_enum$_Stage_$14_to_t_uint8(value, pos) {\n        mstore(pos, convert_t_enum$_Stage_$14_to_t_uint8(value))\n    }\n\n    function abi_encode_t_enum$_Stage_$14_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Stage_$14_to_t_uint8(value))\n    }\n\n    // struct DiceIt.Game -> struct DiceIt.Game\n    function abi_encode_t_struct$_Game_$44_memory_ptr_to_t_struct$_Game_$44_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x01e0)\n\n        {\n            // id\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // owner\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // challenger\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // stage\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_enum$_Stage_$14_to_t_uint8(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // maxScore\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // maxTurn\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // currentPlayer\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_enum$_CurrentPlayer_$17_to_t_uint8(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // ownerPlayer\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_struct$_Player_$51_memory_ptr_to_t_struct$_Player_$51_memory_ptr(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // challengerPlayer\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_struct$_Player_$51_memory_ptr_to_t_struct$_Player_$51_memory_ptr(memberValue0, add(pos, 0x0140))\n        }\n\n        {\n            // winner\n\n            let memberValue0 := mload(add(value, 0x0120))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x01a0))\n        }\n\n        {\n            // bet\n\n            let memberValue0 := mload(add(value, 0x0140))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x01c0))\n        }\n\n    }\n\n    // struct DiceIt.Player -> struct DiceIt.Player\n    function abi_encode_t_struct$_Player_$51_memory_ptr_to_t_struct$_Player_$51_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x60)\n\n        {\n            // turn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // score\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // stop\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    // struct DiceIt.Player -> struct DiceIt.Player\n    function abi_encode_t_struct$_Player_$51_memory_ptr_to_t_struct$_Player_$51_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x60)\n\n        {\n            // turn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // score\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // stop\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Game_$44_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Game_$44_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Game_$44_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Game_$44_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_address_t_enum$_Stage_$14_t_uint256_t_uint256_t_enum$_CurrentPlayer_$17_t_struct$_Player_$51_memory_ptr_t_struct$_Player_$51_memory_ptr_t_address_t_uint256__to_t_uint256_t_address_t_address_t_uint8_t_uint256_t_uint256_t_uint8_t_struct$_Player_$51_memory_ptr_t_struct$_Player_$51_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart , value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 480)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_enum$_Stage_$14_to_t_uint8_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_enum$_CurrentPlayer_$17_to_t_uint8_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_struct$_Player_$51_memory_ptr_to_t_struct$_Player_$51_memory_ptr_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_struct$_Player_$51_memory_ptr_to_t_struct$_Player_$51_memory_ptr_fromStack(value8,  add(headStart, 320))\n\n        abi_encode_t_address_to_t_address_fromStack(value9,  add(headStart, 416))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value10,  add(headStart, 448))\n\n    }\n\n    function array_dataslot_t_array$_t_struct$_Game_$44_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_struct$_Game_$44_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_struct$_Game_$44_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Game_$44_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_enum$_CurrentPlayer_$17(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_CurrentPlayer_$17(value)\n    }\n\n    function cleanup_t_enum$_Stage_$14(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Stage_$14(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_enum$_CurrentPlayer_$17_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_CurrentPlayer_$17(value)\n    }\n\n    function convert_t_enum$_Stage_$14_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Stage_$14(value)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_CurrentPlayer_$17(value) {\n        if iszero(lt(value, 2)) { panic_error_0x21() }\n    }\n\n    function validator_assert_t_enum$_Stage_$14(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 1,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436106100555760003560e01c80630df716021461005a578063117a5b90146100975780632d76375d146100de5780633b17469e146100fa57806387fb99f614610116578063a40bf06114610132575b600080fd5b34801561006657600080fd5b50610081600480360381019061007c9190611fb9565b61015d565b60405161008e91906122d5565b60405180910390f35b3480156100a357600080fd5b506100be60048036038101906100b99190611fb9565b6105ca565b6040516100d59b9a99989796959493929190612312565b60405180910390f35b6100f860048036038101906100f39190611fe2565b610710565b005b610114600480360381019061010f9190611f6a565b61120e565b005b610130600480360381019061012b9190611fb9565b611638565b005b34801561013e57600080fd5b506101476117d8565b60405161015491906122f0565b60405180910390f35b600081600280600281111561019b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6001600084815260200190815260200160002060020160149054906101000a900460ff1660028111156101f7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461020157600080fd5b60006001600086815260200190815260200160002060405180610160016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900460ff166002811115610323577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281111561035b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1660018111156103be577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60018111156103f6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016006820160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff16151515158152505081526020016009820160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff1615151515815250508152602001600c820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600d82015481525050905080608001518160e00151602001511115801561050a5750806080015181610100015160200151115b8061053d575080608001518160e00151602001511115801561053c5750806101000151602001518160e0015160200151115b5b1561054f5780602001519350506105c3565b80608001518161010001516020015111158015610577575080608001518160e0015160200151115b806105ab5750806080015181610100015160200151111580156105aa5750806101000151602001518160e0015160200151105b5b156105bd5780604001519350506105c3565b60009350505b5050919050565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160149054906101000a900460ff16908060030154908060040154908060050160009054906101000a900460ff16908060060160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff161515151581525050908060090160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff1615151515815250509080600c0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600d015490508b565b81600180600281111561074c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6001600084815260200190815260200160002060020160149054906101000a900460ff1660028111156107a8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146107b257600080fd5b833360006001600084815260200190815260200160002060405180610160016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900460ff1660028111156108d6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281111561090e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff166001811115610971577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60018111156109a9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016006820160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff16151515158152505081526020016009820160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff1615151515815250508152602001600c820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600d8201548152505090506000816020015173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b67578160c001516001811115610b0c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60006001811115610b46577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b148015610b5957508160e0015160400151155b610b6257600080fd5b610c3d565b816040015173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c37578160c001516001811115610bdc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600180811115610c15577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b148015610c29575081610100015160400151155b610c3257600080fd5b610c3c565b600080fd5b5b6000610c47611da2565b90506000600160008b815260200190815260200160002090508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610dbf578815610cdd5781816006016001016000828254610cd591906123f6565b925050819055505b806006016000016000815480929190610cf590612538565b9190505550881580610d11575080600301548160060160010154115b80610d2757508060040154816006016000015410155b15610d4d5760018160060160020160006101000a81548160ff0219169083151502179055505b8060090160020160009054906101000a900460ff16610dba5760018160050160006101000a81548160ff02191690836001811115610db4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505b610f1b565b8060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610f1a578815610e3c5781816009016001016000828254610e3491906123f6565b925050819055505b806009016000016000815480929190610e5490612538565b9190505550881580610e70575080600301548160090160010154115b80610e8657508060040154816009016000015410155b15610eac5760018160090160020160006101000a81548160ff0219169083151502179055505b8060060160020160009054906101000a900460ff16610f195760008160050160006101000a81548160ff02191690836001811115610f13577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505b5b5b8060060160020160009054906101000a900460ff168015610f4d57508060090160020160009054906101000a900460ff165b156112025760028160020160146101000a81548160ff02191690836002811115610fa0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550610fae8a61015d565b81600c0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff1681600c0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561112c578060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc82600d01549081150290604051600060405180830381858888f193505050501580156110b7573d6000803e3d6000fd5b508060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc82600d01549081150290604051600060405180830381858888f19350505050158015611126573d6000803e3d6000fd5b50611184565b3373ffffffffffffffffffffffffffffffffffffffff166108fc600283600d0154611157919061244c565b9081150290604051600060405180830381858888f19350505050158015611182573d6000803e3d6000fd5b505b6002808111156111bd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8a3373ffffffffffffffffffffffffffffffffffffffff167f547e2e1ba13d6a72dfe27bd9814ab46412060b71fa2069142b1c7cff5d96b01a60405160405180910390a45b50505050505050505050565b6000341161121b57600080fd5b60405180610160016040528060005481526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001600060028111156112a1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020018381526020018281526020016001808111156112eb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016040518060600160405280600081526020016000815260200160001515815250815260200160405180606001604052806000815260200160008152602001600015158152508152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020013481525060016000805481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff02191690836002811115611458577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506080820151816003015560a0820151816004015560c08201518160050160006101000a81548160ff021916908360018111156114c2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060e082015181600601600082015181600001556020820151816001015560408201518160020160006101000a81548160ff021916908315150217905550505061010082015181600901600082015181600001556020820151816001015560408201518160020160006101000a81548160ff021916908315150217905550505061012082015181600c0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061014082015181600d0155905050600060028111156115d6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000543373ffffffffffffffffffffffffffffffffffffffff167f547e2e1ba13d6a72dfe27bd9814ab46412060b71fa2069142b1c7cff5d96b01a60405160405180910390a460008081548092919061162e90612538565b9190505550505050565b806000806002811115611674577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6001600084815260200190815260200160002060020160149054906101000a900460ff1660028111156116d0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146116da57600080fd5b600060016000858152602001908152602001600020905080600d0154341461170157600080fd5b60018160020160146101000a81548160ff0219169083600281111561174f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506001600281111561178e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b843373ffffffffffffffffffffffffffffffffffffffff167f547e2e1ba13d6a72dfe27bd9814ab46412060b71fa2069142b1c7cff5d96b01a60405160405180910390a450505050565b606060008054905060008060005b838110156118e7573373ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806118bf57503373ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b156118d4576001836118d191906123f6565b92505b80806118df90612538565b9150506117e6565b5060008267ffffffffffffffff81111561192a577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561196357816020015b611950611df0565b8152602001906001900390816119485790505b50905060005b84811015611d97573373ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611a4257503373ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15611d8457600081905060006001600083815260200190815260200160002090508060405180610160016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900460ff166002811115611b71577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115611ba9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff166001811115611c0c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6001811115611c44577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016006820160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff16151515158152505081526020016009820160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff1615151515815250508152602001600c820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600d82015481525050848681518110611d67577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250600185611d7f91906123f6565b945050505b8080611d8f90612538565b915050611969565b508094505050505090565b60006001600644426006604051602001611dbe93929190612298565b6040516020818303038152906040528051906020012060001c611de1919061258b565b611deb91906123f6565b905090565b60405180610160016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160006002811115611e77577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600081526020016000815260200160006001811115611ec4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001611ed1611f08565b8152602001611ede611f08565b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b604051806060016040528060008152602001600081526020016000151581525090565b600081359050611f3a81612671565b92915050565b600081359050611f4f81612688565b92915050565b600081359050611f648161269f565b92915050565b600080600060608486031215611f7f57600080fd5b6000611f8d86828701611f2b565b9350506020611f9e86828701611f55565b9250506040611faf86828701611f55565b9150509250925092565b600060208284031215611fcb57600080fd5b6000611fd984828501611f55565b91505092915050565b60008060408385031215611ff557600080fd5b600061200385828601611f55565b925050602061201485828601611f40565b9150509250929050565b600061202a83836120fe565b6101e08301905092915050565b612040816124a6565b82525050565b61204f816124a6565b82525050565b6000612060826123cd565b61206a81856123e5565b9350612075836123bd565b8060005b838110156120a657815161208d888261201e565b9750612098836123d8565b925050600181019050612079565b5085935050505092915050565b6120bc816124b8565b82525050565b6120cb81612514565b82525050565b6120da81612514565b82525050565b6120e981612526565b82525050565b6120f881612526565b82525050565b6101e0820160008201516121156000850182612263565b5060208201516121286020850182612037565b50604082015161213b6040850182612037565b50606082015161214e60608501826120e0565b5060808201516121616080850182612263565b5060a082015161217460a0850182612263565b5060c082015161218760c08501826120c2565b5060e082015161219a60e08501826121df565b506101008201516121af6101408501826121df565b506101208201516121c46101a0850182612037565b506101408201516121d96101c0850182612263565b50505050565b6060820160008201516121f56000850182612263565b5060208201516122086020850182612263565b50604082015161221b60408501826120b3565b50505050565b6060820160008201516122376000850182612263565b50602082015161224a6020850182612263565b50604082015161225d60408501826120b3565b50505050565b61226c8161250a565b82525050565b61227b8161250a565b82525050565b61229261228d8261250a565b612581565b82525050565b60006122a48286612281565b6020820191506122b48285612281565b6020820191506122c48284612281565b602082019150819050949350505050565b60006020820190506122ea6000830184612046565b92915050565b6000602082019050818103600083015261230a8184612055565b905092915050565b60006101e082019050612328600083018e612272565b612335602083018d612046565b612342604083018c612046565b61234f606083018b6120ef565b61235c608083018a612272565b61236960a0830189612272565b61237660c08301886120d1565b61238360e0830187612221565b612391610140830186612221565b61239f6101a0830185612046565b6123ad6101c0830184612272565b9c9b505050505050505050505050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b60006124018261250a565b915061240c8361250a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612441576124406125bc565b5b828201905092915050565b60006124578261250a565b91506124628361250a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561249b5761249a6125bc565b5b828202905092915050565b60006124b1826124ea565b9050919050565b60008115159050919050565b60008190506124d282612649565b919050565b60008190506124e58261265d565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061251f826124c4565b9050919050565b6000612531826124d7565b9050919050565b60006125438261250a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612576576125756125bc565b5b600182019050919050565b6000819050919050565b60006125968261250a565b91506125a18361250a565b9250826125b1576125b06125eb565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061265a5761265961261a565b5b50565b6003811061266e5761266d61261a565b5b50565b61267a816124a6565b811461268557600080fd5b50565b612691816124b8565b811461269c57600080fd5b50565b6126a88161250a565b81146126b357600080fd5b5056fea26469706673582212203692615a44cc62e49ebe88aced057d273506fccad7a34197e2a800ed4e7e1a5a64736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDF71602 EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x117A5B90 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x2D76375D EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x3B17469E EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x87FB99F6 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0xA40BF061 EQ PUSH2 0x132 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x1FB9 JUMP JUMPDEST PUSH2 0x15D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB9 SWAP2 SWAP1 PUSH2 0x1FB9 JUMP JUMPDEST PUSH2 0x5CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2312 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x1FE2 JUMP JUMPDEST PUSH2 0x710 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x1F6A JUMP JUMPDEST PUSH2 0x120E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x1FB9 JUMP JUMPDEST PUSH2 0x1638 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x17D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x22F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x19B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1F7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x323 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x35B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3BE JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3F6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x80 ADD MLOAD DUP2 PUSH1 0xE0 ADD MLOAD PUSH1 0x20 ADD MLOAD GT ISZERO DUP1 ISZERO PUSH2 0x50A JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD DUP2 PUSH2 0x100 ADD MLOAD PUSH1 0x20 ADD MLOAD GT JUMPDEST DUP1 PUSH2 0x53D JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD DUP2 PUSH1 0xE0 ADD MLOAD PUSH1 0x20 ADD MLOAD GT ISZERO DUP1 ISZERO PUSH2 0x53C JUMPI POP DUP1 PUSH2 0x100 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0xE0 ADD MLOAD PUSH1 0x20 ADD MLOAD GT JUMPDEST JUMPDEST ISZERO PUSH2 0x54F JUMPI DUP1 PUSH1 0x20 ADD MLOAD SWAP4 POP POP PUSH2 0x5C3 JUMP JUMPDEST DUP1 PUSH1 0x80 ADD MLOAD DUP2 PUSH2 0x100 ADD MLOAD PUSH1 0x20 ADD MLOAD GT ISZERO DUP1 ISZERO PUSH2 0x577 JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD DUP2 PUSH1 0xE0 ADD MLOAD PUSH1 0x20 ADD MLOAD GT JUMPDEST DUP1 PUSH2 0x5AB JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD DUP2 PUSH2 0x100 ADD MLOAD PUSH1 0x20 ADD MLOAD GT ISZERO DUP1 ISZERO PUSH2 0x5AA JUMPI POP DUP1 PUSH2 0x100 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0xE0 ADD MLOAD PUSH1 0x20 ADD MLOAD LT JUMPDEST JUMPDEST ISZERO PUSH2 0x5BD JUMPI DUP1 PUSH1 0x40 ADD MLOAD SWAP4 POP POP PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x0 SWAP4 POP POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x6 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 DUP1 PUSH1 0x9 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 DUP1 PUSH1 0xC ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0xD ADD SLOAD SWAP1 POP DUP12 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x74C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x7A8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x7B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLER PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x8D6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x90E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x971 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x9A9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB67 JUMPI DUP2 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xB0C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xB46 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ DUP1 ISZERO PUSH2 0xB59 JUMPI POP DUP2 PUSH1 0xE0 ADD MLOAD PUSH1 0x40 ADD MLOAD ISZERO JUMPDEST PUSH2 0xB62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC3D JUMP JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC37 JUMPI DUP2 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xBDC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0xC15 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ DUP1 ISZERO PUSH2 0xC29 JUMPI POP DUP2 PUSH2 0x100 ADD MLOAD PUSH1 0x40 ADD MLOAD ISZERO JUMPDEST PUSH2 0xC32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC3C JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC47 PUSH2 0x1DA2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDBF JUMPI DUP9 ISZERO PUSH2 0xCDD JUMPI DUP2 DUP2 PUSH1 0x6 ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCD5 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xCF5 SWAP1 PUSH2 0x2538 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP9 ISZERO DUP1 PUSH2 0xD11 JUMPI POP DUP1 PUSH1 0x3 ADD SLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x1 ADD SLOAD GT JUMPDEST DUP1 PUSH2 0xD27 JUMPI POP DUP1 PUSH1 0x4 ADD SLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x0 ADD SLOAD LT ISZERO JUMPDEST ISZERO PUSH2 0xD4D JUMPI PUSH1 0x1 DUP2 PUSH1 0x6 ADD PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0x9 ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xDBA JUMPI PUSH1 0x1 DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xDB4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xF1B JUMP JUMPDEST DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF1A JUMPI DUP9 ISZERO PUSH2 0xE3C JUMPI DUP2 DUP2 PUSH1 0x9 ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE34 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0x9 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xE54 SWAP1 PUSH2 0x2538 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP9 ISZERO DUP1 PUSH2 0xE70 JUMPI POP DUP1 PUSH1 0x3 ADD SLOAD DUP2 PUSH1 0x9 ADD PUSH1 0x1 ADD SLOAD GT JUMPDEST DUP1 PUSH2 0xE86 JUMPI POP DUP1 PUSH1 0x4 ADD SLOAD DUP2 PUSH1 0x9 ADD PUSH1 0x0 ADD SLOAD LT ISZERO JUMPDEST ISZERO PUSH2 0xEAC JUMPI PUSH1 0x1 DUP2 PUSH1 0x9 ADD PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF19 JUMPI PUSH1 0x0 DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xF13 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0xF4D JUMPI POP DUP1 PUSH1 0x9 ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1202 JUMPI PUSH1 0x2 DUP2 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xFA0 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0xFAE DUP11 PUSH2 0x15D JUMP JUMPDEST DUP2 PUSH1 0xC ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0xC ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x112C JUMPI DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH1 0xD ADD SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x10B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH1 0xD ADD SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1126 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x1184 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x2 DUP4 PUSH1 0xD ADD SLOAD PUSH2 0x1157 SWAP2 SWAP1 PUSH2 0x244C JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1182 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x11BD JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP11 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x547E2E1BA13D6A72DFE27BD9814AB46412060B71FA2069142B1C7CFF5D96B01A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x121B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 SLOAD DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x12A1 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x12EB JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLVALUE DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1458 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x14C2 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0xC ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0xD ADD SSTORE SWAP1 POP POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x15D6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x547E2E1BA13D6A72DFE27BD9814AB46412060B71FA2069142B1C7CFF5D96B01A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x162E SWAP1 PUSH2 0x2538 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1674 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x16D0 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x16DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0xD ADD SLOAD CALLVALUE EQ PUSH2 0x1701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x174F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x178E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x547E2E1BA13D6A72DFE27BD9814AB46412060B71FA2069142B1C7CFF5D96B01A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18E7 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x18BF JUMPI POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x18D4 JUMPI PUSH1 0x1 DUP4 PUSH2 0x18D1 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 DUP1 PUSH2 0x18DF SWAP1 PUSH2 0x2538 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x17E6 JUMP JUMPDEST POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x192A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1963 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1950 PUSH2 0x1DF0 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1948 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1D97 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1A42 JUMPI POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x1D84 JUMPI PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1B71 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1BA9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1C0C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1C44 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP5 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x1D67 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x1 DUP6 PUSH2 0x1D7F SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST SWAP5 POP POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1D8F SWAP1 PUSH2 0x2538 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1969 JUMP JUMPDEST POP DUP1 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x6 DIFFICULTY TIMESTAMP PUSH1 0x6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1DBE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2298 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x1DE1 SWAP2 SWAP1 PUSH2 0x258B JUMP JUMPDEST PUSH2 0x1DEB SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1E77 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1EC4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1ED1 PUSH2 0x1F08 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1EDE PUSH2 0x1F08 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F3A DUP2 PUSH2 0x2671 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F4F DUP2 PUSH2 0x2688 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F64 DUP2 PUSH2 0x269F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1F8D DUP7 DUP3 DUP8 ADD PUSH2 0x1F2B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F9E DUP7 DUP3 DUP8 ADD PUSH2 0x1F55 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1FAF DUP7 DUP3 DUP8 ADD PUSH2 0x1F55 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FD9 DUP5 DUP3 DUP6 ADD PUSH2 0x1F55 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2003 DUP6 DUP3 DUP7 ADD PUSH2 0x1F55 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2014 DUP6 DUP3 DUP7 ADD PUSH2 0x1F40 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202A DUP4 DUP4 PUSH2 0x20FE JUMP JUMPDEST PUSH2 0x1E0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2040 DUP2 PUSH2 0x24A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x204F DUP2 PUSH2 0x24A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2060 DUP3 PUSH2 0x23CD JUMP JUMPDEST PUSH2 0x206A DUP2 DUP6 PUSH2 0x23E5 JUMP JUMPDEST SWAP4 POP PUSH2 0x2075 DUP4 PUSH2 0x23BD JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20A6 JUMPI DUP2 MLOAD PUSH2 0x208D DUP9 DUP3 PUSH2 0x201E JUMP JUMPDEST SWAP8 POP PUSH2 0x2098 DUP4 PUSH2 0x23D8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2079 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20BC DUP2 PUSH2 0x24B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x20CB DUP2 PUSH2 0x2514 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x20DA DUP2 PUSH2 0x2514 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x20E9 DUP2 PUSH2 0x2526 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x20F8 DUP2 PUSH2 0x2526 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1E0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x2115 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x2263 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2128 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2037 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x213B PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2037 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x214E PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x20E0 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x2161 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x2263 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x2174 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x2263 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x2187 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x20C2 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x219A PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x21DF JUMP JUMPDEST POP PUSH2 0x100 DUP3 ADD MLOAD PUSH2 0x21AF PUSH2 0x140 DUP6 ADD DUP3 PUSH2 0x21DF JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x21C4 PUSH2 0x1A0 DUP6 ADD DUP3 PUSH2 0x2037 JUMP JUMPDEST POP PUSH2 0x140 DUP3 ADD MLOAD PUSH2 0x21D9 PUSH2 0x1C0 DUP6 ADD DUP3 PUSH2 0x2263 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x21F5 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x2263 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2208 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2263 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x221B PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x20B3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x2237 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x2263 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x224A PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2263 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x225D PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x20B3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x226C DUP2 PUSH2 0x250A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x227B DUP2 PUSH2 0x250A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2292 PUSH2 0x228D DUP3 PUSH2 0x250A JUMP JUMPDEST PUSH2 0x2581 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22A4 DUP3 DUP7 PUSH2 0x2281 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x22B4 DUP3 DUP6 PUSH2 0x2281 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x22C4 DUP3 DUP5 PUSH2 0x2281 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22EA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2046 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x230A DUP2 DUP5 PUSH2 0x2055 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E0 DUP3 ADD SWAP1 POP PUSH2 0x2328 PUSH1 0x0 DUP4 ADD DUP15 PUSH2 0x2272 JUMP JUMPDEST PUSH2 0x2335 PUSH1 0x20 DUP4 ADD DUP14 PUSH2 0x2046 JUMP JUMPDEST PUSH2 0x2342 PUSH1 0x40 DUP4 ADD DUP13 PUSH2 0x2046 JUMP JUMPDEST PUSH2 0x234F PUSH1 0x60 DUP4 ADD DUP12 PUSH2 0x20EF JUMP JUMPDEST PUSH2 0x235C PUSH1 0x80 DUP4 ADD DUP11 PUSH2 0x2272 JUMP JUMPDEST PUSH2 0x2369 PUSH1 0xA0 DUP4 ADD DUP10 PUSH2 0x2272 JUMP JUMPDEST PUSH2 0x2376 PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x20D1 JUMP JUMPDEST PUSH2 0x2383 PUSH1 0xE0 DUP4 ADD DUP8 PUSH2 0x2221 JUMP JUMPDEST PUSH2 0x2391 PUSH2 0x140 DUP4 ADD DUP7 PUSH2 0x2221 JUMP JUMPDEST PUSH2 0x239F PUSH2 0x1A0 DUP4 ADD DUP6 PUSH2 0x2046 JUMP JUMPDEST PUSH2 0x23AD PUSH2 0x1C0 DUP4 ADD DUP5 PUSH2 0x2272 JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2401 DUP3 PUSH2 0x250A JUMP JUMPDEST SWAP2 POP PUSH2 0x240C DUP4 PUSH2 0x250A JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2441 JUMPI PUSH2 0x2440 PUSH2 0x25BC JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2457 DUP3 PUSH2 0x250A JUMP JUMPDEST SWAP2 POP PUSH2 0x2462 DUP4 PUSH2 0x250A JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x249B JUMPI PUSH2 0x249A PUSH2 0x25BC JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24B1 DUP3 PUSH2 0x24EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x24D2 DUP3 PUSH2 0x2649 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x24E5 DUP3 PUSH2 0x265D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x251F DUP3 PUSH2 0x24C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2531 DUP3 PUSH2 0x24D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2543 DUP3 PUSH2 0x250A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2576 JUMPI PUSH2 0x2575 PUSH2 0x25BC JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2596 DUP3 PUSH2 0x250A JUMP JUMPDEST SWAP2 POP PUSH2 0x25A1 DUP4 PUSH2 0x250A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x25B1 JUMPI PUSH2 0x25B0 PUSH2 0x25EB JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x265A JUMPI PUSH2 0x2659 PUSH2 0x261A JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x266E JUMPI PUSH2 0x266D PUSH2 0x261A JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x267A DUP2 PUSH2 0x24A6 JUMP JUMPDEST DUP2 EQ PUSH2 0x2685 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2691 DUP2 PUSH2 0x24B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x269C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x26A8 DUP2 PUSH2 0x250A JUMP JUMPDEST DUP2 EQ PUSH2 0x26B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE SWAP3 PUSH2 0x5A44 0xCC PUSH3 0xE49EBE DUP9 0xAC 0xED SDIV PUSH30 0x273506FCCAD7A34197E2A800ED4E7E1A5A64736F6C634300080400330000 ",
              "sourceMap": "70:6249:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4532:865;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;782:37;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;2430:1652;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;826:610;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1559:293;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5403:914;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4532:865;4648:14;4611:6;4619:10;1529:5;1506:28;;;;;;;;;;;;;;;;:5;:13;1512:6;1506:13;;;;;;;;;;;:19;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;1498:37;;;;;;4678:16:::1;4697:5;:13;4703:6;4697:13;;;;;;;;;;;4678:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;4765:4;:13;;;4739:4;:16;;;:22;;;:39;;:102;;;;;4828:4;:13;;;4798:4;:21;;;:27;;;:43;4739:102;4738:233;;;;4885:4;:13;;;4859:4;:16;;;:22;;;:39;;:111;;;;;4943:4;:21;;;:27;;;4918:4;:16;;;:22;;;:52;4859:111;4738:233;4721:670;;;5003:4;:10;;;4996:17;;;;;4721:670;5079:4;:13;;;5048:4;:21;;;:27;;;:44;;:102;;;;;5137:4;:13;;;5112:4;:16;;;:22;;;:38;5048:102;5047:238;;;;5199:4;:13;;;5168:4;:21;;;:27;;;:44;;:116;;;;;5257:4;:21;;;:27;;;5232:4;:16;;;:22;;;:52;5168:116;5047:238;5030:361;;;5317:4;:15;;;5310:22;;;;;5030:361;5378:1;5363:17;;;1545:1;4532:865:::0;;;;;:::o;782:37::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2430:1652::-;2522:6;2530:9;1529:5;1506:28;;;;;;;;;;;;;;;;:5;:13;1512:6;1506:13;;;;;;;;;;;:19;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;1498:37;;;;;;2562:6:::1;2570:10;1922:16;1941:5;:13;1947:6;1941:13;;;;;;;;;;;1922:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;1964:19;2007:4;:10;;;1997:20;;:6;:20;;;1993:414;;;2081:4;:18;;;2058:41;;;;;;;;;;;;;;;;:19;:41;;;;;;;;;;;;;;;;;:87;;;;;2124:4;:16;;;:21;;;2123:22;2058:87;2033:126;;;::::0;::::1;;1993:414;;;2190:4;:15;;;2180:25;;:6;:25;;;2176:231;;;2274:4;:18;;;2246:46;;;;;;;;;;;;;;;;:24;:46:::0;::::1;;;;;;;;;;;;;;;;:97;;;;;2317:4;:21;;;:26;;;2316:27;2246:97;2221:136;;;::::0;::::1;;2176:231;;;2388:8;::::0;::::1;2176:231;1993:414;2596:17:::2;2616:8;:6;:8::i;:::-;2596:28;;2634:17;2654:5;:13;2660:6;2654:13;;;;;;;;;;;2634:33;;2695:4;:10;;;;;;;;;;;;2681:24;;:10;:24;;;2677:915;;;2725:4;2721:45;;;2757:9;2731:4;:16;;:22;;;:35;;;;;;;:::i;:::-;;;;;;;;2721:45;2780:4;:16;;:21;;;:23;;;;;;;;;:::i;:::-;;;;;;2840:4;2839:5;:63;;;;2889:4;:13;;;2864:4;:16;;:22;;;:38;2839:63;:120;;;;2947:4;:12;;;2922:4;:16;;:21;;;:37;;2839:120;2818:184;;;2998:4;2974;:16;;:21;;;:28;;;;;;;;;;;;;;;;;;2818:184;3022:4;:21;;:26;;;;;;;;;;;;3017:94;;3087:24;3066:4;:18;;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3017:94;2677:915;;;3146:4;:15;;;;;;;;;;;;3132:29;;:10;:29;;;3128:464;;;3181:4;3177:50;;;3218:9;3187:4;:21;;:27;;;:40;;;;;;;:::i;:::-;;;;;;;;3177:50;3241:4;:21;;:26;;;:28;;;;;;;;;:::i;:::-;;;;;;3306:4;3305:5;:68;;;;3360:4;:13;;;3330:4;:21;;:27;;;:43;3305:68;:130;;;;3423:4;:12;;;3393:4;:21;;:26;;;:42;;3305:130;3284:199;;;3479:4;3450;:21;;:26;;;:33;;;;;;;;;;;;;;;;;;3284:199;3502:4;:16;;:21;;;;;;;;;;;;3497:84;;3562:19;3541:4;:18;;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3497:84;3128:464;2677:915;3606:4;:16;;:21;;;;;;;;;;;;:51;;;;;3631:4;:21;;:26;;;;;;;;;;;;3606:51;3602:474;;;3686:10;3673:4;:10;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3724:17;3734:6;3724:9;:17::i;:::-;3710:4;:11;;;:31;;;;;;;;;;;;;;;;;;3783:1;3760:25;;:4;:11;;;;;;;;;;;;:25;;;3756:244;;;3813:4;:10;;;;;;;;;;;;3805:28;;:38;3834:4;:8;;;3805:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;3869:4;:15;;;;;;;;;;;;3861:33;;:43;3895:4;:8;;;3861:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;3756:244;;;3951:10;3943:28;;:42;3983:1;3972:4;:8;;;:12;;;;:::i;:::-;3943:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;3756:244;4054:10;4018:47:::0;::::2;;;;;;;;;;;;;;;4046:6;4034:10;4018:47;;;;;;;;;;;;3602:474;2416:1;;1545::::1;;;;2430:1652:::0;;;;:::o;826:610::-;979:1;967:9;:13;959:22;;;;;;1018:312;;;;;;;;1036:16;;1018:312;;;;1066:10;1018:312;;;;;;1090:11;1018:312;;;;;;1115:9;1018:312;;;;;;;;;;;;;;;;;;;;1138:9;1018:312;;;;1161:8;1018:312;;;;1183:24;1018:312;;;;;;;;;;;;;;;;;;;;1221:19;;;;;;;;1228:1;1221:19;;;;1231:1;1221:19;;;;1234:5;1221:19;;;;;1018:312;;;;1254:19;;;;;;;;1261:1;1254:19;;;;1264:1;1254:19;;;;1267:5;1254:19;;;;;1018:312;;;;1295:1;1018:312;;;;;;1311:9;1018:312;;;992:5;:23;998:16;;992:23;;;;;;;;;;;:338;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1391:9;1345:56;;;;;;;;;;;;;;;;1373:16;;1361:10;1345:56;;;;;;;;;;;;1411:16;;:18;;;;;;;;;:::i;:::-;;;;;;826:610;;;:::o;1559:293::-;1645:6;1653:9;1529:5;1506:28;;;;;;;;;;;;;;;;:5;:13;1512:6;1506:13;;;;;;;;;;;:19;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;1498:37;;;;;;1678:17:::1;1698:5;:13;1704:6;1698:13;;;;;;;;;;;1678:33;;1742:4;:8;;;1729:9;:21;1721:30;;;::::0;::::1;;1775:9;1762:4;:10;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1835:9;1799:46;;;;;;;;;;;;;;;;1827:6;1815:10;1799:46;;;;;;;;;;;;1545:1;1559:293:::0;;;:::o;5403:914::-;5448:22;5482;5507:16;;5482:41;;5533:17;5564:20;5604:9;5599:233;5623:14;5619:1;:18;5599:233;;;5697:10;5679:28;;:5;:8;5685:1;5679:8;;;;;;;;;;;:14;;;;;;;;;;;;:28;;;:81;;;;5750:10;5727:33;;:5;:8;5733:1;5727:8;;;;;;;;;;;:19;;;;;;;;;;;;:33;;;5679:81;5658:164;;;5806:1;5793:14;;;;;:::i;:::-;;;5658:164;5639:3;;;;;:::i;:::-;;;;5599:233;;;;5842:21;5877:9;5866:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;5842:45;;5902:9;5897:389;5921:14;5917:1;:18;5897:389;;;5995:10;5977:28;;:5;:8;5983:1;5977:8;;;;;;;;;;;:14;;;;;;;;;;;;:28;;;:81;;;;6048:10;6025:33;;:5;:8;6031:1;6025:8;;;;;;;;;;;:19;;;;;;;;;;;;:33;;;5977:81;5956:320;;;6091:17;6111:1;6091:21;;6130:24;6157:5;:16;6163:9;6157:16;;;;;;;;;;;6130:43;;6215:11;6191:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;6199:12;6191:21;;;;;;;;;;;;;;;;;;;;;:35;;;;6260:1;6244:17;;;;;:::i;:::-;;;5956:320;;;5937:3;;;;;:::i;:::-;;;;5897:389;;;;6303:7;6296:14;;;;;;5403:914;:::o;4186:340::-;4226:7;4518:1;4513;4363:16;4405:15;4454:1;4321:157;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4290:206;;;;;;4265:245;;:249;;;;:::i;:::-;4264:255;;;;:::i;:::-;4245:274;;4186:340;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:133::-;195:5;233:6;220:20;211:29;;249:30;273:5;249:30;:::i;:::-;201:84;;;;:::o;291:139::-;337:5;375:6;362:20;353:29;;391:33;418:5;391:33;:::i;:::-;343:87;;;;:::o;436:552::-;513:6;521;529;578:2;566:9;557:7;553:23;549:32;546:2;;;594:1;591;584:12;546:2;637:1;662:53;707:7;698:6;687:9;683:22;662:53;:::i;:::-;652:63;;608:117;764:2;790:53;835:7;826:6;815:9;811:22;790:53;:::i;:::-;780:63;;735:118;892:2;918:53;963:7;954:6;943:9;939:22;918:53;:::i;:::-;908:63;;863:118;536:452;;;;;:::o;994:262::-;1053:6;1102:2;1090:9;1081:7;1077:23;1073:32;1070:2;;;1118:1;1115;1108:12;1070:2;1161:1;1186:53;1231:7;1222:6;1211:9;1207:22;1186:53;:::i;:::-;1176:63;;1132:117;1060:196;;;;:::o;1262:401::-;1327:6;1335;1384:2;1372:9;1363:7;1359:23;1355:32;1352:2;;;1400:1;1397;1390:12;1352:2;1443:1;1468:53;1513:7;1504:6;1493:9;1489:22;1468:53;:::i;:::-;1458:63;;1414:117;1570:2;1596:50;1638:7;1629:6;1618:9;1614:22;1596:50;:::i;:::-;1586:60;;1541:115;1342:321;;;;;:::o;1669:261::-;1778:10;1799:86;1881:3;1873:6;1799:86;:::i;:::-;1917:6;1912:3;1908:16;1894:30;;1789:141;;;;:::o;1936:108::-;2013:24;2031:5;2013:24;:::i;:::-;2008:3;2001:37;1991:53;;:::o;2050:118::-;2137:24;2155:5;2137:24;:::i;:::-;2132:3;2125:37;2115:53;;:::o;2226:892::-;2385:3;2414:74;2482:5;2414:74;:::i;:::-;2504:106;2603:6;2598:3;2504:106;:::i;:::-;2497:113;;2634:76;2704:5;2634:76;:::i;:::-;2733:7;2764:1;2749:344;2774:6;2771:1;2768:13;2749:344;;;2850:6;2844:13;2877:103;2976:3;2961:13;2877:103;:::i;:::-;2870:110;;3003:80;3076:6;3003:80;:::i;:::-;2993:90;;2809:284;2796:1;2793;2789:9;2784:14;;2749:344;;;2753:14;3109:3;3102:10;;2390:728;;;;;;;:::o;3124:99::-;3195:21;3210:5;3195:21;:::i;:::-;3190:3;3183:34;3173:50;;:::o;3229:149::-;3320:51;3365:5;3320:51;:::i;:::-;3315:3;3308:64;3298:80;;:::o;3384:159::-;3485:51;3530:5;3485:51;:::i;:::-;3480:3;3473:64;3463:80;;:::o;3549:133::-;3632:43;3669:5;3632:43;:::i;:::-;3627:3;3620:56;3610:72;;:::o;3688:143::-;3781:43;3818:5;3781:43;:::i;:::-;3776:3;3769:56;3759:72;;:::o;3885:2217::-;4012:6;4007:3;4003:16;4099:4;4092:5;4088:16;4082:23;4118:63;4175:4;4170:3;4166:14;4152:12;4118:63;:::i;:::-;4029:162;4274:4;4267:5;4263:16;4257:23;4293:63;4350:4;4345:3;4341:14;4327:12;4293:63;:::i;:::-;4201:165;4454:4;4447:5;4443:16;4437:23;4473:63;4530:4;4525:3;4521:14;4507:12;4473:63;:::i;:::-;4376:170;4629:4;4622:5;4618:16;4612:23;4648:69;4711:4;4706:3;4702:14;4688:12;4648:69;:::i;:::-;4556:171;4813:4;4806:5;4802:16;4796:23;4832:63;4889:4;4884:3;4880:14;4866:12;4832:63;:::i;:::-;4737:168;4990:4;4983:5;4979:16;4973:23;5009:63;5066:4;5061:3;5057:14;5043:12;5009:63;:::i;:::-;4915:167;5173:4;5166:5;5162:16;5156:23;5192:77;5263:4;5258:3;5254:14;5240:12;5192:77;:::i;:::-;5092:187;5368:4;5361:5;5357:16;5351:23;5387:107;5488:4;5483:3;5479:14;5465:12;5387:107;:::i;:::-;5289:215;5598:6;5591:5;5587:18;5581:25;5619:109;5720:6;5715:3;5711:16;5697:12;5619:109;:::i;:::-;5514:224;5822:6;5815:5;5811:18;5805:25;5843:65;5900:6;5895:3;5891:16;5877:12;5843:65;:::i;:::-;5748:170;5999:6;5992:5;5988:18;5982:25;6020:65;6077:6;6072:3;6068:16;6054:12;6020:65;:::i;:::-;5928:167;3981:2121;;;:::o;6160:660::-;6291:4;6286:3;6282:14;6378:4;6371:5;6367:16;6361:23;6397:63;6454:4;6449:3;6445:14;6431:12;6397:63;:::i;:::-;6306:164;6553:4;6546:5;6542:16;6536:23;6572:63;6629:4;6624:3;6620:14;6606:12;6572:63;:::i;:::-;6480:165;6727:4;6720:5;6716:16;6710:23;6746:57;6797:4;6792:3;6788:14;6774:12;6746:57;:::i;:::-;6655:158;6260:560;;;:::o;6878:670::-;7019:4;7014:3;7010:14;7106:4;7099:5;7095:16;7089:23;7125:63;7182:4;7177:3;7173:14;7159:12;7125:63;:::i;:::-;7034:164;7281:4;7274:5;7270:16;7264:23;7300:63;7357:4;7352:3;7348:14;7334:12;7300:63;:::i;:::-;7208:165;7455:4;7448:5;7444:16;7438:23;7474:57;7525:4;7520:3;7516:14;7502:12;7474:57;:::i;:::-;7383:158;6988:560;;;:::o;7554:108::-;7631:24;7649:5;7631:24;:::i;:::-;7626:3;7619:37;7609:53;;:::o;7668:118::-;7755:24;7773:5;7755:24;:::i;:::-;7750:3;7743:37;7733:53;;:::o;7792:157::-;7897:45;7917:24;7935:5;7917:24;:::i;:::-;7897:45;:::i;:::-;7892:3;7885:58;7875:74;;:::o;7955:538::-;8123:3;8138:75;8209:3;8200:6;8138:75;:::i;:::-;8238:2;8233:3;8229:12;8222:19;;8251:75;8322:3;8313:6;8251:75;:::i;:::-;8351:2;8346:3;8342:12;8335:19;;8364:75;8435:3;8426:6;8364:75;:::i;:::-;8464:2;8459:3;8455:12;8448:19;;8484:3;8477:10;;8127:366;;;;;;:::o;8499:222::-;8592:4;8630:2;8619:9;8615:18;8607:26;;8643:71;8711:1;8700:9;8696:17;8687:6;8643:71;:::i;:::-;8597:124;;;;:::o;8727:453::-;8910:4;8948:2;8937:9;8933:18;8925:26;;8997:9;8991:4;8987:20;8983:1;8972:9;8968:17;8961:47;9025:148;9168:4;9159:6;9025:148;:::i;:::-;9017:156;;8915:265;;;;:::o;9186:1548::-;9668:4;9706:3;9695:9;9691:19;9683:27;;9720:71;9788:1;9777:9;9773:17;9764:6;9720:71;:::i;:::-;9801:72;9869:2;9858:9;9854:18;9845:6;9801:72;:::i;:::-;9883;9951:2;9940:9;9936:18;9927:6;9883:72;:::i;:::-;9965:78;10039:2;10028:9;10024:18;10015:6;9965:78;:::i;:::-;10053:73;10121:3;10110:9;10106:19;10097:6;10053:73;:::i;:::-;10136;10204:3;10193:9;10189:19;10180:6;10136:73;:::i;:::-;10219:87;10301:3;10290:9;10286:19;10277:6;10219:87;:::i;:::-;10316:117;10428:3;10417:9;10413:19;10404:6;10316:117;:::i;:::-;10443;10555:3;10544:9;10540:19;10531:6;10443:117;:::i;:::-;10570:73;10638:3;10627:9;10623:19;10614:6;10570:73;:::i;:::-;10653:74;10722:3;10711:9;10707:19;10697:7;10653:74;:::i;:::-;9673:1061;;;;;;;;;;;;;;:::o;10740:152::-;10827:4;10850:3;10842:11;;10880:4;10875:3;10871:14;10863:22;;10832:60;;;:::o;10898:134::-;10985:6;11019:5;11013:12;11003:22;;10992:40;;;:::o;11038:133::-;11128:4;11160;11155:3;11151:14;11143:22;;11133:38;;;:::o;11177:204::-;11296:11;11330:6;11325:3;11318:19;11370:4;11365:3;11361:14;11346:29;;11308:73;;;;:::o;11387:305::-;11427:3;11446:20;11464:1;11446:20;:::i;:::-;11441:25;;11480:20;11498:1;11480:20;:::i;:::-;11475:25;;11634:1;11566:66;11562:74;11559:1;11556:81;11553:2;;;11640:18;;:::i;:::-;11553:2;11684:1;11681;11677:9;11670:16;;11431:261;;;;:::o;11698:348::-;11738:7;11761:20;11779:1;11761:20;:::i;:::-;11756:25;;11795:20;11813:1;11795:20;:::i;:::-;11790:25;;11983:1;11915:66;11911:74;11908:1;11905:81;11900:1;11893:9;11886:17;11882:105;11879:2;;;11990:18;;:::i;:::-;11879:2;12038:1;12035;12031:9;12020:20;;11746:300;;;;:::o;12052:96::-;12089:7;12118:24;12136:5;12118:24;:::i;:::-;12107:35;;12097:51;;;:::o;12154:90::-;12188:7;12231:5;12224:13;12217:21;12206:32;;12196:48;;;:::o;12250:143::-;12303:7;12332:5;12321:16;;12338:49;12381:5;12338:49;:::i;:::-;12311:82;;;:::o;12399:127::-;12444:7;12473:5;12462:16;;12479:41;12514:5;12479:41;:::i;:::-;12452:74;;;:::o;12532:126::-;12569:7;12609:42;12602:5;12598:54;12587:65;;12577:81;;;:::o;12664:77::-;12701:7;12730:5;12719:16;;12709:32;;;:::o;12747:143::-;12811:9;12844:40;12878:5;12844:40;:::i;:::-;12831:53;;12821:69;;;:::o;12896:127::-;12952:9;12985:32;13011:5;12985:32;:::i;:::-;12972:45;;12962:61;;;:::o;13029:233::-;13068:3;13091:24;13109:5;13091:24;:::i;:::-;13082:33;;13137:66;13130:5;13127:77;13124:2;;;13207:18;;:::i;:::-;13124:2;13254:1;13247:5;13243:13;13236:20;;13072:190;;;:::o;13268:79::-;13307:7;13336:5;13325:16;;13315:32;;;:::o;13353:176::-;13385:1;13402:20;13420:1;13402:20;:::i;:::-;13397:25;;13436:20;13454:1;13436:20;:::i;:::-;13431:25;;13475:1;13465:2;;13480:18;;:::i;:::-;13465:2;13521:1;13518;13514:9;13509:14;;13387:142;;;;:::o;13535:180::-;13583:77;13580:1;13573:88;13680:4;13677:1;13670:15;13704:4;13701:1;13694:15;13721:180;13769:77;13766:1;13759:88;13866:4;13863:1;13856:15;13890:4;13887:1;13880:15;13907:180;13955:77;13952:1;13945:88;14052:4;14049:1;14042:15;14076:4;14073:1;14066:15;14093:121;14182:1;14175:5;14172:12;14162:2;;14188:18;;:::i;:::-;14162:2;14152:62;:::o;14220:113::-;14301:1;14294:5;14291:12;14281:2;;14307:18;;:::i;:::-;14281:2;14271:62;:::o;14339:122::-;14412:24;14430:5;14412:24;:::i;:::-;14405:5;14402:35;14392:2;;14451:1;14448;14441:12;14392:2;14382:79;:::o;14467:116::-;14537:21;14552:5;14537:21;:::i;:::-;14530:5;14527:32;14517:2;;14573:1;14570;14563:12;14517:2;14507:76;:::o;14589:122::-;14662:24;14680:5;14662:24;:::i;:::-;14655:5;14652:35;14642:2;;14701:1;14698;14691:12;14642:2;14632:79;:::o"
            },
            "methodIdentifiers": {
              "challengerBet(uint256)": "87fb99f6",
              "createGame(address,uint256,uint256)": "3b17469e",
              "fetchMyGames()": "a40bf061",
              "games(uint256)": "117a5b90",
              "playTurn(uint256,bool)": "2d76375d",
              "setWinner(uint256)": "0df71602"
            }
          }
        }
      }
    },
    "sources": {
      "contracts/DiceIt.sol": {
        "ast": {
          "absolutePath": "contracts/DiceIt.sol",
          "exportedSymbols": {
            "DiceIt": [
              707
            ]
          },
          "id": 708,
          "license": "GPL-3.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".0",
                "<",
                "0.9",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "37:31:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 707,
              "linearizedBaseContracts": [
                707
              ],
              "name": "DiceIt",
              "nameLocation": "79:6:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "id": 10,
                  "name": "GameStageChange",
                  "nameLocation": "98:15:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 9,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_from",
                        "nameLocation": "139:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 10,
                        "src": "123:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "123:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 5,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "170:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 10,
                        "src": "154:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "154:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 8,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_stage",
                        "nameLocation": "199:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 10,
                        "src": "185:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Stage_$14",
                          "typeString": "enum DiceIt.Stage"
                        },
                        "typeName": {
                          "id": 7,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 6,
                            "name": "Stage",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 14,
                            "src": "185:5:0"
                          },
                          "referencedDeclaration": 14,
                          "src": "185:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$14",
                            "typeString": "enum DiceIt.Stage"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "113:98:0"
                  },
                  "src": "92:120:0"
                },
                {
                  "canonicalName": "DiceIt.Stage",
                  "id": 14,
                  "members": [
                    {
                      "id": 11,
                      "name": "Reg",
                      "nameLocation": "239:3:0",
                      "nodeType": "EnumValue",
                      "src": "239:3:0"
                    },
                    {
                      "id": 12,
                      "name": "Run",
                      "nameLocation": "252:3:0",
                      "nodeType": "EnumValue",
                      "src": "252:3:0"
                    },
                    {
                      "id": 13,
                      "name": "Done",
                      "nameLocation": "265:4:0",
                      "nodeType": "EnumValue",
                      "src": "265:4:0"
                    }
                  ],
                  "name": "Stage",
                  "nameLocation": "223:5:0",
                  "nodeType": "EnumDefinition",
                  "src": "218:57:0"
                },
                {
                  "canonicalName": "DiceIt.CurrentPlayer",
                  "id": 17,
                  "members": [
                    {
                      "id": 15,
                      "name": "Owner",
                      "nameLocation": "309:5:0",
                      "nodeType": "EnumValue",
                      "src": "309:5:0"
                    },
                    {
                      "id": 16,
                      "name": "Challenger",
                      "nameLocation": "324:10:0",
                      "nodeType": "EnumValue",
                      "src": "324:10:0"
                    }
                  ],
                  "name": "CurrentPlayer",
                  "nameLocation": "285:13:0",
                  "nodeType": "EnumDefinition",
                  "src": "280:60:0"
                },
                {
                  "canonicalName": "DiceIt.Game",
                  "id": 44,
                  "members": [
                    {
                      "constant": false,
                      "id": 19,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "376:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 44,
                      "src": "368:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 18,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "368:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 21,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "396:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 44,
                      "src": "388:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 20,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "388:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 23,
                      "mutability": "mutable",
                      "name": "challenger",
                      "nameLocation": "419:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 44,
                      "src": "411:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 22,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "411:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 26,
                      "mutability": "mutable",
                      "name": "stage",
                      "nameLocation": "445:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 44,
                      "src": "439:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Stage_$14",
                        "typeString": "enum DiceIt.Stage"
                      },
                      "typeName": {
                        "id": 25,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24,
                          "name": "Stage",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14,
                          "src": "439:5:0"
                        },
                        "referencedDeclaration": 14,
                        "src": "439:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Stage_$14",
                          "typeString": "enum DiceIt.Stage"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 28,
                      "mutability": "mutable",
                      "name": "maxScore",
                      "nameLocation": "468:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 44,
                      "src": "460:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 27,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "460:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 30,
                      "mutability": "mutable",
                      "name": "maxTurn",
                      "nameLocation": "494:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 44,
                      "src": "486:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 29,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "486:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 33,
                      "mutability": "mutable",
                      "name": "currentPlayer",
                      "nameLocation": "525:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 44,
                      "src": "511:27:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CurrentPlayer_$17",
                        "typeString": "enum DiceIt.CurrentPlayer"
                      },
                      "typeName": {
                        "id": 32,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 31,
                          "name": "CurrentPlayer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 17,
                          "src": "511:13:0"
                        },
                        "referencedDeclaration": 17,
                        "src": "511:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CurrentPlayer_$17",
                          "typeString": "enum DiceIt.CurrentPlayer"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 36,
                      "mutability": "mutable",
                      "name": "ownerPlayer",
                      "nameLocation": "555:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 44,
                      "src": "548:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Player_$51_storage_ptr",
                        "typeString": "struct DiceIt.Player"
                      },
                      "typeName": {
                        "id": 35,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34,
                          "name": "Player",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 51,
                          "src": "548:6:0"
                        },
                        "referencedDeclaration": 51,
                        "src": "548:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Player_$51_storage_ptr",
                          "typeString": "struct DiceIt.Player"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 39,
                      "mutability": "mutable",
                      "name": "challengerPlayer",
                      "nameLocation": "583:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 44,
                      "src": "576:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Player_$51_storage_ptr",
                        "typeString": "struct DiceIt.Player"
                      },
                      "typeName": {
                        "id": 38,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 37,
                          "name": "Player",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 51,
                          "src": "576:6:0"
                        },
                        "referencedDeclaration": 51,
                        "src": "576:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Player_$51_storage_ptr",
                          "typeString": "struct DiceIt.Player"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 41,
                      "mutability": "mutable",
                      "name": "winner",
                      "nameLocation": "617:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 44,
                      "src": "609:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 40,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "609:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 43,
                      "mutability": "mutable",
                      "name": "bet",
                      "nameLocation": "641:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 44,
                      "src": "633:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "633:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Game",
                  "nameLocation": "353:4:0",
                  "nodeType": "StructDefinition",
                  "scope": 707,
                  "src": "346:305:0",
                  "visibility": "public"
                },
                {
                  "canonicalName": "DiceIt.Player",
                  "id": 51,
                  "members": [
                    {
                      "constant": false,
                      "id": 46,
                      "mutability": "mutable",
                      "name": "turn",
                      "nameLocation": "689:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 51,
                      "src": "681:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "681:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 48,
                      "mutability": "mutable",
                      "name": "score",
                      "nameLocation": "711:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 51,
                      "src": "703:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 47,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "703:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 50,
                      "mutability": "mutable",
                      "name": "stop",
                      "nameLocation": "731:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 51,
                      "src": "726:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 49,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "726:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Player",
                  "nameLocation": "664:6:0",
                  "nodeType": "StructDefinition",
                  "scope": 707,
                  "src": "657:85:0",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 54,
                  "mutability": "mutable",
                  "name": "currentGameIndex",
                  "nameLocation": "756:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 707,
                  "src": "748:28:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "748:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "30",
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "775:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "functionSelector": "117a5b90",
                  "id": 59,
                  "mutability": "mutable",
                  "name": "games",
                  "nameLocation": "814:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 707,
                  "src": "782:37:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$44_storage_$",
                    "typeString": "mapping(uint256 => struct DiceIt.Game)"
                  },
                  "typeName": {
                    "id": 58,
                    "keyType": {
                      "id": 55,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "790:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "782:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$44_storage_$",
                      "typeString": "mapping(uint256 => struct DiceIt.Game)"
                    },
                    "valueType": {
                      "id": 57,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 56,
                        "name": "Game",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 44,
                        "src": "801:4:0"
                      },
                      "referencedDeclaration": 44,
                      "src": "801:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                        "typeString": "struct DiceIt.Game"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 119,
                    "nodeType": "Block",
                    "src": "949:487:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 72,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 69,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "967:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 70,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "967:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 71,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "979:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "967:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 68,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "959:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 73,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "959:22:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 74,
                        "nodeType": "ExpressionStatement",
                        "src": "959:22:0"
                      },
                      {
                        "expression": {
                          "id": 106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 75,
                              "name": "games",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59,
                              "src": "992:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$44_storage_$",
                                "typeString": "mapping(uint256 => struct DiceIt.Game storage ref)"
                              }
                            },
                            "id": 77,
                            "indexExpression": {
                              "id": 76,
                              "name": "currentGameIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "998:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "992:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Game_$44_storage",
                              "typeString": "struct DiceIt.Game storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 79,
                                "name": "currentGameIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54,
                                "src": "1036:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 80,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1066:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 81,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1066:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 82,
                                "name": "_challenger",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61,
                                "src": "1090:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 83,
                                  "name": "Stage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14,
                                  "src": "1115:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_Stage_$14_$",
                                    "typeString": "type(enum DiceIt.Stage)"
                                  }
                                },
                                "id": 84,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "Reg",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11,
                                "src": "1115:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Stage_$14",
                                  "typeString": "enum DiceIt.Stage"
                                }
                              },
                              {
                                "id": 85,
                                "name": "_maxScore",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63,
                                "src": "1138:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 86,
                                "name": "_maxTurn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65,
                                "src": "1161:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 87,
                                  "name": "CurrentPlayer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 17,
                                  "src": "1183:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_CurrentPlayer_$17_$",
                                    "typeString": "type(enum DiceIt.CurrentPlayer)"
                                  }
                                },
                                "id": 88,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "Challenger",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 16,
                                "src": "1183:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_CurrentPlayer_$17",
                                  "typeString": "enum DiceIt.CurrentPlayer"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 90,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1228:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 91,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1231:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "66616c7365",
                                    "id": 92,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1234:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 89,
                                  "name": "Player",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51,
                                  "src": "1221:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_Player_$51_storage_ptr_$",
                                    "typeString": "type(struct DiceIt.Player storage pointer)"
                                  }
                                },
                                "id": 93,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "structConstructorCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1221:19:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Player_$51_memory_ptr",
                                  "typeString": "struct DiceIt.Player memory"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 95,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1261:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 96,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1264:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "66616c7365",
                                    "id": 97,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1267:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 94,
                                  "name": "Player",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51,
                                  "src": "1254:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_Player_$51_storage_ptr_$",
                                    "typeString": "type(struct DiceIt.Player storage pointer)"
                                  }
                                },
                                "id": 98,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "structConstructorCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1254:19:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Player_$51_memory_ptr",
                                  "typeString": "struct DiceIt.Player memory"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 101,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1295:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 100,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1287:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 99,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1287:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 102,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1287:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 103,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1311:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 104,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "1311:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_enum$_Stage_$14",
                                  "typeString": "enum DiceIt.Stage"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_enum$_CurrentPlayer_$17",
                                  "typeString": "enum DiceIt.CurrentPlayer"
                                },
                                {
                                  "typeIdentifier": "t_struct$_Player_$51_memory_ptr",
                                  "typeString": "struct DiceIt.Player memory"
                                },
                                {
                                  "typeIdentifier": "t_struct$_Player_$51_memory_ptr",
                                  "typeString": "struct DiceIt.Player memory"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 78,
                              "name": "Game",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "1018:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Game_$44_storage_ptr_$",
                                "typeString": "type(struct DiceIt.Game storage pointer)"
                              }
                            },
                            "id": 105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1018:312:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Game_$44_memory_ptr",
                              "typeString": "struct DiceIt.Game memory"
                            }
                          },
                          "src": "992:338:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Game_$44_storage",
                            "typeString": "struct DiceIt.Game storage ref"
                          }
                        },
                        "id": 107,
                        "nodeType": "ExpressionStatement",
                        "src": "992:338:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 109,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1361:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1361:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 111,
                              "name": "currentGameIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "1373:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 112,
                                "name": "Stage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14,
                                "src": "1391:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Stage_$14_$",
                                  "typeString": "type(enum DiceIt.Stage)"
                                }
                              },
                              "id": 113,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Reg",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11,
                              "src": "1391:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Stage_$14",
                                "typeString": "enum DiceIt.Stage"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_Stage_$14",
                                "typeString": "enum DiceIt.Stage"
                              }
                            ],
                            "id": 108,
                            "name": "GameStageChange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "1345:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_enum$_Stage_$14_$returns$__$",
                              "typeString": "function (address,uint256,enum DiceIt.Stage)"
                            }
                          },
                          "id": 114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1345:56:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 115,
                        "nodeType": "EmitStatement",
                        "src": "1340:61:0"
                      },
                      {
                        "expression": {
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "1411:18:0",
                          "subExpression": {
                            "id": 116,
                            "name": "currentGameIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "1411:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 118,
                        "nodeType": "ExpressionStatement",
                        "src": "1411:18:0"
                      }
                    ]
                  },
                  "functionSelector": "3b17469e",
                  "id": 120,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createGame",
                  "nameLocation": "835:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 66,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 61,
                        "mutability": "mutable",
                        "name": "_challenger",
                        "nameLocation": "863:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 120,
                        "src": "855:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 60,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "855:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 63,
                        "mutability": "mutable",
                        "name": "_maxScore",
                        "nameLocation": "892:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 120,
                        "src": "884:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 62,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "884:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 65,
                        "mutability": "mutable",
                        "name": "_maxTurn",
                        "nameLocation": "919:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 120,
                        "src": "911:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 64,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "911:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "845:88:0"
                  },
                  "returnParameters": {
                    "id": 67,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "949:0:0"
                  },
                  "scope": 707,
                  "src": "826:610:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 137,
                    "nodeType": "Block",
                    "src": "1488:65:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_Stage_$14",
                                "typeString": "enum DiceIt.Stage"
                              },
                              "id": 133,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 128,
                                    "name": "games",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59,
                                    "src": "1506:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$44_storage_$",
                                      "typeString": "mapping(uint256 => struct DiceIt.Game storage ref)"
                                    }
                                  },
                                  "id": 130,
                                  "indexExpression": {
                                    "id": 129,
                                    "name": "gameId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 122,
                                    "src": "1512:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1506:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Game_$44_storage",
                                    "typeString": "struct DiceIt.Game storage ref"
                                  }
                                },
                                "id": 131,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "stage",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 26,
                                "src": "1506:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Stage_$14",
                                  "typeString": "enum DiceIt.Stage"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 132,
                                "name": "stage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 125,
                                "src": "1529:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Stage_$14",
                                  "typeString": "enum DiceIt.Stage"
                                }
                              },
                              "src": "1506:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 127,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1498:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1498:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 135,
                        "nodeType": "ExpressionStatement",
                        "src": "1498:37:0"
                      },
                      {
                        "id": 136,
                        "nodeType": "PlaceholderStatement",
                        "src": "1545:1:0"
                      }
                    ]
                  },
                  "id": 138,
                  "name": "isStage",
                  "nameLocation": "1451:7:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 126,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 122,
                        "mutability": "mutable",
                        "name": "gameId",
                        "nameLocation": "1467:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 138,
                        "src": "1459:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 121,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1459:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 125,
                        "mutability": "mutable",
                        "name": "stage",
                        "nameLocation": "1481:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 138,
                        "src": "1475:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Stage_$14",
                          "typeString": "enum DiceIt.Stage"
                        },
                        "typeName": {
                          "id": 124,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 123,
                            "name": "Stage",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 14,
                            "src": "1475:5:0"
                          },
                          "referencedDeclaration": 14,
                          "src": "1475:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$14",
                            "typeString": "enum DiceIt.Stage"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1458:29:0"
                  },
                  "src": "1442:111:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 178,
                    "nodeType": "Block",
                    "src": "1668:184:0",
                    "statements": [
                      {
                        "assignments": [
                          150
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 150,
                            "mutability": "mutable",
                            "name": "game",
                            "nameLocation": "1691:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 178,
                            "src": "1678:17:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                              "typeString": "struct DiceIt.Game"
                            },
                            "typeName": {
                              "id": 149,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 148,
                                "name": "Game",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 44,
                                "src": "1678:4:0"
                              },
                              "referencedDeclaration": 44,
                              "src": "1678:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                "typeString": "struct DiceIt.Game"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 154,
                        "initialValue": {
                          "baseExpression": {
                            "id": 151,
                            "name": "games",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "1698:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$44_storage_$",
                              "typeString": "mapping(uint256 => struct DiceIt.Game storage ref)"
                            }
                          },
                          "id": 153,
                          "indexExpression": {
                            "id": 152,
                            "name": "gameId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "1704:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1698:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Game_$44_storage",
                            "typeString": "struct DiceIt.Game storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1678:33:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 160,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 156,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1729:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 157,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "1729:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 158,
                                  "name": "game",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 150,
                                  "src": "1742:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                    "typeString": "struct DiceIt.Game storage pointer"
                                  }
                                },
                                "id": 159,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "bet",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 43,
                                "src": "1742:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1729:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 155,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1721:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1721:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 162,
                        "nodeType": "ExpressionStatement",
                        "src": "1721:30:0"
                      },
                      {
                        "expression": {
                          "id": 168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 163,
                              "name": "game",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 150,
                              "src": "1762:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                "typeString": "struct DiceIt.Game storage pointer"
                              }
                            },
                            "id": 165,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "stage",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26,
                            "src": "1762:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Stage_$14",
                              "typeString": "enum DiceIt.Stage"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 166,
                              "name": "Stage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14,
                              "src": "1775:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Stage_$14_$",
                                "typeString": "type(enum DiceIt.Stage)"
                              }
                            },
                            "id": 167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Run",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12,
                            "src": "1775:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Stage_$14",
                              "typeString": "enum DiceIt.Stage"
                            }
                          },
                          "src": "1762:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$14",
                            "typeString": "enum DiceIt.Stage"
                          }
                        },
                        "id": 169,
                        "nodeType": "ExpressionStatement",
                        "src": "1762:22:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 171,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1815:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1815:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 173,
                              "name": "gameId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 140,
                              "src": "1827:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 174,
                                "name": "Stage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14,
                                "src": "1835:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Stage_$14_$",
                                  "typeString": "type(enum DiceIt.Stage)"
                                }
                              },
                              "id": 175,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Run",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12,
                              "src": "1835:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Stage_$14",
                                "typeString": "enum DiceIt.Stage"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_Stage_$14",
                                "typeString": "enum DiceIt.Stage"
                              }
                            ],
                            "id": 170,
                            "name": "GameStageChange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "1799:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_enum$_Stage_$14_$returns$__$",
                              "typeString": "function (address,uint256,enum DiceIt.Stage)"
                            }
                          },
                          "id": 176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1799:46:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 177,
                        "nodeType": "EmitStatement",
                        "src": "1794:51:0"
                      }
                    ]
                  },
                  "functionSelector": "87fb99f6",
                  "id": 179,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 143,
                          "name": "gameId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 140,
                          "src": "1645:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 144,
                            "name": "Stage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "1653:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stage_$14_$",
                              "typeString": "type(enum DiceIt.Stage)"
                            }
                          },
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Reg",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11,
                          "src": "1653:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$14",
                            "typeString": "enum DiceIt.Stage"
                          }
                        }
                      ],
                      "id": 146,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 142,
                        "name": "isStage",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 138,
                        "src": "1637:7:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1637:26:0"
                    }
                  ],
                  "name": "challengerBet",
                  "nameLocation": "1568:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 141,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 140,
                        "mutability": "mutable",
                        "name": "gameId",
                        "nameLocation": "1590:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 179,
                        "src": "1582:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 139,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1582:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1581:16:0"
                  },
                  "returnParameters": {
                    "id": 147,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1668:0:0"
                  },
                  "scope": 707,
                  "src": "1559:293:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 238,
                    "nodeType": "Block",
                    "src": "1912:512:0",
                    "statements": [
                      {
                        "assignments": [
                          187
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 187,
                            "mutability": "mutable",
                            "name": "game",
                            "nameLocation": "1934:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 238,
                            "src": "1922:16:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Game_$44_memory_ptr",
                              "typeString": "struct DiceIt.Game"
                            },
                            "typeName": {
                              "id": 186,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 185,
                                "name": "Game",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 44,
                                "src": "1922:4:0"
                              },
                              "referencedDeclaration": 44,
                              "src": "1922:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                "typeString": "struct DiceIt.Game"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 191,
                        "initialValue": {
                          "baseExpression": {
                            "id": 188,
                            "name": "games",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "1941:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$44_storage_$",
                              "typeString": "mapping(uint256 => struct DiceIt.Game storage ref)"
                            }
                          },
                          "id": 190,
                          "indexExpression": {
                            "id": 189,
                            "name": "gameId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 181,
                            "src": "1947:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1941:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Game_$44_storage",
                            "typeString": "struct DiceIt.Game storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1922:32:0"
                      },
                      {
                        "assignments": [
                          193
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 193,
                            "mutability": "mutable",
                            "name": "playerIndex",
                            "nameLocation": "1972:11:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 238,
                            "src": "1964:19:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 192,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1964:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 194,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1964:19:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 195,
                            "name": "player",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 183,
                            "src": "1997:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 196,
                              "name": "game",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 187,
                              "src": "2007:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Game_$44_memory_ptr",
                                "typeString": "struct DiceIt.Game memory"
                              }
                            },
                            "id": 197,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21,
                            "src": "2007:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1997:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 213,
                              "name": "player",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 183,
                              "src": "2180:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 214,
                                "name": "game",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 187,
                                "src": "2190:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Game_$44_memory_ptr",
                                  "typeString": "struct DiceIt.Game memory"
                                }
                              },
                              "id": 215,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "challenger",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23,
                              "src": "2190:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "2180:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "id": 234,
                            "nodeType": "Block",
                            "src": "2374:33:0",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 231,
                                    "name": "revert",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      -19,
                                      -19
                                    ],
                                    "referencedDeclaration": -19,
                                    "src": "2388:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 232,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2388:8:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 233,
                                "nodeType": "ExpressionStatement",
                                "src": "2388:8:0"
                              }
                            ]
                          },
                          "id": 235,
                          "nodeType": "IfStatement",
                          "src": "2176:231:0",
                          "trueBody": {
                            "id": 230,
                            "nodeType": "Block",
                            "src": "2207:161:0",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 227,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_enum$_CurrentPlayer_$17",
                                          "typeString": "enum DiceIt.CurrentPlayer"
                                        },
                                        "id": 222,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 218,
                                            "name": "CurrentPlayer",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 17,
                                            "src": "2246:13:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_enum$_CurrentPlayer_$17_$",
                                              "typeString": "type(enum DiceIt.CurrentPlayer)"
                                            }
                                          },
                                          "id": 219,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "Challenger",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 16,
                                          "src": "2246:24:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_CurrentPlayer_$17",
                                            "typeString": "enum DiceIt.CurrentPlayer"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 220,
                                            "name": "game",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 187,
                                            "src": "2274:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Game_$44_memory_ptr",
                                              "typeString": "struct DiceIt.Game memory"
                                            }
                                          },
                                          "id": 221,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "currentPlayer",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 33,
                                          "src": "2274:18:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_CurrentPlayer_$17",
                                            "typeString": "enum DiceIt.CurrentPlayer"
                                          }
                                        },
                                        "src": "2246:46:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "&&",
                                      "rightExpression": {
                                        "id": 226,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "!",
                                        "prefix": true,
                                        "src": "2316:27:0",
                                        "subExpression": {
                                          "expression": {
                                            "expression": {
                                              "id": 223,
                                              "name": "game",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 187,
                                              "src": "2317:4:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Game_$44_memory_ptr",
                                                "typeString": "struct DiceIt.Game memory"
                                              }
                                            },
                                            "id": 224,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "challengerPlayer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 39,
                                            "src": "2317:21:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Player_$51_memory_ptr",
                                              "typeString": "struct DiceIt.Player memory"
                                            }
                                          },
                                          "id": 225,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "stop",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 50,
                                          "src": "2317:26:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "2246:97:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    ],
                                    "id": 217,
                                    "name": "require",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      -18,
                                      -18
                                    ],
                                    "referencedDeclaration": -18,
                                    "src": "2221:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                      "typeString": "function (bool) pure"
                                    }
                                  },
                                  "id": 228,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2221:136:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 229,
                                "nodeType": "ExpressionStatement",
                                "src": "2221:136:0"
                              }
                            ]
                          }
                        },
                        "id": 236,
                        "nodeType": "IfStatement",
                        "src": "1993:414:0",
                        "trueBody": {
                          "id": 212,
                          "nodeType": "Block",
                          "src": "2019:151:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 209,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_enum$_CurrentPlayer_$17",
                                        "typeString": "enum DiceIt.CurrentPlayer"
                                      },
                                      "id": 204,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 200,
                                          "name": "CurrentPlayer",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 17,
                                          "src": "2058:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_enum$_CurrentPlayer_$17_$",
                                            "typeString": "type(enum DiceIt.CurrentPlayer)"
                                          }
                                        },
                                        "id": 201,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "Owner",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 15,
                                        "src": "2058:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_CurrentPlayer_$17",
                                          "typeString": "enum DiceIt.CurrentPlayer"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 202,
                                          "name": "game",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 187,
                                          "src": "2081:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Game_$44_memory_ptr",
                                            "typeString": "struct DiceIt.Game memory"
                                          }
                                        },
                                        "id": 203,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "currentPlayer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 33,
                                        "src": "2081:18:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_CurrentPlayer_$17",
                                          "typeString": "enum DiceIt.CurrentPlayer"
                                        }
                                      },
                                      "src": "2058:41:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "id": 208,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "!",
                                      "prefix": true,
                                      "src": "2123:22:0",
                                      "subExpression": {
                                        "expression": {
                                          "expression": {
                                            "id": 205,
                                            "name": "game",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 187,
                                            "src": "2124:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Game_$44_memory_ptr",
                                              "typeString": "struct DiceIt.Game memory"
                                            }
                                          },
                                          "id": 206,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "ownerPlayer",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 36,
                                          "src": "2124:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Player_$51_memory_ptr",
                                            "typeString": "struct DiceIt.Player memory"
                                          }
                                        },
                                        "id": 207,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "stop",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 50,
                                        "src": "2124:21:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "2058:87:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 199,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "2033:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                    "typeString": "function (bool) pure"
                                  }
                                },
                                "id": 210,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2033:126:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 211,
                              "nodeType": "ExpressionStatement",
                              "src": "2033:126:0"
                            }
                          ]
                        }
                      },
                      {
                        "id": 237,
                        "nodeType": "PlaceholderStatement",
                        "src": "2416:1:0"
                      }
                    ]
                  },
                  "id": 239,
                  "name": "isPlayerTurn",
                  "nameLocation": "1867:12:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 184,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 181,
                        "mutability": "mutable",
                        "name": "gameId",
                        "nameLocation": "1888:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 239,
                        "src": "1880:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 180,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1880:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 183,
                        "mutability": "mutable",
                        "name": "player",
                        "nameLocation": "1904:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 239,
                        "src": "1896:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 182,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1896:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1879:32:0"
                  },
                  "src": "1858:566:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 464,
                    "nodeType": "Block",
                    "src": "2586:1496:0",
                    "statements": [
                      {
                        "assignments": [
                          257
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 257,
                            "mutability": "mutable",
                            "name": "randomInt",
                            "nameLocation": "2604:9:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 464,
                            "src": "2596:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 256,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2596:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 260,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 258,
                            "name": "random",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 493,
                            "src": "2616:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2616:8:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2596:28:0"
                      },
                      {
                        "assignments": [
                          263
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 263,
                            "mutability": "mutable",
                            "name": "game",
                            "nameLocation": "2647:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 464,
                            "src": "2634:17:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                              "typeString": "struct DiceIt.Game"
                            },
                            "typeName": {
                              "id": 262,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 261,
                                "name": "Game",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 44,
                                "src": "2634:4:0"
                              },
                              "referencedDeclaration": 44,
                              "src": "2634:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                "typeString": "struct DiceIt.Game"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 267,
                        "initialValue": {
                          "baseExpression": {
                            "id": 264,
                            "name": "games",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "2654:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$44_storage_$",
                              "typeString": "mapping(uint256 => struct DiceIt.Game storage ref)"
                            }
                          },
                          "id": 266,
                          "indexExpression": {
                            "id": 265,
                            "name": "gameId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 241,
                            "src": "2660:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2654:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Game_$44_storage",
                            "typeString": "struct DiceIt.Game storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2634:33:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 268,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2681:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 269,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2681:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 270,
                              "name": "game",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 263,
                              "src": "2695:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                "typeString": "struct DiceIt.Game storage pointer"
                              }
                            },
                            "id": 271,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21,
                            "src": "2695:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2681:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 328,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3132:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 329,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3132:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 330,
                                "name": "game",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 263,
                                "src": "3146:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                  "typeString": "struct DiceIt.Game storage pointer"
                                }
                              },
                              "id": 331,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "challenger",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23,
                              "src": "3146:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "3132:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 388,
                          "nodeType": "IfStatement",
                          "src": "3128:464:0",
                          "trueBody": {
                            "id": 387,
                            "nodeType": "Block",
                            "src": "3163:429:0",
                            "statements": [
                              {
                                "condition": {
                                  "id": 333,
                                  "name": "draw",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 243,
                                  "src": "3181:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 342,
                                "nodeType": "IfStatement",
                                "src": "3177:50:0",
                                "trueBody": {
                                  "expression": {
                                    "id": 340,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "expression": {
                                        "expression": {
                                          "id": 334,
                                          "name": "game",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 263,
                                          "src": "3187:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                            "typeString": "struct DiceIt.Game storage pointer"
                                          }
                                        },
                                        "id": 337,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "challengerPlayer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 39,
                                        "src": "3187:21:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Player_$51_storage",
                                          "typeString": "struct DiceIt.Player storage ref"
                                        }
                                      },
                                      "id": 338,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "memberName": "score",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 48,
                                      "src": "3187:27:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "id": 339,
                                      "name": "randomInt",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 257,
                                      "src": "3218:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "3187:40:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 341,
                                  "nodeType": "ExpressionStatement",
                                  "src": "3187:40:0"
                                }
                              },
                              {
                                "expression": {
                                  "id": 348,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "3241:28:0",
                                  "subExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 343,
                                        "name": "game",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 263,
                                        "src": "3241:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                          "typeString": "struct DiceIt.Game storage pointer"
                                        }
                                      },
                                      "id": 346,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "challengerPlayer",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 39,
                                      "src": "3241:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Player_$51_storage",
                                        "typeString": "struct DiceIt.Player storage ref"
                                      }
                                    },
                                    "id": 347,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "memberName": "turn",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 46,
                                    "src": "3241:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 349,
                                "nodeType": "ExpressionStatement",
                                "src": "3241:28:0"
                              },
                              {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 365,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 358,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 351,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "!",
                                      "prefix": true,
                                      "src": "3305:5:0",
                                      "subExpression": {
                                        "id": 350,
                                        "name": "draw",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 243,
                                        "src": "3306:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 357,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "expression": {
                                            "id": 352,
                                            "name": "game",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 263,
                                            "src": "3330:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                              "typeString": "struct DiceIt.Game storage pointer"
                                            }
                                          },
                                          "id": 353,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "challengerPlayer",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 39,
                                          "src": "3330:21:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Player_$51_storage",
                                            "typeString": "struct DiceIt.Player storage ref"
                                          }
                                        },
                                        "id": 354,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "score",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 48,
                                        "src": "3330:27:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 355,
                                          "name": "game",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 263,
                                          "src": "3360:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                            "typeString": "struct DiceIt.Game storage pointer"
                                          }
                                        },
                                        "id": 356,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "maxScore",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 28,
                                        "src": "3360:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "3330:43:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "3305:68:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 364,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 359,
                                          "name": "game",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 263,
                                          "src": "3393:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                            "typeString": "struct DiceIt.Game storage pointer"
                                          }
                                        },
                                        "id": 360,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "challengerPlayer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 39,
                                        "src": "3393:21:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Player_$51_storage",
                                          "typeString": "struct DiceIt.Player storage ref"
                                        }
                                      },
                                      "id": 361,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "turn",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 46,
                                      "src": "3393:26:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">=",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 362,
                                        "name": "game",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 263,
                                        "src": "3423:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                          "typeString": "struct DiceIt.Game storage pointer"
                                        }
                                      },
                                      "id": 363,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "maxTurn",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 30,
                                      "src": "3423:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "3393:42:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "3305:130:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 374,
                                "nodeType": "IfStatement",
                                "src": "3284:199:0",
                                "trueBody": {
                                  "expression": {
                                    "id": 372,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "expression": {
                                        "expression": {
                                          "id": 366,
                                          "name": "game",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 263,
                                          "src": "3450:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                            "typeString": "struct DiceIt.Game storage pointer"
                                          }
                                        },
                                        "id": 369,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "challengerPlayer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 39,
                                        "src": "3450:21:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Player_$51_storage",
                                          "typeString": "struct DiceIt.Player storage ref"
                                        }
                                      },
                                      "id": 370,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "memberName": "stop",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 50,
                                      "src": "3450:26:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "hexValue": "74727565",
                                      "id": 371,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3479:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "true"
                                    },
                                    "src": "3450:33:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 373,
                                  "nodeType": "ExpressionStatement",
                                  "src": "3450:33:0"
                                }
                              },
                              {
                                "condition": {
                                  "id": 378,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "!",
                                  "prefix": true,
                                  "src": "3501:22:0",
                                  "subExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 375,
                                        "name": "game",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 263,
                                        "src": "3502:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                          "typeString": "struct DiceIt.Game storage pointer"
                                        }
                                      },
                                      "id": 376,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "ownerPlayer",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 36,
                                      "src": "3502:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Player_$51_storage",
                                        "typeString": "struct DiceIt.Player storage ref"
                                      }
                                    },
                                    "id": 377,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "stop",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 50,
                                    "src": "3502:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 386,
                                "nodeType": "IfStatement",
                                "src": "3497:84:0",
                                "trueBody": {
                                  "expression": {
                                    "id": 384,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "expression": {
                                        "id": 379,
                                        "name": "game",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 263,
                                        "src": "3541:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                          "typeString": "struct DiceIt.Game storage pointer"
                                        }
                                      },
                                      "id": 381,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "memberName": "currentPlayer",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 33,
                                      "src": "3541:18:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_CurrentPlayer_$17",
                                        "typeString": "enum DiceIt.CurrentPlayer"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "expression": {
                                        "id": 382,
                                        "name": "CurrentPlayer",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 17,
                                        "src": "3562:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_CurrentPlayer_$17_$",
                                          "typeString": "type(enum DiceIt.CurrentPlayer)"
                                        }
                                      },
                                      "id": 383,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "Owner",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 15,
                                      "src": "3562:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_CurrentPlayer_$17",
                                        "typeString": "enum DiceIt.CurrentPlayer"
                                      }
                                    },
                                    "src": "3541:40:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_CurrentPlayer_$17",
                                      "typeString": "enum DiceIt.CurrentPlayer"
                                    }
                                  },
                                  "id": 385,
                                  "nodeType": "ExpressionStatement",
                                  "src": "3541:40:0"
                                }
                              }
                            ]
                          }
                        },
                        "id": 389,
                        "nodeType": "IfStatement",
                        "src": "2677:915:0",
                        "trueBody": {
                          "id": 327,
                          "nodeType": "Block",
                          "src": "2707:415:0",
                          "statements": [
                            {
                              "condition": {
                                "id": 273,
                                "name": "draw",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 243,
                                "src": "2725:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 282,
                              "nodeType": "IfStatement",
                              "src": "2721:45:0",
                              "trueBody": {
                                "expression": {
                                  "id": 280,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "expression": {
                                      "expression": {
                                        "id": 274,
                                        "name": "game",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 263,
                                        "src": "2731:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                          "typeString": "struct DiceIt.Game storage pointer"
                                        }
                                      },
                                      "id": 277,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "ownerPlayer",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 36,
                                      "src": "2731:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Player_$51_storage",
                                        "typeString": "struct DiceIt.Player storage ref"
                                      }
                                    },
                                    "id": 278,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "memberName": "score",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 48,
                                    "src": "2731:22:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "+=",
                                  "rightHandSide": {
                                    "id": 279,
                                    "name": "randomInt",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 257,
                                    "src": "2757:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2731:35:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 281,
                                "nodeType": "ExpressionStatement",
                                "src": "2731:35:0"
                              }
                            },
                            {
                              "expression": {
                                "id": 288,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "2780:23:0",
                                "subExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 283,
                                      "name": "game",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 263,
                                      "src": "2780:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                        "typeString": "struct DiceIt.Game storage pointer"
                                      }
                                    },
                                    "id": 286,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "ownerPlayer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 36,
                                    "src": "2780:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Player_$51_storage",
                                      "typeString": "struct DiceIt.Player storage ref"
                                    }
                                  },
                                  "id": 287,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "turn",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46,
                                  "src": "2780:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 289,
                              "nodeType": "ExpressionStatement",
                              "src": "2780:23:0"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 305,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 298,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 291,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "!",
                                    "prefix": true,
                                    "src": "2839:5:0",
                                    "subExpression": {
                                      "id": 290,
                                      "name": "draw",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 243,
                                      "src": "2840:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 297,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 292,
                                          "name": "game",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 263,
                                          "src": "2864:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                            "typeString": "struct DiceIt.Game storage pointer"
                                          }
                                        },
                                        "id": 293,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "ownerPlayer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 36,
                                        "src": "2864:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Player_$51_storage",
                                          "typeString": "struct DiceIt.Player storage ref"
                                        }
                                      },
                                      "id": 294,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "score",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 48,
                                      "src": "2864:22:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 295,
                                        "name": "game",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 263,
                                        "src": "2889:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                          "typeString": "struct DiceIt.Game storage pointer"
                                        }
                                      },
                                      "id": 296,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "maxScore",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 28,
                                      "src": "2889:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "2864:38:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "2839:63:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 304,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 299,
                                        "name": "game",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 263,
                                        "src": "2922:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                          "typeString": "struct DiceIt.Game storage pointer"
                                        }
                                      },
                                      "id": 300,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "ownerPlayer",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 36,
                                      "src": "2922:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Player_$51_storage",
                                        "typeString": "struct DiceIt.Player storage ref"
                                      }
                                    },
                                    "id": 301,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "turn",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 46,
                                    "src": "2922:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">=",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 302,
                                      "name": "game",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 263,
                                      "src": "2947:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                        "typeString": "struct DiceIt.Game storage pointer"
                                      }
                                    },
                                    "id": 303,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "maxTurn",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 30,
                                    "src": "2947:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2922:37:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "2839:120:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 314,
                              "nodeType": "IfStatement",
                              "src": "2818:184:0",
                              "trueBody": {
                                "expression": {
                                  "id": 312,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "expression": {
                                      "expression": {
                                        "id": 306,
                                        "name": "game",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 263,
                                        "src": "2974:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                          "typeString": "struct DiceIt.Game storage pointer"
                                        }
                                      },
                                      "id": 309,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "ownerPlayer",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 36,
                                      "src": "2974:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Player_$51_storage",
                                        "typeString": "struct DiceIt.Player storage ref"
                                      }
                                    },
                                    "id": 310,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "memberName": "stop",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 50,
                                    "src": "2974:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "hexValue": "74727565",
                                    "id": 311,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2998:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  },
                                  "src": "2974:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 313,
                                "nodeType": "ExpressionStatement",
                                "src": "2974:28:0"
                              }
                            },
                            {
                              "condition": {
                                "id": 318,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "3021:27:0",
                                "subExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 315,
                                      "name": "game",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 263,
                                      "src": "3022:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                        "typeString": "struct DiceIt.Game storage pointer"
                                      }
                                    },
                                    "id": 316,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "challengerPlayer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 39,
                                    "src": "3022:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Player_$51_storage",
                                      "typeString": "struct DiceIt.Player storage ref"
                                    }
                                  },
                                  "id": 317,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "stop",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 50,
                                  "src": "3022:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 326,
                              "nodeType": "IfStatement",
                              "src": "3017:94:0",
                              "trueBody": {
                                "expression": {
                                  "id": 324,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "expression": {
                                      "id": 319,
                                      "name": "game",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 263,
                                      "src": "3066:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                        "typeString": "struct DiceIt.Game storage pointer"
                                      }
                                    },
                                    "id": 321,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "memberName": "currentPlayer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 33,
                                    "src": "3066:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_CurrentPlayer_$17",
                                      "typeString": "enum DiceIt.CurrentPlayer"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "expression": {
                                      "id": 322,
                                      "name": "CurrentPlayer",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 17,
                                      "src": "3087:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_CurrentPlayer_$17_$",
                                        "typeString": "type(enum DiceIt.CurrentPlayer)"
                                      }
                                    },
                                    "id": 323,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "Challenger",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 16,
                                    "src": "3087:24:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_CurrentPlayer_$17",
                                      "typeString": "enum DiceIt.CurrentPlayer"
                                    }
                                  },
                                  "src": "3066:45:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_CurrentPlayer_$17",
                                    "typeString": "enum DiceIt.CurrentPlayer"
                                  }
                                },
                                "id": 325,
                                "nodeType": "ExpressionStatement",
                                "src": "3066:45:0"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 390,
                                "name": "game",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 263,
                                "src": "3606:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                  "typeString": "struct DiceIt.Game storage pointer"
                                }
                              },
                              "id": 391,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerPlayer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36,
                              "src": "3606:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Player_$51_storage",
                                "typeString": "struct DiceIt.Player storage ref"
                              }
                            },
                            "id": 392,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stop",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50,
                            "src": "3606:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 393,
                                "name": "game",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 263,
                                "src": "3631:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                  "typeString": "struct DiceIt.Game storage pointer"
                                }
                              },
                              "id": 394,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "challengerPlayer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 39,
                              "src": "3631:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Player_$51_storage",
                                "typeString": "struct DiceIt.Player storage ref"
                              }
                            },
                            "id": 395,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stop",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50,
                            "src": "3631:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3606:51:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 463,
                        "nodeType": "IfStatement",
                        "src": "3602:474:0",
                        "trueBody": {
                          "id": 462,
                          "nodeType": "Block",
                          "src": "3659:417:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 402,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 397,
                                    "name": "game",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 263,
                                    "src": "3673:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                      "typeString": "struct DiceIt.Game storage pointer"
                                    }
                                  },
                                  "id": 399,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "stage",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 26,
                                  "src": "3673:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Stage_$14",
                                    "typeString": "enum DiceIt.Stage"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 400,
                                    "name": "Stage",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14,
                                    "src": "3686:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Stage_$14_$",
                                      "typeString": "type(enum DiceIt.Stage)"
                                    }
                                  },
                                  "id": 401,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "Done",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13,
                                  "src": "3686:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Stage_$14",
                                    "typeString": "enum DiceIt.Stage"
                                  }
                                },
                                "src": "3673:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Stage_$14",
                                  "typeString": "enum DiceIt.Stage"
                                }
                              },
                              "id": 403,
                              "nodeType": "ExpressionStatement",
                              "src": "3673:23:0"
                            },
                            {
                              "expression": {
                                "id": 410,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 404,
                                    "name": "game",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 263,
                                    "src": "3710:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                      "typeString": "struct DiceIt.Game storage pointer"
                                    }
                                  },
                                  "id": 406,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "winner",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 41,
                                  "src": "3710:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 408,
                                      "name": "gameId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 241,
                                      "src": "3734:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 407,
                                    "name": "setWinner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 589,
                                    "src": "3724:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                      "typeString": "function (uint256) view returns (address)"
                                    }
                                  },
                                  "id": 409,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3724:17:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "3710:31:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 411,
                              "nodeType": "ExpressionStatement",
                              "src": "3710:31:0"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 418,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 412,
                                    "name": "game",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 263,
                                    "src": "3760:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                      "typeString": "struct DiceIt.Game storage pointer"
                                    }
                                  },
                                  "id": 413,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "winner",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 41,
                                  "src": "3760:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 416,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3783:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 415,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3775:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 414,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3775:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 417,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3775:10:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "3760:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 452,
                                "nodeType": "Block",
                                "src": "3925:75:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 449,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 446,
                                              "name": "game",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 263,
                                              "src": "3972:4:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                                "typeString": "struct DiceIt.Game storage pointer"
                                              }
                                            },
                                            "id": 447,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "bet",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 43,
                                            "src": "3972:8:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "hexValue": "32",
                                            "id": 448,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3983:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_2_by_1",
                                              "typeString": "int_const 2"
                                            },
                                            "value": "2"
                                          },
                                          "src": "3972:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "expression": {
                                                "id": 442,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -15,
                                                "src": "3951:3:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 443,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "src": "3951:10:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 441,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "3943:8:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_payable_$",
                                              "typeString": "type(address payable)"
                                            },
                                            "typeName": {
                                              "id": 440,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "3943:8:0",
                                              "stateMutability": "payable",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 444,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3943:19:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                          }
                                        },
                                        "id": 445,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "transfer",
                                        "nodeType": "MemberAccess",
                                        "src": "3943:28:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                          "typeString": "function (uint256)"
                                        }
                                      },
                                      "id": 450,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3943:42:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 451,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3943:42:0"
                                  }
                                ]
                              },
                              "id": 453,
                              "nodeType": "IfStatement",
                              "src": "3756:244:0",
                              "trueBody": {
                                "id": 439,
                                "nodeType": "Block",
                                "src": "3787:132:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 425,
                                            "name": "game",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 263,
                                            "src": "3834:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                              "typeString": "struct DiceIt.Game storage pointer"
                                            }
                                          },
                                          "id": 426,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "bet",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 43,
                                          "src": "3834:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "expression": {
                                                "id": 421,
                                                "name": "game",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 263,
                                                "src": "3813:4:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                                  "typeString": "struct DiceIt.Game storage pointer"
                                                }
                                              },
                                              "id": 422,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "owner",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 21,
                                              "src": "3813:10:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 420,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "3805:8:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_payable_$",
                                              "typeString": "type(address payable)"
                                            },
                                            "typeName": {
                                              "id": 419,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "3805:8:0",
                                              "stateMutability": "payable",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 423,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3805:19:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                          }
                                        },
                                        "id": 424,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "transfer",
                                        "nodeType": "MemberAccess",
                                        "src": "3805:28:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                          "typeString": "function (uint256)"
                                        }
                                      },
                                      "id": 427,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3805:38:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 428,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3805:38:0"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 435,
                                            "name": "game",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 263,
                                            "src": "3895:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                              "typeString": "struct DiceIt.Game storage pointer"
                                            }
                                          },
                                          "id": 436,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "bet",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 43,
                                          "src": "3895:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "expression": {
                                                "id": 431,
                                                "name": "game",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 263,
                                                "src": "3869:4:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                                  "typeString": "struct DiceIt.Game storage pointer"
                                                }
                                              },
                                              "id": 432,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "challenger",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 23,
                                              "src": "3869:15:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 430,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "3861:8:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_payable_$",
                                              "typeString": "type(address payable)"
                                            },
                                            "typeName": {
                                              "id": 429,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "3861:8:0",
                                              "stateMutability": "payable",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 433,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3861:24:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                          }
                                        },
                                        "id": 434,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "transfer",
                                        "nodeType": "MemberAccess",
                                        "src": "3861:33:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                          "typeString": "function (uint256)"
                                        }
                                      },
                                      "id": 437,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3861:43:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 438,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3861:43:0"
                                  }
                                ]
                              }
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 455,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "4034:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 456,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "4034:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 457,
                                    "name": "gameId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 241,
                                    "src": "4046:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 458,
                                      "name": "Stage",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 14,
                                      "src": "4054:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_Stage_$14_$",
                                        "typeString": "type(enum DiceIt.Stage)"
                                      }
                                    },
                                    "id": 459,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "Done",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 13,
                                    "src": "4054:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Stage_$14",
                                      "typeString": "enum DiceIt.Stage"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_enum$_Stage_$14",
                                      "typeString": "enum DiceIt.Stage"
                                    }
                                  ],
                                  "id": 454,
                                  "name": "GameStageChange",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10,
                                  "src": "4018:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_enum$_Stage_$14_$returns$__$",
                                    "typeString": "function (address,uint256,enum DiceIt.Stage)"
                                  }
                                },
                                "id": 460,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4018:47:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 461,
                              "nodeType": "EmitStatement",
                              "src": "4013:52:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "2d76375d",
                  "id": 465,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 246,
                          "name": "gameId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 241,
                          "src": "2522:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 247,
                            "name": "Stage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "2530:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stage_$14_$",
                              "typeString": "type(enum DiceIt.Stage)"
                            }
                          },
                          "id": 248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Run",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12,
                          "src": "2530:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$14",
                            "typeString": "enum DiceIt.Stage"
                          }
                        }
                      ],
                      "id": 249,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 245,
                        "name": "isStage",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 138,
                        "src": "2514:7:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2514:26:0"
                    },
                    {
                      "arguments": [
                        {
                          "id": 251,
                          "name": "gameId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 241,
                          "src": "2562:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 252,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2570:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2570:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 254,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 250,
                        "name": "isPlayerTurn",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 239,
                        "src": "2549:12:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2549:32:0"
                    }
                  ],
                  "name": "playTurn",
                  "nameLocation": "2439:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 244,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 241,
                        "mutability": "mutable",
                        "name": "gameId",
                        "nameLocation": "2456:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 465,
                        "src": "2448:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 240,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2448:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 243,
                        "mutability": "mutable",
                        "name": "draw",
                        "nameLocation": "2469:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 465,
                        "src": "2464:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 242,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2464:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2447:27:0"
                  },
                  "returnParameters": {
                    "id": 255,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2586:0:0"
                  },
                  "scope": 707,
                  "src": "2430:1652:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 492,
                    "nodeType": "Block",
                    "src": "4235:291:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 487,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "expression": {
                                                "id": 475,
                                                "name": "block",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -4,
                                                "src": "4363:5:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_block",
                                                  "typeString": "block"
                                                }
                                              },
                                              "id": 476,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "difficulty",
                                              "nodeType": "MemberAccess",
                                              "src": "4363:16:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            {
                                              "expression": {
                                                "id": 477,
                                                "name": "block",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -4,
                                                "src": "4405:5:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_block",
                                                  "typeString": "block"
                                                }
                                              },
                                              "id": 478,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "timestamp",
                                              "nodeType": "MemberAccess",
                                              "src": "4405:15:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "hexValue": "36",
                                                  "id": 481,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "4454:1:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_6_by_1",
                                                    "typeString": "int_const 6"
                                                  },
                                                  "value": "6"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_rational_6_by_1",
                                                    "typeString": "int_const 6"
                                                  }
                                                ],
                                                "id": 480,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "4446:7:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_uint256_$",
                                                  "typeString": "type(uint256)"
                                                },
                                                "typeName": {
                                                  "id": 479,
                                                  "name": "uint256",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "4446:7:0",
                                                  "typeDescriptions": {}
                                                }
                                              },
                                              "id": 482,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "4446:10:0",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "id": 473,
                                              "name": "abi",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -1,
                                              "src": "4321:3:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_abi",
                                                "typeString": "abi"
                                              }
                                            },
                                            "id": 474,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "encodePacked",
                                            "nodeType": "MemberAccess",
                                            "src": "4321:16:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                              "typeString": "function () pure returns (bytes memory)"
                                            }
                                          },
                                          "id": 483,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "4321:157:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        ],
                                        "id": 472,
                                        "name": "keccak256",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -8,
                                        "src": "4290:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                          "typeString": "function (bytes memory) pure returns (bytes32)"
                                        }
                                      },
                                      "id": 484,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4290:206:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "id": 471,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4265:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 470,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4265:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 485,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4265:245:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "%",
                                "rightExpression": {
                                  "hexValue": "36",
                                  "id": 486,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4513:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_6_by_1",
                                    "typeString": "int_const 6"
                                  },
                                  "value": "6"
                                },
                                "src": "4265:249:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 488,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4264:251:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4518:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "4264:255:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 469,
                        "id": 491,
                        "nodeType": "Return",
                        "src": "4245:274:0"
                      }
                    ]
                  },
                  "id": 493,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "random",
                  "nameLocation": "4195:6:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 466,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4201:2:0"
                  },
                  "returnParameters": {
                    "id": 469,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 468,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 493,
                        "src": "4226:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 467,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4226:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4225:9:0"
                  },
                  "scope": 707,
                  "src": "4186:340:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 588,
                    "nodeType": "Block",
                    "src": "4668:729:0",
                    "statements": [
                      {
                        "assignments": [
                          507
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 507,
                            "mutability": "mutable",
                            "name": "game",
                            "nameLocation": "4690:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 588,
                            "src": "4678:16:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Game_$44_memory_ptr",
                              "typeString": "struct DiceIt.Game"
                            },
                            "typeName": {
                              "id": 506,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 505,
                                "name": "Game",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 44,
                                "src": "4678:4:0"
                              },
                              "referencedDeclaration": 44,
                              "src": "4678:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                "typeString": "struct DiceIt.Game"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 511,
                        "initialValue": {
                          "baseExpression": {
                            "id": 508,
                            "name": "games",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "4697:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$44_storage_$",
                              "typeString": "mapping(uint256 => struct DiceIt.Game storage ref)"
                            }
                          },
                          "id": 510,
                          "indexExpression": {
                            "id": 509,
                            "name": "gameId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 495,
                            "src": "4703:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4697:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Game_$44_storage",
                            "typeString": "struct DiceIt.Game storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4678:32:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 524,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 517,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 512,
                                        "name": "game",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 507,
                                        "src": "4739:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Game_$44_memory_ptr",
                                          "typeString": "struct DiceIt.Game memory"
                                        }
                                      },
                                      "id": 513,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "ownerPlayer",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 36,
                                      "src": "4739:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Player_$51_memory_ptr",
                                        "typeString": "struct DiceIt.Player memory"
                                      }
                                    },
                                    "id": 514,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "score",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 48,
                                    "src": "4739:22:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<=",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 515,
                                      "name": "game",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 507,
                                      "src": "4765:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Game_$44_memory_ptr",
                                        "typeString": "struct DiceIt.Game memory"
                                      }
                                    },
                                    "id": 516,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "maxScore",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 28,
                                    "src": "4765:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4739:39:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 523,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 518,
                                        "name": "game",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 507,
                                        "src": "4798:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Game_$44_memory_ptr",
                                          "typeString": "struct DiceIt.Game memory"
                                        }
                                      },
                                      "id": 519,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "challengerPlayer",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 39,
                                      "src": "4798:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Player_$51_memory_ptr",
                                        "typeString": "struct DiceIt.Player memory"
                                      }
                                    },
                                    "id": 520,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "score",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 48,
                                    "src": "4798:27:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 521,
                                      "name": "game",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 507,
                                      "src": "4828:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Game_$44_memory_ptr",
                                        "typeString": "struct DiceIt.Game memory"
                                      }
                                    },
                                    "id": 522,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "maxScore",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 28,
                                    "src": "4828:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4798:43:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "4739:102:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 525,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4738:104:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 539,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 531,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 526,
                                        "name": "game",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 507,
                                        "src": "4859:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Game_$44_memory_ptr",
                                          "typeString": "struct DiceIt.Game memory"
                                        }
                                      },
                                      "id": 527,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "ownerPlayer",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 36,
                                      "src": "4859:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Player_$51_memory_ptr",
                                        "typeString": "struct DiceIt.Player memory"
                                      }
                                    },
                                    "id": 528,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "score",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 48,
                                    "src": "4859:22:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<=",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 529,
                                      "name": "game",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 507,
                                      "src": "4885:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Game_$44_memory_ptr",
                                        "typeString": "struct DiceIt.Game memory"
                                      }
                                    },
                                    "id": 530,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "maxScore",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 28,
                                    "src": "4885:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4859:39:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 538,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 532,
                                        "name": "game",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 507,
                                        "src": "4918:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Game_$44_memory_ptr",
                                          "typeString": "struct DiceIt.Game memory"
                                        }
                                      },
                                      "id": 533,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "ownerPlayer",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 36,
                                      "src": "4918:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Player_$51_memory_ptr",
                                        "typeString": "struct DiceIt.Player memory"
                                      }
                                    },
                                    "id": 534,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "score",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 48,
                                    "src": "4918:22:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 535,
                                        "name": "game",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 507,
                                        "src": "4943:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Game_$44_memory_ptr",
                                          "typeString": "struct DiceIt.Game memory"
                                        }
                                      },
                                      "id": 536,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "challengerPlayer",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 39,
                                      "src": "4943:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Player_$51_memory_ptr",
                                        "typeString": "struct DiceIt.Player memory"
                                      }
                                    },
                                    "id": 537,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "score",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 48,
                                    "src": "4943:27:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4918:52:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "4859:111:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 540,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4858:113:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4738:233:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 558,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 551,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 546,
                                          "name": "game",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 507,
                                          "src": "5048:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Game_$44_memory_ptr",
                                            "typeString": "struct DiceIt.Game memory"
                                          }
                                        },
                                        "id": 547,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "challengerPlayer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 39,
                                        "src": "5048:21:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Player_$51_memory_ptr",
                                          "typeString": "struct DiceIt.Player memory"
                                        }
                                      },
                                      "id": 548,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "score",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 48,
                                      "src": "5048:27:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<=",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 549,
                                        "name": "game",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 507,
                                        "src": "5079:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Game_$44_memory_ptr",
                                          "typeString": "struct DiceIt.Game memory"
                                        }
                                      },
                                      "id": 550,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "maxScore",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 28,
                                      "src": "5079:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5048:44:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 557,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 552,
                                          "name": "game",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 507,
                                          "src": "5112:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Game_$44_memory_ptr",
                                            "typeString": "struct DiceIt.Game memory"
                                          }
                                        },
                                        "id": 553,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "ownerPlayer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 36,
                                        "src": "5112:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Player_$51_memory_ptr",
                                          "typeString": "struct DiceIt.Player memory"
                                        }
                                      },
                                      "id": 554,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "score",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 48,
                                      "src": "5112:22:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 555,
                                        "name": "game",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 507,
                                        "src": "5137:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Game_$44_memory_ptr",
                                          "typeString": "struct DiceIt.Game memory"
                                        }
                                      },
                                      "id": 556,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "maxScore",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 28,
                                      "src": "5137:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5112:38:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "5048:102:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 559,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5047:104:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 573,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 565,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 560,
                                          "name": "game",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 507,
                                          "src": "5168:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Game_$44_memory_ptr",
                                            "typeString": "struct DiceIt.Game memory"
                                          }
                                        },
                                        "id": 561,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "challengerPlayer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 39,
                                        "src": "5168:21:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Player_$51_memory_ptr",
                                          "typeString": "struct DiceIt.Player memory"
                                        }
                                      },
                                      "id": 562,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "score",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 48,
                                      "src": "5168:27:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<=",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 563,
                                        "name": "game",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 507,
                                        "src": "5199:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Game_$44_memory_ptr",
                                          "typeString": "struct DiceIt.Game memory"
                                        }
                                      },
                                      "id": 564,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "maxScore",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 28,
                                      "src": "5199:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5168:44:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 572,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 566,
                                          "name": "game",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 507,
                                          "src": "5232:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Game_$44_memory_ptr",
                                            "typeString": "struct DiceIt.Game memory"
                                          }
                                        },
                                        "id": 567,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "ownerPlayer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 36,
                                        "src": "5232:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Player_$51_memory_ptr",
                                          "typeString": "struct DiceIt.Player memory"
                                        }
                                      },
                                      "id": 568,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "score",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 48,
                                      "src": "5232:22:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 569,
                                          "name": "game",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 507,
                                          "src": "5257:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Game_$44_memory_ptr",
                                            "typeString": "struct DiceIt.Game memory"
                                          }
                                        },
                                        "id": 570,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "challengerPlayer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 39,
                                        "src": "5257:21:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Player_$51_memory_ptr",
                                          "typeString": "struct DiceIt.Player memory"
                                        }
                                      },
                                      "id": 571,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "score",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 48,
                                      "src": "5257:27:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5232:52:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "5168:116:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 574,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5167:118:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "5047:238:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "id": 585,
                            "nodeType": "Block",
                            "src": "5349:42:0",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 582,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5378:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 581,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5370:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 580,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5370:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 583,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5370:10:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "functionReturnParameters": 504,
                                "id": 584,
                                "nodeType": "Return",
                                "src": "5363:17:0"
                              }
                            ]
                          },
                          "id": 586,
                          "nodeType": "IfStatement",
                          "src": "5030:361:0",
                          "trueBody": {
                            "id": 579,
                            "nodeType": "Block",
                            "src": "5296:47:0",
                            "statements": [
                              {
                                "expression": {
                                  "expression": {
                                    "id": 576,
                                    "name": "game",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 507,
                                    "src": "5317:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Game_$44_memory_ptr",
                                      "typeString": "struct DiceIt.Game memory"
                                    }
                                  },
                                  "id": 577,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "challenger",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 23,
                                  "src": "5317:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "functionReturnParameters": 504,
                                "id": 578,
                                "nodeType": "Return",
                                "src": "5310:22:0"
                              }
                            ]
                          }
                        },
                        "id": 587,
                        "nodeType": "IfStatement",
                        "src": "4721:670:0",
                        "trueBody": {
                          "id": 545,
                          "nodeType": "Block",
                          "src": "4982:42:0",
                          "statements": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 542,
                                  "name": "game",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 507,
                                  "src": "5003:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Game_$44_memory_ptr",
                                    "typeString": "struct DiceIt.Game memory"
                                  }
                                },
                                "id": 543,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "owner",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 21,
                                "src": "5003:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "functionReturnParameters": 504,
                              "id": 544,
                              "nodeType": "Return",
                              "src": "4996:17:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "0df71602",
                  "id": 589,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 498,
                          "name": "gameId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 495,
                          "src": "4611:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 499,
                            "name": "Stage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "4619:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stage_$14_$",
                              "typeString": "type(enum DiceIt.Stage)"
                            }
                          },
                          "id": 500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Done",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "4619:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stage_$14",
                            "typeString": "enum DiceIt.Stage"
                          }
                        }
                      ],
                      "id": 501,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 497,
                        "name": "isStage",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 138,
                        "src": "4603:7:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4603:27:0"
                    }
                  ],
                  "name": "setWinner",
                  "nameLocation": "4541:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 496,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 495,
                        "mutability": "mutable",
                        "name": "gameId",
                        "nameLocation": "4559:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 589,
                        "src": "4551:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 494,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4551:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4550:16:0"
                  },
                  "returnParameters": {
                    "id": 504,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 503,
                        "mutability": "mutable",
                        "name": "winner",
                        "nameLocation": "4656:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 589,
                        "src": "4648:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 502,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4648:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4647:16:0"
                  },
                  "scope": 707,
                  "src": "4532:865:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 705,
                    "nodeType": "Block",
                    "src": "5472:845:0",
                    "statements": [
                      {
                        "assignments": [
                          597
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 597,
                            "mutability": "mutable",
                            "name": "totalGameCount",
                            "nameLocation": "5490:14:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 705,
                            "src": "5482:22:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 596,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5482:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 599,
                        "initialValue": {
                          "id": 598,
                          "name": "currentGameIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "5507:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5482:41:0"
                      },
                      {
                        "assignments": [
                          601
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 601,
                            "mutability": "mutable",
                            "name": "gameCount",
                            "nameLocation": "5541:9:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 705,
                            "src": "5533:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 600,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5533:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 603,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5553:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5533:21:0"
                      },
                      {
                        "assignments": [
                          605
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 605,
                            "mutability": "mutable",
                            "name": "currentIndex",
                            "nameLocation": "5572:12:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 705,
                            "src": "5564:20:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 604,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5564:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 607,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5587:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5564:24:0"
                      },
                      {
                        "body": {
                          "id": 639,
                          "nodeType": "Block",
                          "src": "5644:188:0",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 632,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 624,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 618,
                                        "name": "games",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 59,
                                        "src": "5679:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$44_storage_$",
                                          "typeString": "mapping(uint256 => struct DiceIt.Game storage ref)"
                                        }
                                      },
                                      "id": 620,
                                      "indexExpression": {
                                        "id": 619,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 609,
                                        "src": "5685:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5679:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Game_$44_storage",
                                        "typeString": "struct DiceIt.Game storage ref"
                                      }
                                    },
                                    "id": 621,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "owner",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 21,
                                    "src": "5679:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 622,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "5697:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 623,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "5697:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "5679:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 631,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 625,
                                        "name": "games",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 59,
                                        "src": "5727:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$44_storage_$",
                                          "typeString": "mapping(uint256 => struct DiceIt.Game storage ref)"
                                        }
                                      },
                                      "id": 627,
                                      "indexExpression": {
                                        "id": 626,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 609,
                                        "src": "5733:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5727:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Game_$44_storage",
                                        "typeString": "struct DiceIt.Game storage ref"
                                      }
                                    },
                                    "id": 628,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "challenger",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 23,
                                    "src": "5727:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 629,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "5750:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 630,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "5750:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "5727:33:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "5679:81:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 638,
                              "nodeType": "IfStatement",
                              "src": "5658:164:0",
                              "trueBody": {
                                "id": 637,
                                "nodeType": "Block",
                                "src": "5775:47:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 635,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 633,
                                        "name": "gameCount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 601,
                                        "src": "5793:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "+=",
                                      "rightHandSide": {
                                        "hexValue": "31",
                                        "id": 634,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5806:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "5793:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 636,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5793:14:0"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 612,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 609,
                            "src": "5619:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 613,
                            "name": "totalGameCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 597,
                            "src": "5623:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5619:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 640,
                        "initializationExpression": {
                          "assignments": [
                            609
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 609,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "5612:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 640,
                              "src": "5604:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 608,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5604:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 611,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 610,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5616:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "5604:13:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 616,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "5639:3:0",
                            "subExpression": {
                              "id": 615,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 609,
                              "src": "5639:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 617,
                          "nodeType": "ExpressionStatement",
                          "src": "5639:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "5599:233:0"
                      },
                      {
                        "assignments": [
                          645
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 645,
                            "mutability": "mutable",
                            "name": "myGames",
                            "nameLocation": "5856:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 705,
                            "src": "5842:21:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Game_$44_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct DiceIt.Game[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 643,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 642,
                                  "name": "Game",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 44,
                                  "src": "5842:4:0"
                                },
                                "referencedDeclaration": 44,
                                "src": "5842:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                  "typeString": "struct DiceIt.Game"
                                }
                              },
                              "id": 644,
                              "nodeType": "ArrayTypeName",
                              "src": "5842:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Game_$44_storage_$dyn_storage_ptr",
                                "typeString": "struct DiceIt.Game[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 652,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 650,
                              "name": "gameCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 601,
                              "src": "5877:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 649,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "5866:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Game_$44_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct DiceIt.Game memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 647,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 646,
                                  "name": "Game",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 44,
                                  "src": "5870:4:0"
                                },
                                "referencedDeclaration": 44,
                                "src": "5870:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                  "typeString": "struct DiceIt.Game"
                                }
                              },
                              "id": 648,
                              "nodeType": "ArrayTypeName",
                              "src": "5870:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Game_$44_storage_$dyn_storage_ptr",
                                "typeString": "struct DiceIt.Game[]"
                              }
                            }
                          },
                          "id": 651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5866:21:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Game_$44_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct DiceIt.Game memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5842:45:0"
                      },
                      {
                        "body": {
                          "id": 701,
                          "nodeType": "Block",
                          "src": "5942:344:0",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 677,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 669,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 663,
                                        "name": "games",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 59,
                                        "src": "5977:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$44_storage_$",
                                          "typeString": "mapping(uint256 => struct DiceIt.Game storage ref)"
                                        }
                                      },
                                      "id": 665,
                                      "indexExpression": {
                                        "id": 664,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 654,
                                        "src": "5983:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5977:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Game_$44_storage",
                                        "typeString": "struct DiceIt.Game storage ref"
                                      }
                                    },
                                    "id": 666,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "owner",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 21,
                                    "src": "5977:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 667,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "5995:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 668,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "5995:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "5977:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 676,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 670,
                                        "name": "games",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 59,
                                        "src": "6025:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$44_storage_$",
                                          "typeString": "mapping(uint256 => struct DiceIt.Game storage ref)"
                                        }
                                      },
                                      "id": 672,
                                      "indexExpression": {
                                        "id": 671,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 654,
                                        "src": "6031:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6025:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Game_$44_storage",
                                        "typeString": "struct DiceIt.Game storage ref"
                                      }
                                    },
                                    "id": 673,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "challenger",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 23,
                                    "src": "6025:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 674,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "6048:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 675,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "6048:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "6025:33:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "5977:81:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 700,
                              "nodeType": "IfStatement",
                              "src": "5956:320:0",
                              "trueBody": {
                                "id": 699,
                                "nodeType": "Block",
                                "src": "6073:203:0",
                                "statements": [
                                  {
                                    "assignments": [
                                      679
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 679,
                                        "mutability": "mutable",
                                        "name": "currentId",
                                        "nameLocation": "6099:9:0",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 699,
                                        "src": "6091:17:0",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 678,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "6091:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 681,
                                    "initialValue": {
                                      "id": 680,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 654,
                                      "src": "6111:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "6091:21:0"
                                  },
                                  {
                                    "assignments": [
                                      684
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 684,
                                        "mutability": "mutable",
                                        "name": "currentItem",
                                        "nameLocation": "6143:11:0",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 699,
                                        "src": "6130:24:0",
                                        "stateVariable": false,
                                        "storageLocation": "storage",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                          "typeString": "struct DiceIt.Game"
                                        },
                                        "typeName": {
                                          "id": 683,
                                          "nodeType": "UserDefinedTypeName",
                                          "pathNode": {
                                            "id": 682,
                                            "name": "Game",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 44,
                                            "src": "6130:4:0"
                                          },
                                          "referencedDeclaration": 44,
                                          "src": "6130:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                            "typeString": "struct DiceIt.Game"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 688,
                                    "initialValue": {
                                      "baseExpression": {
                                        "id": 685,
                                        "name": "games",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 59,
                                        "src": "6157:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$44_storage_$",
                                          "typeString": "mapping(uint256 => struct DiceIt.Game storage ref)"
                                        }
                                      },
                                      "id": 687,
                                      "indexExpression": {
                                        "id": 686,
                                        "name": "currentId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 679,
                                        "src": "6163:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6157:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Game_$44_storage",
                                        "typeString": "struct DiceIt.Game storage ref"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "6130:43:0"
                                  },
                                  {
                                    "expression": {
                                      "id": 693,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 689,
                                          "name": "myGames",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 645,
                                          "src": "6191:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Game_$44_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct DiceIt.Game memory[] memory"
                                          }
                                        },
                                        "id": 691,
                                        "indexExpression": {
                                          "id": 690,
                                          "name": "currentIndex",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 605,
                                          "src": "6199:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "6191:21:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Game_$44_memory_ptr",
                                          "typeString": "struct DiceIt.Game memory"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 692,
                                        "name": "currentItem",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 684,
                                        "src": "6215:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                                          "typeString": "struct DiceIt.Game storage pointer"
                                        }
                                      },
                                      "src": "6191:35:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Game_$44_memory_ptr",
                                        "typeString": "struct DiceIt.Game memory"
                                      }
                                    },
                                    "id": 694,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6191:35:0"
                                  },
                                  {
                                    "expression": {
                                      "id": 697,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 695,
                                        "name": "currentIndex",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 605,
                                        "src": "6244:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "+=",
                                      "rightHandSide": {
                                        "hexValue": "31",
                                        "id": 696,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6260:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "6244:17:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 698,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6244:17:0"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 657,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 654,
                            "src": "5917:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 658,
                            "name": "totalGameCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 597,
                            "src": "5921:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5917:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 702,
                        "initializationExpression": {
                          "assignments": [
                            654
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 654,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "5910:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 702,
                              "src": "5902:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 653,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5902:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 656,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5914:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "5902:13:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 661,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "5937:3:0",
                            "subExpression": {
                              "id": 660,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 654,
                              "src": "5937:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 662,
                          "nodeType": "ExpressionStatement",
                          "src": "5937:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "5897:389:0"
                      },
                      {
                        "expression": {
                          "id": 703,
                          "name": "myGames",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 645,
                          "src": "6303:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Game_$44_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct DiceIt.Game memory[] memory"
                          }
                        },
                        "functionReturnParameters": 595,
                        "id": 704,
                        "nodeType": "Return",
                        "src": "6296:14:0"
                      }
                    ]
                  },
                  "functionSelector": "a40bf061",
                  "id": 706,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "fetchMyGames",
                  "nameLocation": "5412:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 590,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5424:2:0"
                  },
                  "returnParameters": {
                    "id": 595,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 594,
                        "mutability": "mutable",
                        "name": "_myGames",
                        "nameLocation": "5462:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 706,
                        "src": "5448:22:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Game_$44_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct DiceIt.Game[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 592,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 591,
                              "name": "Game",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 44,
                              "src": "5448:4:0"
                            },
                            "referencedDeclaration": 44,
                            "src": "5448:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Game_$44_storage_ptr",
                              "typeString": "struct DiceIt.Game"
                            }
                          },
                          "id": 593,
                          "nodeType": "ArrayTypeName",
                          "src": "5448:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Game_$44_storage_$dyn_storage_ptr",
                            "typeString": "struct DiceIt.Game[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5447:24:0"
                  },
                  "scope": 707,
                  "src": "5403:914:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 708,
              "src": "70:6249:0",
              "usedErrors": []
            }
          ],
          "src": "37:6283:0"
        },
        "id": 0
      }
    }
  }
}
